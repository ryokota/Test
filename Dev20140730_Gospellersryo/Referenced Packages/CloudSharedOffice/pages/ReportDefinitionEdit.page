<apex:page id="page" showHeader="true" sidebar="false" standardStylesheets="true" tabStyle="SOLXYZCSO001__ReportDefinition__c"
standardController="SOLXYZCSO001__ReportDefinition__c" extensions="SOLXYZCSO001.ReportDefinitionEditController" action="{!init}">
<html>
<!-- 認証フレーム -->
<iframe src="{!$Label.field_CSO_URL}/common/AuthenticationApi?id={!URLENCODE($User.UserName)}&tk={!ecmToken}&isEvidence=false" height="0" width="0" id="auth_frame" style="display:none;"/>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<title>Cloud Shared Office / WebReport</title>

<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/redmond/jquery-ui-1.8.9.custom.css')}"/>
<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/ui.jqgrid.css')}"/>
<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.cso, 'css/common.css?20131224')}"/>
<!--
<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/jquery.treeview.css')}"/>
 -->

<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.treeview,'jquery.treeview.css')}"/>

<!--
<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/_kansas.css')}"/>
 -->
<style type="text/css">
/*
#MainDiv * {
    font: normal 11.5px "MS UIGothic","Osaka",Arial,sans-serif;
}
*/
.pbBody *{
    font-size: 11.5px;
    font-family: 'MS UI Gothic','MS PGothic','Hiragino Kaku Gothic Pro','Osaka','Arial','Helvetica',sans-serif;
}
#CsoScriptLoadingArea{
    font-size: 11.5px;
}
body {
    background-color: white;
    margin: 0px;
    padding: 0px;
    overflow-y:scroll;
}

fieldset {
    border-radius: 10px;
    -webkit-border-radius: 10px;
    -moz-border-radius: 10px;
    border: solid 1px silver;
    padding: 5px;
}
/*
.btn {
    background-image: url("{!URLFOR($Resource.FormFormat,'img/btn.png')}");
    font-weight: bold;
    font-size: 12px;
    color: #223344;
    height: 24px;
    padding: 0px 10px 0px 10px;
    border: solid 1px silver;
    border-radius: 3px;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
}

.top_btn {
     width: 30px;
     height: 35px;
     margin-bottom: -5px;
     margin-right: 5px;
}

.topbar_btn{
    width: 45px;
     height: 40px;
     margin:-6px -13px -6px -14px;
}

@media screen and (-webkit-min-device-pixel-ratio:0){
    .topbar_btn{
        width: 42px;
         height: 41px;
         margin:-4px -7px -6px -8px;
    }
}
*/
.required {
    background-color: #FFCCFF;
    border: solid 1px silver;
}

.error {
    border-color: red !important;
}

.veryShortWidth {
    width: 50px;
}

.shortWidth {
    width: 100px;
}

.middleWidth {
    width: 150px;
}

.longWidth {
    width: 240px;
}

.veryLongWidth {
    width: 350px;
}

.extraLongWidth {
    width: 500px;
}

.err {
    background-color: #FFFF00 !important;
}

.err li {
    font-weight: bold !important;
    color: #FF0000 !important;
}

.solid_div {
    border: solid 1px silver;
    padding: 10px;
    background-color: white;
}

.innerHtmlHeader{
    /*border-bottom: 1px solid silver;*/
    height: 40px;
    padding: 5px;
}

.delivInnerHtmlTbl{
    width: 100%;
}

.leftMenu {
    /*background-image: url("{!URLFOR($Resource.FormFormat,'img/left_menu.gif')}");*/
    background-repeat: repeat-x;
    background-position: left center;
    padding: 0px 10px 0px 15px;
    color: #FFFFFF;
    font-weight: bold;
    height: 30px;
    width: 100%;
}

.action img{
    border: none;
    width: 18px;
    height: 18px;
}

.action_nosize{
    width: 18px;
    height: 18px;
}

.separatorDiv{
    /*background-image: url("{!URLFOR($Resource.FormFormat,'img/left_menu.gif')}");*/
    background-color:#53A0EC;
    width: 100%;
    height:20px;
}

.separatorDiv div{
    color: white;
    padding: 3px 0px 3px 5px;
    font-weight: bold;
}

.separatorDiv span{
    color: white;
    padding: 0px 0px 0px 5px;
    font-weight: bold;
}

.off_btn{
    filter:progid:DXImageTransform.Microsoft.BasicImage(grayscale=1);
    Alpha(opacity=10);-moz-opacity:.1;opacity:0.1;
}
.copylight{
    text-align: center;
}
.copyright{
    text-align: center;
}
#MainDiv {
    /*height: 650px;*/
    /*height: 350px;*/
    /*height: 100%;*/
    height: 850px;
    border-left: none;
    border-right: none;
    width: 100%;
    border-bottom: 1px solid silver;
}
.capusTitle{
    font-size: 16px;
    font-weight: bold;
    color: #FF6600;
}

.LabelBGColor{
    background-color:#53A0EC;
}

.subLabelHeight{
    height:20px;
    vertical-align:middle;
}

.reportListTree{
    font-weight: bold;
    vertical-align:top;
    border-right:solid 1px #999;
    overflow:auto;
    overflow-x:auto;
    overflow-y:auto;
    }

.treeSidebarWidth{
    width:250px;
    max-width:250px;
    min-width:250px;
}

#categoryMenu{
    padding:0px 10px;
}

.ActionBtnArea img {
    height: 18px;
    margin-bottom: -5px;
    margin-left: -7px;
    margin-right: 3px;
    width: 18px;
}


.ActionBtnArea{
    float: right;
    margin: 12px 3px 5px 5px;
}
/*
.btn_monsedown {
    background-image: url("{!URLFOR($Resource.FormFormat,'img/btn.click.png')}");
}

.btn_monseout {
    background-image: url("{!URLFOR($Resource.FormFormat,'img/btn.png')}");
}

.btn_mouseup {
    background-image: url("{!URLFOR($Resource.FormFormat,'img/btn.png')}");
}
*/
.commentTextAreaSize {
    width:320px;
    height:100px;
}

.searchOptionTable th {
    text-align: right;
    font-size : small;
}

.safariBar::-webkit-scrollbar {
    -webkit-appearance: none;
}

.safariBar::-webkit-scrollbar:vertical {
    width: 15px;
}

.safariBar::-webkit-scrollbar:horizontal {
    height: 15px;
}

.safariBar::-webkit-scrollbar-thumb {
    border-radius: 8px;
    border: 3px solid #F5F5F5;
    background-color: #C2C2C2;
}

.safariBar::-webkit-scrollbar-track { 
    background-color: #F5F5F5;
}
</style>

<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/fg.menu.css')}"/>
<link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.FormFormat,'css/oneClickMenu.css')}"/>

<apex:include pageName="SOLXYZCSO001__WRCSOBridge" />

<!--1.5だとhdr2が動かない
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery-1.5.min.js')}"></script>
-->

<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.history.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.cookie.js')}"></script>
<!-- <script type="text/javascript" src="../js/splitter-152.js"></script>  -->
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery-ui-1.8.9.custom.min.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/grid.locale-ja.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.jqGrid.min.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.contextmenu.js')}"></script>
<!-- <script type="text/javascript" src="../js/jquery.contextmenu.js"></script>  -->
<!--
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/kansas.js')}"></script>
 -->
<!--
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.treeview.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.treeview.async.js')}"></script>
 -->
<script type="text/javascript" src="{!URLFOR($Resource.treeview,'jquery.treeview.js')}"></script>
<!--
<script type="text/javascript" src="{!URLFOR($Resource.treeview,'jquery.treeview.async.js')}"></script>
 -->
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/fg.menu.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/inputCheck.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.simple.tree.js')}"></script>

<apex:include pageName="SOLXYZCSO001__WRCSOScript" />
<apex:include pageName="SOLXYZCSO001__WRCSOSilverlight"/>

<script type="text/javascript" src="{!URLFOR($Resource.WRCSO,'js/xdr.js')}"></script>


<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/jquery.simple.tree.css')}" />

<style type="text/css">

#LeftPane {
    overflow: auto;
}

.splitter-bar-vertical {
    width: 3px;
}

.leftMenu {
    /*background-image: url("/image/left_menu.gif");*/
    background-repeat: repeat-x;
    background-position: left center;
    padding: 0px 10px 0px 15px;
    color: #FFFFFF;
    font-weight: bold;
    height: 30px;
    width: 100%;
}

body{
    min-width:930px;
/*  overflow-y:hidden;*/
}

#RightPane {
    overflow:hidden;
    min-width:740px;

}

.filetree span.p_machine {  padding: 1px 0 1px 20px; display: block;background: url(/image/manager/printer-tree.png) 0 0 no-repeat; background-size:contain;}
.filetree span.ovl_file {  padding: 1px 0 1px 20px; display: block;background: url(/image/page/overlayIcon.JPG) 0 0 no-repeat; background-size:contain;}
.filetree span.box-master {  padding: 1px 0 1px 20px; display: block;background: url(/image/manager/box-master.png) 0 0 no-repeat ;background-size:contain; }

.filetree li.collapsable span.p_client {  padding: 1px 0 1px 20px; display: block;background: url(/image/manager/Print-client-push.png) 0 0 no-repeat; background-size:contain;}
.filetree li.expandable span.p_client { background: url(/image/manager/Print-client-pull.png) 0 0 no-repeat; background-size:contain;}
.filetree li.last span.p_client { background: url(/image/manager/Print-client-pull.png) 0 0 no-repeat; background-size:contain;}
</style>




</head>

<body class="notdrops">




<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/droppy.css')}" />

<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.droppy.js')}"></script>
<!--
<script type="text/javascript" src="/jsp/rb_js.jsp"></script>
 -->

<style type="text/css">
#menu ul,#menu li {
    margin: 0;
    padding: 0;
}

#menu li {
    list-style: none;
    float: left;
}

#menu a {
    display: block;
    margin: 0 auto;
    color: #fff;
    text-decoration: none;
    background: url(/image/_right.png) right top no-repeat;
}

#menu a span {
    display: block;
    text-align: center;
    background: url(/image/_left.png) left top no-repeat;
    font: bold 12px/ 52px Arial, Helvetica, sans-serif;
    padding: 0 20px;
}

#menu a:hover {
    background-position: right bottom;
}

#menu a:hover span {
    background-position: left bottom;
}

.shadow {
    -webkit-box-shadow: inset 0px 0px 10px 0px #0066ff;
    -moz-box-shadow: inset 0px 0px 10px 0px #0066ff;
    box-shadow: inset 0px 0px 10px 0px #0066ff;
    color: #E6E6FA;
}

.headerMenu{
    width: 100%;
    height: 52px;
    color: white;
    border-collapse: collapse;
    border-spacing: 0px;
    margin: 0px;
    background: url('/image/background.png') repeat-x;
    min-width:993px;

}

#appname {
    font-size: 16px;
    font-weight: bold;
    padding-left: 10px;
    width: 200px;
    vertical-align: middle;
}

.headerMenu a{
    color: #FFFFFF;
}

.header-icon{
    width: 18px;
    height: 18px;
    vertical-align: middle;
    border: none;
}

.headerMenu a{
    color: #FFFFFF;
}

img {
    border: none;
    margin-right:5px;
    margin-left:5px;
}

img.icon {
    width : 18px;
    height : 18px;
    margin-left:3px;
    margin-right:3px;
}

td.logo {
    font-size: 16px;
    font-weight: bold;
    padding-left: 5px;
    width: 200px;
    color:#FFFFFF;
}


#headerMenuUsername{
    text-align:right;
    vertical-align:middle;
    white-space:nowrap;
    padding-left:2px;
    padding-bottom:2px;
}

#headUserName{
    color:#000000;
    font-weight:bold;
}

#headerUserPhoto{
    background-image : url("/dispLoginUserImage?date=' + 1364879786267");
    background-repeat : no-repeat;
    height:45px;
    width:45px;
}

#headerUserPhoto {
    background-image:
        url("/dispLoginUserImage?date=' + 1364879786267")
        ;
    background-repeat: no-repeat;
    height: 45px;
    width: 45px;
}


.headerMenu td{
    vertical-align:middle;
}

#searchform {
    width: 175px;
    //background: url("/image/input4.png") left top no-repeat;
    display: block;
    height: 23px;
    padding-bottom:3px;
    position: relative;
}

#searchBtn    {
    position: absolute;
    top: 2px;
    left: 134px;
    height:14px;
    border: solid 1px silver;
    background-color:#FFFFFF;
    border-radius:0px 3px 3px 0px;
    padding:2px 10px 2px 10px;
}

#reportName {
    width: 130px;
    position: absolute;
    top: 2px;
    height: 16px;


    border: solid 1px silver;
    font-size: 11.5px;
    border-radius:3px 0px 0px 3px;
    padding-left:3px;
}

body {



            min-width:993px;


}

</style>









<table id="MainDiv" cellspacing="0" cellpadding="0" style="min-width:993px;overflow:scroll;">
    <tbody>
        <tr>
            <td  class="treeSidebarWidth reportListTree"  Valign="top">
                <img alt="" src="{!URLFOR($Resource.FormFormat,'img/loading.gif')}" style="position: absolute; top: 40%;left: 100px; display: none;" id="loadingGif"/>


<script type="text/javascript">
Visualforce.remoting.timeout = 120000;
var simpleTreeCollection;
var curList = "ovl";
$(document).ready(function(){
    $.ajaxSetup({ cache: false });

    $('div[id$="ecmImage"]').hide();

    // #10412 - Force scrollbars in Safari
    if (userAgent == "Safari") {
        $("#treeContainer").addClass("safariBar");
        $("#divDrags").addClass("safariBar");
    }
});

var menuKey =0;
var oldMenu=-1;












// 帳票書式のプレビュー
function side_formformatpreview_reload() {
    menuKey = 11;
    if (oldMenu!=menuKey) oldMenu=menuKey;
    curList = "formp";


    $("#formFormatPreview").show();

    $("#sidePreviewBody").children().remove();
}



var leavePageFlag = false;
var goVal;
var submitFormFun=function(){
    return true;
};


</script>
<style type="text/css">
.settingSideMenu{
    margin: 10px 20px;
}

.hidden{
    display: none;
}

#contentsTree *{
    color:#000000;
     white-space: nowrap;
}

#contentsTree img{
     margin-bottom : -4px;
}

.treeSelect {
    color:red;
}

</style>
                <div id="formFormatPreview" class="formFormatPreview" style="overflow: auto; display: block; height: 97%;">
                    <table id="sidePreview" class="previewTable" align="center">
                        <tbody id="sidePreviewBody">
                        </tbody>
                    </table>
                </div>

            </td>

            <td valign="top">
                <div id="RightPane" style="">
                    <div style="/*overflow:auto;*/ width:100%;" id="mainContentsDiv" >


<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/jquery.treeTable.css')}"/>
<link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.FormFormat,'css/colorbox.css')}"/>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.colorbox-min.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.treeTable.js')}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.FormFormat,'js/jquery.tablednd.0.7.min.js')}"></script>

<script type="text/javascript">


var uploaderlist = [];
var imgList = [];
var CTRL_WIDTH = '20px';

var result = true;
var finished = [false, false];
var cnt = 0;
//シート情報
var sheetDto;
var sheetDto = new Object();

sheetDto.sheet_list = new Array();
//書式
var format = new Array();
//シート一覧
var sheetsBase = new Array();
//選択可能シート
var allSheets = new Array();
//通常シート
var normalSheets = new Array();

//差し込みシート
var insertSheets = new Array();

var conditionMap = new Array();

var changeing = false;


$(function() {

    // TABの設定
    $('#tabs').tabs();
    $("#tabs").bind("tabsshow", function(event, ui) {

    });


//    var title = JSMsg["field.31068"];
    var title = '';
    $("#remoteConfirm").attr('title',title);
    $("#remoteConfirm").dialog({autoOpen: false, modal:true, width:450, height:200});

    $("#explanation").keyup(function(){
        //viewCommentLength("explanation", "remainder", 512);
    });
    $("#explanation").keyup();

    $("#searchButton").trigger("click");

    // ボタンのイベント(単ページ追加)
    $('#addSingleButton').click(function(e){

        var items = $('#SelectableSheet :selected');
        var row = $('tr.selected');
        if(row.length > 0) {
            var selected = row[0].id.split('-').pop();
        }
        for(var i = 0; i < items.length; i++) {
            //for (var j in allSheets) {
            for (var j=0; j< allSheets.length;j++) {
                //if (items[i].value == allSheets[j].id) {
                if (items[i].value == allSheets[j].sheet_id) {
                    // 単ページ追加
                    normalSheets.push(allSheets[j]);
                    // 書式追加
                    appendNode(format, allSheets[j], selected);
                    // 差込シートから削除
                    allSheets.splice(j, 1);
                }
            }
        }
        
        var nextOption = items.next('option');
        while(nextOption != null && (typeof nextOption != 'undefined') && nextOption.length == 1){
            if(nextOption[0].text.indexOf("*#") == 0 || nextOption[0].text.indexOf("#") == 0){
                for(var i = 0; i < nextOption.length; i++) {
                    for (var j=0; j< allSheets.length;j++) {
                        if (nextOption[i].value == allSheets[j].sheet_id) {
                            // 単ページ追加
                            normalSheets.push(allSheets[j]);
                            // 書式追加
                            appendNode(format, allSheets[j], selected);
                            // 差込シートから削除
                            allSheets.splice(j, 1);
                        }
                    }
                }
            }else{
                break;
            }
            nextOption = nextOption.next('option');
        }
        
        change();
        createHtmlMappingTable(formFormatDTO);

    });

    $('#allClear').click(function(e) {
        format = new Array();
        normalSheets = new Array();
        allSheets = new Array();
        //for (var i in sheetsBase) {
        for(var i=0;i<sheetsBase.length;i++){
            //allSheets.push(makeSheetInfo(i, sheetsBase[i].name, sheetsBase[i].changeable, sheetsBase[i].type));
            allSheets.push(makeSheetInfo(i, sheetsBase[i].sheet_name, sheetsBase[i].changeable, sheetsBase[i].type));
        }
        change();
        createHtmlMappingTable(formFormatDTO);
    });


    // ボタンのイベント(差し込み追加)
    $('#addInsertButton').click(function(e){
        var items = $('#SelectableSheet :selected');
        var row = $('tr.selected');
        if(row.length > 0) {
            var selected = row[0].id.split('-');
            if (selected.shift() == 'row') {
                var parentSheetId = selected.pop();
                for(var i = 0; i < items.length; i++) {
                    // 書式追加
                    appendInsert(format, makeInsertInfo(randamStr(5), items[i].value, 'PBB'), parentSheetId);
                }
                change();
            }
        }
    });


    // 削除ボタン
    $('#delSheetButton').click(function(e) {
        var items = $('#SelectableSheet :selected');
        var row = $('tr.selected');
        if(row.length > 0) {
            var selected = row[0].id.split('-');
            deleteNode(format, selected);
        }
        change();
        createHtmlMappingTable(formFormatDTO);
    });


    conditionMap['PBB'] = '{!$Label.label_wf_29001}';//前（ページ毎）
    conditionMap['PBA'] = '{!$Label.label_wf_29002}';//改ページの後

    conditionMap['FBA'] = '{!$Label.label_wf_29003}';//条件付き改ページの後


    $('#tabs').css('display','');




    initFFR();




    side_formformatpreview_reload();

    $("#MainDiv input,#MainDiv textarea,#MainDiv select").each(function(){
        $(this).bind("change",function(){
        });
    });
});

/**
* 初期処理
*/
function initFFR() {
    //選択済みテーブル
    $("#selectedTable").treeTable({
        treeColumn:2,
        expandable: true
    });
    $('#rows tr').each(function(){
        if(!$(this).is('.expanded')) {
            $(this).expand();
        }
    });

    $('#selectedTable').tableDnD({
        onDragClass: 'selected',
        onDrop: function(table, row) {

            $('td.rowhandler').removeClass('dragActive');
            var index = $(table.tBodies[0]).children('tr').index($(row));

            if (index == 0) {
                rowMove(row.id);
            } else {
                var destId = table.tBodies[0].rows[index - 1].id;
                rowMove(row.id, destId);
            }
            change();
        },
        onDragStart: function(table, row) {

            $('td.rowhandler').addClass('dragActive');
        },
        dragHandle: ".rowhandler"
    });


    $('.previewImg').colorbox({
        rel:'previewImg',
        opacity:0.8
    });


    $("#selectedTable tr.draggable").hover(function() {
            $(this.cells[0]).addClass("showDragHandle");
        },
        function(){
            $(this.cells[0]).removeClass("showDragHandle");
    });

}




function rowMove(sourceId, destId) {

    var parent;
    var idx;
    var source = getRowData(sourceId, format);
    if (destId == undefined || destId == null) {
        source.parent.splice(source.idx, 1);
        format.splice(0, 0, source.target);
    } else if (destId.match(/-end$/) != null){
        var dest = getRowData(destId.replace(/-end$/, ""), format);
        source.parent.splice(source.idx, 1);
        dest.parent.splice(Number(dest.idx) + 1, 0, source.target);
    }else {
        if (source != undefined && source != null) {
            if (source.target.type != undefined && source.target.type != 'sheet') {
                if (null != getRowData(destId, source.target.children)) {
                    return;
                }
            }
            source.parent.splice(source.idx, 1);
        } else {
            return ;
        }
        var dest = getRowData(destId, format);
        if (dest == null) {
            source.parent = childClone;
            return;
        }
        if (dest.target.type != null && dest.target.type != "sheet") {
            dest.target.children.splice(0,0,source.target);
        }else {
            dest.parent.splice(Number(dest.idx) + 1, 0, source.target);
        }
    }
}


function getRowData(id, fmt) {

    var target = null;
    if (fmt == undefined || fmt == null) {
        fmt = format;
    }
    var selSep = id.split('-');
    //for (var i in fmt) {
    for(var i=0;i<fmt.length;i++){
        if (fmt[i].type != "sheet") {
            //if (compareArray(fmt[i].id.split('-'), selSep)) {
            if (compareArray(fmt[i].sheet_id.split('-'), selSep)) {
                var obj = {target : fmt[i], parent:fmt, idx : i };
                return obj;
            } else {
                target = getRowData(id, fmt[i].children);
                if (target != null) {
                    return target;
                }
            }
        } else {
            if (fmt[i].sheet_id == selSep[selSep.length - 1]) {
                var obj = {target : fmt[i], parent:fmt, idx : i };
                return obj;
            }
        }
    }
    return null;
}


/**
* キャンセルボタンの戻り先指定
*/
function back() {
    //var url = "/FormFormatComplexList?id=${param.id}&ffType=dir";
    //loadHtml(url);
    top.location.href = '{!JSENCODE($currentPage.parameters.retURL)}';
}

function move(moveFrom, moveTo){
   $("#" + moveFrom + " option:selected").each(function(){
       var val = $(this).val();
       var text = $(this).text();
       $("#" + moveTo).append($("<option>").val(val).text(text));
       $(this).remove();
   });
}

var USERNAME = '{!JSENCODE($User.username)}';
var CREDENTIAL = '{!JSENCODE(credential)}';
var SFUSERID = '{!JSENCODE($User.Id)}';//18桁


/**
* 初期化
*/
function resetSheetSelect() {
    allSheets = new Array();
    normalSheets = new Array();
    format = new Array();
    sheetsBase = new Array();
    insertSheets = new Array();
}

/**
* 差し込みシート一覧作成
*/
function makeInsSheetList(insObj) {

    var select = $('<select>').attr('id', 'sheet-' + insObj.insert_sheet_id);

    for(var i =0;i<insertSheets.length;i++){

        select.append($('<option>').attr('value', insertSheets[i].sheet_id).text(insertSheets[i].sheet_name));
    }

    select.change(function(){

        changeInsSheet($(this).attr('id'), $(this).children("option:selected").val(), $(this).children("option:selected").text());
    });

    select.val(insObj.nid).change();
    return select;
}


/**
*  条件オブジェクト生成
*/
function makeCondition(insObj) {

    var select = $('<select>').attr('id', 'condition-' + insObj.insert_sheet_id);

    for (var val in conditionMap) {
    if(val != 'remove'){

        select.append($('<option>').attr('value', val).text(conditionMap[val]));

        }
    }


    select.change(function(){
        changeCondition($(this).attr('id'), $(this).val());
    });

    select.val(insObj.insert_condition).change();

    return select;
}


/**
* 差し込み生成
*/
function makeInsertInfo(id, sheet, condition) {

    var insert = {};
    var name = null;
    for(var i=0;i<sheetsBase.length;i++){
        if (sheetsBase[i].sheet_id == sheet) {
            name = sheetsBase[i].sheet_name;
            break;
        }
    }
    insert['nid']    = sheet;

    insert['insert_sheet_name'] = name;
    insert['type']  = 'insert';
    insert['sheet']  = sheet;
    insert['insert_condition'] = condition;
    return insert;
}

/**
* シート生成
*/
function makeSheetInfo(id, name, changeable, type) {
    var sheet = {};
    //sheet['id']    = id;
    sheet['sheet_id'] = id.toString();
    //sheet['name']  = name;
    sheet['sheet_name'] = name;
    sheet['type']  = type;
    sheet['changeable'] = changeable;
    //sheet['insert']  = new Array();
    sheet['insertions']  = new Array();

    sheetNamesheetIdMap[name] = id;

    return sheet;
}

/**
 * ノード追加
 */
 function appendRow(node, step, selectId, isSubReport) {

    var margin = {
            "margin-right" : "5px",
            "margin-left" : "5px"
    };
    //var delButton = $('<input type="image" src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px">').attr('alt', '{!$Label.field_common_remove}').attr('title', '{!$Label.field_common_remove}').css(margin);
    //var repButton = $('<input type="image" src="{!URLFOR($Resource.FormFormat,'img/Repeat.png')}" height="18px">').attr('alt', '{!$Label.label_wf_29004}').attr('title', '{!$Label.label_wf_29004}').css(margin);//繰り返し
    //var insButton = $('<input type="image" src="{!URLFOR($Resource.FormFormat,'img/add.png')}" height="18px">').attr('alt', '{!$Label.label_wf_29005}').attr('title', '{!$Label.label_wf_29005}').css(margin);//条件追加
    //var trcButton = $('<input type="image" src="{!URLFOR($Resource.FormFormat,'img/fd-copy.png')}" height="18px">').attr('alt', '{!$Label.label_wf_29006}').attr('title', '{!$Label.label_wf_29006}').css(margin);//複写
    var delButton = $('<img src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px">').attr('alt', '{!$Label.field_common_remove}').attr('title', '{!$Label.field_common_remove}').css(margin);
    var repButton = $('<img src="{!URLFOR($Resource.FormFormat,'img/Repeat.png')}" height="18px">').attr('alt', '{!$Label.label_wf_29004}').attr('title', '{!$Label.label_wf_29004}').css(margin);
    var insButton = $('<img src="{!URLFOR($Resource.FormFormat,'img/add.png')}" height="18px">').attr('alt', '{!$Label.label_wf_29005}').attr('title', '{!$Label.label_wf_29005}').css(margin);
    var trcButton = $('<img src="{!URLFOR($Resource.FormFormat,'img/fd-copy.png')}" height="18px">').attr('alt', '{!$Label.label_wf_29006}').attr('title', '{!$Label.label_wf_29006}').css(margin);


    if (node.type != 'sheet' && node.type != undefined) {
        //var row = $('<tr>').attr('id', node.id).addClass('draggable');
        var row = $('<tr>').attr('id', node.sheet_id).addClass('draggable');
        //var endTr = $('<tr>').attr('id', node.id + '-end').addClass('nodrag');
        var endTr = $('<tr>').attr('id', node.sheet_id + '-end').addClass('nodrag');

        if (step != null) {
            row.addClass("child-of-" + step);
            endTr.addClass("child-of-" + step);
        }

        //delButton.attr('onClick', 'deleteNode(format, "' + node.id + '");change();');
        delButton.attr('onClick', 'deleteNode(format, "' + node.sheet_id + '");change();');
        row.append($('<td>').addClass("rowhandler").addClass('sortCell').append($("<div>").addClass("drag").addClass("row")));
        row.append($('<td>').append(delButton).addClass('controlCell').css("white-space","nowrap"));
        var selectedTd = $('<td>').addClass("sheetname");
        var endTd = $('<td>').addClass("sheetname");
        if (node.type == 'repeat') {
            selectedTd.append('<span>{!$Label.label_wf_29004}</span>');//繰り返し
            row.addClass('repeat');
            endTd.append('<span>{!$Label.label_wf_29007}</span>');//繰り返し終了
        } else {
            selectedTd.append('<span>{!$Label.label_wf_29006}</span>');//複写
            row.addClass('trace');
            endTd.append('<span>{!$Label.label_wf_29008}</span>');//複写終了
        }
        row.append(selectedTd).append($('<td>'));


        $('#rows').append(row);
        for(var i=0;i<node.children.length;i++){
                appendRow(node.children[i], node.sheet_id, selectId, false);
        }
        endTr.append($('<td>')).append($('<td>')).append(endTd).append($('<td>'));
        $('#rows').append(endTr);

    } else {
        // 単ページ
        var changeable = null;
        //var id = 'row-'+node.id;
        var id = 'row-'+node.sheet_id;
        //var row = $('<tr>').attr('id', id).addClass("sheet").addClass('draggable');;
        var row = $('<tr>').attr('id', id).addClass("sheet");
        if(node.sheet_name.indexOf("#") != 0 && !isSubReport){
            row.addClass('draggable');
        }
        
        if (step != null) {
            row.addClass("child-of-" + step);
        }

        delButton.attr('onClick', 'deleteNode(format, "' + id + '");change();createHtmlMappingTable(formFormatDTO);');
        repButton.attr('onClick', 'repeatNode(format,"' + id + '");change();');
        trcButton.attr('onClick', 'traceNode(format, "' + id + '");change();');
        if(node.sheet_name.indexOf("#") == 0){
            row.append($('<td>').addClass('sortCell').append($("<div>").addClass("row")));
            row.append($('<td>').css("white-space","nowrap"));
        } else if(isSubReport){
            //row.append($('<td>').addClass('sortCell').append($("<div>").addClass("row")));
            //row.append($('<td>').append(delButton).css("white-space","nowrap"));
            row.append($('<td>').addClass("rowhandler").addClass('sortCell').append($("<div>").addClass("drag").addClass("row")));
            row.append($('<td>').append(delButton).append(repButton).append(trcButton).css("white-space","nowrap"));
        } else {
            row.append($('<td>').addClass("rowhandler").addClass('sortCell').append($("<div>").addClass("drag").addClass("row")));
            row.append($('<td>').append(delButton).append(repButton).append(trcButton).css("white-space","nowrap"));
        }
        
        var selectedTd = $('<td>').addClass("sheetname");
        if (node.changeable) {
            selectedTd.append($("<img src=\'{!URLFOR($Resource.FormFormat,'img/Variable_form.png')}\' width='20px'>").css("margin", "0"));
        } else {
            selectedTd.append($("<img src=\'{!URLFOR($Resource.FormFormat,'img/fixed_document.png')}\' width='20px'>").css("margin", "0"));
        }
        //row.append(selectedTd.append("<span>"+ node.name + "</span>"));
        row.append(selectedTd.append("<span>"+ node.sheet_name + "</span>"));


        //if(node.insert != undefined && node.insert != null && node.insert.length>0){
        if(node.insertions != undefined && node.insertions != null && node.insertions.length>0){
        // 差し込み
        var list = $('<ul>');
        list.addClass('insertionSheet');
        //for (var i in node.insert) {
        for(var i=0;i<node.insertions.length;i++){

            var li = $('<li>').append(makeCondition(node.insertions[i]), '  ', makeInsSheetList(node.insertions[i]), '  ');

            //var upBt = '<input type="image" src="{!URLFOR($Resource.FormFormat,'img/arrow_up_white.png')}" height="18px" onClick="InsUp(\'' + node.id + '\',\'' + node.insert[i].id + '\');">';
            //var upBt = '<input type="image" src="{!URLFOR($Resource.FormFormat,'img/arrow_up_white.png')}" height="18px" onClick="InsUp(\'' + node.sheet_id + '\',\'' + node.insertions[i].insert_sheet_id + '\');">';
            var upBt = '<img src="{!URLFOR($Resource.FormFormat,'img/arrow_up_white.png')}" height="18px" onClick="InsUp(\'' + node.sheet_id + '\',\'' + node.insertions[i].insert_sheet_id + '\');">';

            //var delBt = '<input type="image" src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px" onClick="InsDel(\'' + node.id + '\',\'' + node.insert[i].id + '\')">';
            //var delBt = '<input type="image" src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px" onClick="InsDel(\'' + node.sheet_id + '\',\'' + node.insertions[i].insert_sheet_id + '\')">';
            var delBt = '<img src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px" onClick="InsDel(\'' + node.sheet_id + '\',\'' + node.insertions[i].insert_sheet_id + '\')">';

            //var downBt = '<input type="image" src="{!URLFOR($Resource.FormFormat,'img/arrow_down_white.png')}" height="18px" onClick="InsDown(\'' + node.id + '\',\'' + node.insert[i].id + '\')">';
            //var downBt = '<input type="image" src="{!URLFOR($Resource.FormFormat,'img/arrow_down_white.png')}" height="18px" onClick="InsDown(\'' + node.sheet_id + '\',\'' + node.insertions[i].insert_sheet_id + '\')">';
            var downBt = '<img src="{!URLFOR($Resource.FormFormat,'img/arrow_down_white.png')}" height="18px" onClick="InsDown(\'' + node.sheet_id + '\',\'' + node.insertions[i].insert_sheet_id + '\')">';

            li.append(upBt);
            li.append(delBt);
            li.append(downBt);
            list.append(li);
        }



        }
        insButton.attr('onClick', 'appendInsert(format, makeInsertInfo(randamStr(5), sheetsBase[0].sheet_id, "PBB"), ' + node.sheet_id + ');change();');

        if(node.sheet_name.indexOf("#") == 0){
            row.append($('<td>').append(list));
        } else {
            row.append($('<td>').append(insButton).append(list));
        }

        $('#rows').append(row);


        if (selectId != undefined && selectId != null) {
            if (row.attr('id') == selectId) {
                row.addClass("ui-selected");
                row.addClass("selected");
            }
        }


    }
}

/**
* 選択済みシート表示変更
*/
function change(selectId) {

    // 選択可能シート
    $('#SelectableSheet').children().remove();
    //for (var i in allSheets) {
    for(var i=0;i<allSheets.length;i++){
        var changeable = "";
        //var option = $('<option>').attr('value', allSheets[i].id);
        var option = $('<option>').attr('value', allSheets[i].sheet_id);


        if (allSheets[i].changeable) {
            changeable = "*";
        }
        //$('#SelectableSheet').append(option.text(changeable + allSheets[i].name));
        if(option != ""){
            //$('#SelectableSheet').append(option.text(changeable + allSheets[i].name));
            $('#SelectableSheet').append(option.text(changeable + allSheets[i].sheet_name));
            if(allSheets[i].sheet_name.indexOf("#") == 0){
                $('#SelectableSheet').children('option:last').attr('disabled','disabled');
            }
        }
    }
    // 選択済みシート
    $('#rows').children().remove();
    //for (var i in format) {
    for(var i=0;i<format.length;i++){
/*      appendRow(format[i], 0, selectId); */
        if((i+1) < format.length && format[i+1].sheet_name.indexOf("#") == 0){
            appendRow(format[i], null, selectId, true);
        } else {
            appendRow(format[i], null, selectId, false);
        }
    }

    ReloadPreview();

    initFFR();

}

/**
* 書式に要素を追加する
*/
function appendNode(fmt, node, selected) {
    if (selected === undefined) {
        fmt.push(node);
    } else {
        //for (var i in fmt) {
        for(var i=0;i<fmt.length;i++){
            //if (selected == fmt[i].id) {
            if (selected == fmt[i].sheet_id) {
                fmt.splice(i+1, 0, node);
            }
            if (fmt[i].type != 'sheet') {
                //var id = fmt[i].id.split('-').pop();
                var id= fmt[i].sheet_id.split('-').pop();
                if (id == selected) {
                    fmt[i].children.push(node);
                } else {
                    appendNode(fmt[i].children, node, selected);
                }
            }
        }
    }
}



/**
* 書式に条件を追加する
*/
function appendInsert(fmt, insert, selected) {

    for(var i=0;i<fmt.length;i++){
        if (fmt[i].type != 'sheet') {
            appendInsert(fmt[i].children, insert, selected);
        } else {
            if (selected == fmt[i].sheet_id) {
                var len = fmt[i].insertions.length;
                insert.insert_sheet_id = "sheet-" + fmt[i].sheet_id + "-" + len;
                fmt[i].insertions.push(insert);
            }
        }
    }
}

/**
* 書式から要素を削除する
*/
function deleteNode(fmt, selected) {

    if (selected == undefined) {
        return null;
    } else if(fmt.length == 0) {
        return null;
    } else {
        var selSep = selected.split('-');
        //for (var i in fmt) {
        for(var i=0;i<fmt.length;i++){
            if (fmt[i].type != "sheet") {
                //if (compareArray(fmt[i].id.split('-'), selSep)) {
                if(compareArray(fmt[i].sheet_id.split('-'), selSep)){
                    var target = fmt[i];
                    // 繰り返しが選択された場合
                    deleteChildren(fmt[i].children);
                    deleteSheet(fmt, i);
                    return target;
                } else {
                    var target = deleteNode(fmt[i].children, selected);
                    if (target != null) {
                        // 繰り返しの要素を選択された場合
                        return target;
                    }
                }
            //} else if (selSep[selSep.length - 1] == fmt[i].id) {
            } else if (selSep[selSep.length - 1] == fmt[i].sheet_id) {
                var target = fmt[i];
                allSheets.push(fmt[i]);
                deleteSheet(fmt, i);
                
                while(fmt[i] != null && (typeof fmt[i] != 'undefined') && fmt[i].sheet_name.indexOf("#") == 0){
                    allSheets.push(fmt[i]);
                    deleteSheet(fmt, i);
                }
                return target;
            }
        }
    }
    return null;
}

function deleteChildren(fmt) {

    if (fmt == undefined || fmt == null) {
        return;
    }
    for (var i = fmt.length-1; i >= 0; i--) {
        if (fmt[i].type != undefined && fmt[i].type != 'sheet') {
            deleteChildren(fmt[i].children);
        } else {
            var target = fmt[i];
            allSheets.push(fmt[i]);
            deleteSheet(fmt, i);
        }
    }
}

/**
* InsDelボタン処理
*/
function InsDel(nid, iid, fmt) {

    if (fmt == undefined || fmt == null) {
        fmt = format;
    }
    //for (var i in fmt) {
    for(var i=0;i<fmt.length;i++){
        if (fmt[i].type != "sheet") {
            if (InsDel(nid, iid, fmt[i].children)) {
                return true;
            }
        //} else if (fmt[i].id == nid) {
        } else if (fmt[i].sheet_id == nid) {
            //for (var j in fmt[i].insert) {
            for(var j = 0; j< fmt[i].insertions.length;j++) {
                //if (fmt[i].insert[j].id == iid) {
                if (fmt[i].insertions[j].insert_sheet_id == iid) {
                    //deleteSheet(fmt[i].insert, j);
                    deleteSheet(fmt[i].insertions, j);
                    change();
                    return true;
                }
            }
        }
    }

    return false;
}
/**
* 指定されたインデックスの削除
*/
function deleteSheet(fmt, idx) {

    //fmt[idx].insert = new Array();
    fmt[idx].insertions = new Array();
    fmt.splice(idx, 1);
}


//繰り返し処理
function repeatNode(fmt, selected) {
    if (selected === undefined) {
        return false;
    } else if(fmt.length == 0) {
        return false;
    } else {
        var selSep = selected.split('-');
        //for (var i in fmt) {
        for(var i=0;i<fmt.length;i++){
            if (fmt[i].type != "sheet") {
                if (repeatNode(fmt[i].children, selected)) {
                    // 繰り返しの要素を選択された場合
                    return true;
                }
            //} else if (selSep[selSep.length - 1] == fmt[i].id) {
            } else if (selSep[selSep.length - 1] == fmt[i].sheet_id) {
                repeatSheet(fmt, i);
                return true;
            }
        }
    }
    return false;
}

function repeatSheet(fmt, idx) {

    var repSheet = fmt[idx];
    var repeat = makeRepeatInfo(randamStr(5));
    repeat['children'][0] = repSheet;
    fmt.splice(idx, 1, repeat);
}


/**
* 繰り返し生成
*/
function makeRepeatInfo(id) {
    var repeat = {};
    //repeat['id']    = 'repeat-' + id;
    repeat['sheet_id'] = 'repeat-' + id;
    //repeat['name']  = '{!$Label.label_wf_29004}';
    repeat['sheet_name']  = '{!$Label.label_wf_29004}';
    repeat['type']  = 'repeat';
    repeat['children'] = new Array();
    return repeat;
}

/**
 * トレース処理
 */
function traceNode(fmt, selected) {
    if (selected === undefined) {
        return false;
    } else if(fmt.length == 0) {
        return false;
    } else {
        var selSep = selected.split('-');
        //for (var i in fmt) {
        for(var i=0;i<fmt.length;i++){
            if (fmt[i].type != "sheet") {
                if (traceNode(fmt[i].children, selected)) {
                    // トレースの要素を選択された場合
                    return true;
                }
            //} else if (selSep[selSep.length - 1] == fmt[i].id) {
            } else if (selSep[selSep.length - 1] == fmt[i].sheet_id) {
                traceSheet(fmt, i);
                return true;
            }
        }
    }
    return false;
}

function traceSheet(fmt, idx) {

    var repSheet = fmt[idx];
    var repeat = makeTraceInfo(randamStr(5));
    repeat['children'][0] = repSheet;
    fmt.splice(idx, 1, repeat);
}

function makeTraceInfo(id) {
    var repeat = {};
    //repeat['id']    = 'trace-' + id;
    repeat['sheet_id']    = 'trace-' + id;
    //repeat['name']  = '{!$Label.label_wf_29006}';
    repeat['sheet_name']  = '{!$Label.label_wf_29006}';
    repeat['type']  = 'trace';
    repeat['children'] = new Array();
    return repeat;
}


/**
* Upボタン処理
*/
function nodeUp(fmt, selected) {

    if (selected === undefined) {
        return false;
    } else if(fmt.length == 0) {
        return false;
    } else {
        var selSep = selected.split('-');
        //for (var i in fmt) {
        for(var i=0;i<fmt.length;i++){
            if (fmt[i].type != "sheet") {
                //if (compareArray(fmt[i].id.split('-'), selSep)) {
                if (compareArray(fmt[i].sheet_id.split('-'), selSep)) {
                    upSheet(fmt, i);
                    return true;
                } else if (nodeUp(fmt[i].children, selected)) {
                    // 繰り返しの要素を選択された場合
                    return true;
                }
            //} else if (selSep[selSep.length - 1] == fmt[i].id) {
            } else if (selSep[selSep.length - 1] == fmt[i].sheet_id) {
                upSheet(fmt, i);
                return true;
            }
        }
    }
    return false;
}

/**
* InsUpボタン
*/
function InsUp(nid,iid, fmt) {

    if (fmt == undefined || fmt == null) {
        fmt = format;
    }
    //for (var i in fmt) {
    for(var i=0;i<fmt.length;i++){
        if (fmt[i].type != "sheet") {
            if (InsUp(nid, iid, fmt[i].children)) {
                return true;
            }
        //} else if (fmt[i].id == nid) {
        } else if (fmt[i].sheet_id == nid) {
            //for (var j in fmt[i].insert) {
            for(var j=0;j<fmt[i].insertions.length;j++){
                //if (fmt[i].insert[j].id == iid) {
                if (fmt[i].insertions[j].insert_sheet_id == iid) {
                    //upSheet(fmt[i].insert, j);
                    upSheet(fmt[i].insertions, j);
                    change();
                    return true;
                }
            }
        }
    }
    return false;
}



/**
* 配列要素のUp処理
*/
function upSheet(fmt, idx) {
    if (idx == 0) {
        return;
    }
    var selFmt = fmt[idx];
    fmt.splice(idx, 1);
    fmt.splice(idx-1, 0, selFmt);
}


/**
* Downボタン処理
*/
function nodeDown(fmt, selected) {
    if (selected === undefined) {
        return false;
    } else if(fmt.length == 0) {
        return false;
    } else {
        var selSep = selected.split('-');
        //for (var i in fmt) {
        for(var i=0;i<fmt.length;i++){
            if (fmt[i].type != "sheet") {
                if (compareArray(fmt[i].id.split('-'), selSep)) {
                    downSheet(fmt, i);
                    return true;
                } else if (nodeDown(fmt[i].children, selected)) {
                    // 繰り返しの要素を選択された場合
                    return true;
                }
            //} else if (selSep[selSep.length - 1] == fmt[i].id) {
            } else if (selSep[selSep.length - 1] == fmt[i].sheet_id) {
                downSheet(fmt, i);
                return true;
            }
        }
    }
    return false;
}


/**
* InsDownボタン
*/
function InsDown(nid, iid, fmt) {

    if (fmt == undefined || fmt == null) {
        fmt = format;
    }
    //for (var i in fmt) {
    for(var i=0;i<fmt.length;i++){
        if (fmt[i].type != "sheet") {
            if (InsDown(nid, iid, fmt[i].children)) {
                return true;
            }
        //} else if (fmt[i].id == nid) {
        } else if (fmt[i].sheet_id == nid) {
            //for (var j in fmt[i].insert) {
            for(var j=0;j<fmt[i].insertions.length;j++){
                //if (fmt[i].insert[j].id == iid) {
                if (fmt[i].insertions[j].insert_sheet_id == iid) {
                    //downSheet(fmt[i].insert, j);
                    downSheet(fmt[i].insertions, j);
                    change();
                    return true;
                }
            }
        }
    }
    return false;
}


/**
* 配列要素のDown処理
*/
function downSheet(fmt, idx) {

    if (idx == fmt.length - 1) {
        return;
    }
    var selFmt = fmt[idx];
    fmt.splice(idx, 1);
    fmt.splice(idx-0+1, 0, selFmt);
}

/**
* 差し込みシート変更処理
*/
function changeInsSheet(id, value, text, fmt) {

    if (fmt == undefined || fmt == null) {
        fmt = format;
    }

    //for (var i in fmt) {
    for(var i=0;i<fmt.length;i++){
        if (fmt[i].type != "sheet") {

            if (changeInsSheet(id, value, text, fmt[i].children)) {
                return true;
            }
        //} else if (fmt[i].insert != undefined && fmt[i].insert != null && fmt[i].insert.length != 0) {
        } else if (fmt[i].insertions != undefined && fmt[i].insertions != null && fmt[i].insertions.length != 0) {

            //for (var j in fmt[i].insert) {
            //for(var j=0;j<fmt[i].insert.length;j++){
            for(var j=0;j<fmt[i].insertions.length;j++){

                //if (("sheet-" + fmt[i].insert[j].id) == id) {
                if (("sheet-" + fmt[i].insertions[j].insert_sheet_id) == id) {

                    //fmt[i].insert[j].nid = value
                    fmt[i].insertions[j].nid = value;
                    //fmt[i].insert[j].name = text;
                    fmt[i].insertions[j].insert_sheet_name = text;

                    ReloadPreview();
                    return true;
                }
            }
        }
    }
    return false;

}


/**
* 条件変更処理
*/
function changeCondition(id, value, fmt) {

    if (fmt == undefined || fmt == null) {
        fmt = format;
    }

    //for (var i in fmt) {
    for(var i=0;i<fmt.length;i++){
        if (fmt[i].type != "sheet") {
            if (changeCondition(id, value, fmt[i].children)) {
                return true;
            }
        //} else if (fmt[i].insert != undefined && fmt[i].insert != null && fmt[i].insert.length != 0) {
        } else if (fmt[i].insertions != undefined && fmt[i].insertions != null && fmt[i].insertions.length != 0) {
            //for (var j in fmt[i].insert) {
            for(var j=0;j<fmt[i].insertions.length;j++){
                //if (("condition-" + fmt[i].insert[j].id) == id) {
                if (("condition-" + fmt[i].insertions[j].insert_sheet_id) == id) {

                    //fmt[i].insert[j].condition = value;
                    fmt[i].insertions[j].insert_condition = value;

                    ReloadPreview();
                    return true;
                }
            }
        }
    }
    return false;
}

/**
* ID比較
*/
function compareArray(array1, array2) {
    if (array1.length != array2.length) {
        return false;
    }

    //for (var acnt in array1) {
    for(var acnt=0;acnt<array1.length;acnt++){
        if (array1[acnt] != array2[acnt]) {
            return false;
        }
    }
    return true;
}

/**
*
*/
function randamStr(n) {
    var sample = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'.split('');
    var str = '';
    for (var i = 0; i < n; i++) {
        str += sample[Math.floor(Math.random() * sample.length)];
    }
    return str;
}



/**
* プレビュー再描画
*/
function ReloadPreview(fmt, elem, ctrlImg) {

    if (fmt == undefined || fmt == null) {
        fmt = format;
    }
    if (elem == undefined || elem == null) {
        elem = $("#sidePreviewBody");
        //削除
        elem.children().remove();
    }

    var first = true;
    var insLen = 0;
    var th = null;
    //for (var i in fmt) {
    for(var i=0;i<fmt.length;i++){
        var tr = $('<tr>');

        if (fmt[i].type != "sheet") {
        //繰り返し
            if (fmt[i].children == undefined ||
                    fmt[i].children == null ||
                    fmt[i].children.length == 0) {
                continue;
            }
            if (!first) {
            } else {
                if (ctrlImg != undefined || ctrlImg != null) {
                    th = $('<td>');
                    var ctrl = $("<img width='"+ CTRL_WIDTH + "'>");
                    ctrl.attr('src', ctrlImg);
                    th.append(ctrl);
                    tr.append(th);
                }
                first = false;
            }
            var thr = $('<th>');
            var subTbl = $('<table>');
            var tb = $('<tbody>');
            var img;
            if (fmt[i].type == 'repeat') {
                img = '{!URLFOR($Resource.FormFormat,"img/arrow-curve-down.png")}';
            } else {
                img = '{!URLFOR($Resource.FormFormat,"img/bracket.png")}';
            }

            ReloadPreview(fmt[i].children, tb, img);
            subTbl.addClass('previewTable').append(tb);
            thr.append(subTbl);
            tr.append(thr);
            elem.append(tr);
        } else {
            if (!first) {
            } else {
                if (ctrlImg != undefined || ctrlImg != null) {
                    th = $('<td>');
                    var ctrl = $("<img width='"+ CTRL_WIDTH + "'>");
                    ctrl.attr('src', ctrlImg);
                    th.append(ctrl);
                    tr.append(th);
                }
                first = false;
            }
            var td = $('<td>');
            tr.append(td);
            elem.append(tr);
//            addPreview(td, fmt[i].id,fmt[i].name, sheetDto.sheet_list[fmt[i].id].thumnail, fmt[i].changeable);
            addPreview(td, fmt[i].sheet_id,fmt[i].sheet_name, sheetDto.sheet_list[fmt[i].sheet_id].sheet_thum, fmt[i].changeable);

            //差し込み
            //if (fmt[i].insert != undefined && fmt[i].insert != null && fmt[i].insert.length != 0){
            if (fmt[i].insertions != undefined && fmt[i].insertions != null && fmt[i].insertions.length != 0){
                //for (var j in fmt[i].insert) {
                for(var j=0;j<fmt[i].insertions.length;j++){
                    var insTr = $('<tr>');
                    var insTh = $('<th>');
                    var insSubTbl = $('<table>');
                    var insTb = $('<tbody>');
                    insSubTbl.append(insTb);
                    insTh.append(insSubTbl);
                    insTr.append(insTh);
                    elem.append(insTr);
                    //PreviewInsertion(insTb, fmt[i].insert[j]);

                    PreviewInsertion(insTb, fmt[i].insertions[j]);
                }
            }
            //insLen = insLen + fmt[i].insert.length;
            insLen = insLen + fmt[i].insertions.length;
            if (th != null) {
                th.attr('rowspan', fmt.length + insLen).attr('width', CTRL_WIDTH);
            }


        }
    }
    $('#formFormatPreview a').colorbox();

    $('.previewImg').colorbox({
        rel:'previewImg',
        opacity:0.8
    });

}


/**
* 差し込みプレビュー
*/
function PreviewInsertion(elem, insertion) {

    var condTr = $('<tr>');
    var condTh = $('<th>');
    var condTdh = $('<td valign="top">');

    var idx = insertion.nid;

//  var imgPath = "/StoreOverlayImage?path=" + sheetDto.sheet_list[idx].thumnail;
    var imgPath =  sheetDto.sheet_list[idx].sheet_thum;

    //condTh.attr("colspan", "2").attr('align', 'left').text(conditionMap[insertion.condition]);
    condTh.attr("colspan", "2").attr('align', 'left').text(conditionMap[insertion.insert_condition]);

    condTdh.width(CTRL_WIDTH);
    condTdh.append($("<img width='"+ CTRL_WIDTH + "'>").attr('src', "{!URLFOR($Resource.FormFormat,'img/arrow-key-down.png')}"));
    var data = $("<td>");

    elem.append(condTr.append(condTh));
    elem.append($('<tr>').append(condTdh, data));
    //addPreview(data, insertion.id.split('-').join('_'), insertion.name, sheetDto.sheet_list[idx].thumnail, insertion.changeable);
    addPreview(data, insertion.insert_sheet_id.split('-').join('_'), insertion.insert_sheet_name, sheetDto.sheet_list[idx].sheet_thum, insertion.changeable);

}

/**
* プレビュー画像表示
*/
function addPreview(td, id, name, thum, changeable) {
    //var imgPath = "/StoreOverlayImage?path=" + thum;
    var imgPath = thum;
    var pid = "prev_" + id;
    var tid="thum_" + id;


    td.addClass('sidePreview').append(div);
    var div =$('<div>');
    var imgBox = $('<a>').attr('href', imgPath).addClass("previewImg");
    imgBox.attr('id', pid);
    imgBox.click(function (){

        document.body.style.overflow="auto";
    });
    td.append(div.append(imgBox));
    loadImg2(imgBox, pid, imgPath, tid);

    td.append("<br>" + name);
    if (changeable) {
        td.addClass('changeableSheet');
        div.css({"position":"relative"});
        var icon = $('<div>');
        icon.css({"position": "absolute"});
        icon.append("<img src=\'{!URLFOR($Resource.FormFormat,'img/Variable_form.png')}\' width='32px'>");
        div.append(icon);
    } else {
        td.addClass('fixedSheet');
        div.css({"position":"relative"});
        var icon = $('<div>');
        icon.css({"position": "absolute"});
        icon.append("<img src=\'{!URLFOR($Resource.FormFormat,'img/fixed_document.png')}\' width='32px'>");
        div.append(icon);
    }

}


/**
* プレビュー画像表示
*/
function loadImg2(parentNode, id, imgPath, thum){
    var img = null;
    img = new Image();
    $(img).load();
    jQuery(img).load(function() {
        //読み込み完了時の処理
//      $("#" + id).html("");
        $("#" + thum).remove();


        if(document.getElementById(id) != null){
            document.getElementById(id).appendChild(img);

            if($("#"+thum).width() <= $("#"+thum).height()){

                // 画像の表示maxサイズ
                var heightSize = 190;
                var widthSize = 180;

                // リサイズをしてもどちらか１辺でも基準より大きくなった際には基準サイズを小さくして再度リサイズ。条件を満たすまで続ける
                while(true){
                    // 190はheightのmaxサイズなので、実画像のheightで割り拡大率を取得。
                    // その拡大率を実画像のwidthで掛け、Math.roundで小数を丸め込み画像の表示サイズのwidthを取得し設定
                    $("#"+thum).width(Math.round((190 / $("#"+thum).height()) * $("#"+thum).width()));
                    // width設定後にheightを表示させるmaxサイズにて設定
                    $("#"+thum).height(heightSize);

                    if($("#"+thum).width() > 180){
                        // heightの方が長く、heightを基準にリサイズしたがwidthが指定以上になってしまった際には
                        // heightのmaxサイズを1ピクセル少なくし再設定
                        heightSize = heightSize - 1;
                    }else{
                        // 表示サイズの条件を満たした際にbreakしwhileを抜ける
                        break;
                    }
                }
            }else{
                // 画像の表示maxサイズ
                var heightSize = 190;
                var widthSize = 180;

                // リサイズをしてもどちらか１辺でも基準より大きくなった際には基準サイズを小さくして再度リサイズ。条件を満たすまで続ける
                while(true){
                    // 180はwidthのmaxサイズなので、実画像のwidthで割り拡大率を取得。
                    // その拡大率を実画像のheightで掛け、Math.roundで小数を丸め込み画像の表示サイズのheightを取得し設定
                    $("#"+thum).height(Math.round((180 / $("#"+thum).width()) * $("#"+thum).height()));
                    $("#"+thum).width(widthSize);

                    if($("#"+thum).height() > 190){
                        // widthの方が長く、widthを基準にリサイズしたがheightが指定以上になってしまった際には
                        // widthのmaxサイズを1ピクセル少なくし再設定
                        widthSize = widthSize - 1;
                    }else{
                        // 表示サイズの条件を満たした際にbreakしwhileを抜ける
                        break;
                    }
                }
            }
        } else if(parentNode != null){
            parentNode[0].appendChild(img);
            var imageObj = jQuery(img);

            if(imageObj.width() <= imageObj.height()){
                // 画像の表示maxサイズ
                var heightSize = 190;
                var widthSize = 180;

                // リサイズをしてもどちらか１辺でも基準より大きくなった際には基準サイズを小さくして再度リサイズ。条件を満たすまで続ける
                while(true){
                    // 190はheightのmaxサイズなので、実画像のheightで割り拡大率を取得。
                    // その拡大率を実画像のwidthで掛け、Math.roundで小数を丸め込み画像の表示サイズのwidthを取得し設定
                    imageObj.width(Math.round((190 / imageObj.height()) * imageObj.width()));
                    // width設定後にheightを表示させるmaxサイズにて設定
                    imageObj.height(heightSize);

                    if(imageObj.width() > 180){
                        // heightの方が長く、heightを基準にリサイズしたがwidthが指定以上になってしまった際には
                        // heightのmaxサイズを1ピクセル少なくし再設定
                        heightSize = heightSize - 1;
                    }else{
                        // 表示サイズの条件を満たした際にbreakしwhileを抜ける
                        break;
                    }
                }
            }else{
                // 画像の表示maxサイズ
                var heightSize = 190;
                var widthSize = 180;

                // リサイズをしてもどちらか１辺でも基準より大きくなった際には基準サイズを小さくして再度リサイズ。条件を満たすまで続ける
                while(true){
                    // 180はwidthのmaxサイズなので、実画像のwidthで割り拡大率を取得。
                    // その拡大率を実画像のheightで掛け、Math.roundで小数を丸め込み画像の表示サイズのheightを取得し設定
                    imageObj.height(Math.round((180 / imageObj.width()) * imageObj.height()));
                    imageObj.width(widthSize);

                    if(imageObj.height() > 190){
                        // widthの方が長く、widthを基準にリサイズしたがheightが指定以上になってしまった際には
                        // widthのmaxサイズを1ピクセル少なくし再設定
                        widthSize = widthSize - 1;
                    }else{
                        // 表示サイズの条件を満たした際にbreakしwhileを抜ける
                        break;
                    }
                }
            }
        }
    // .css(" -ms-interpolation-mode","bicubic")はIEで大きな画像を縮小表示を行うと画像が荒くなることがあるのでそれを防ぐ為に設定
//mod_START_20130826 IE8の場合は、imageのonloadイベントを発かせるために、srcを最後に記述する必要がある
    //}).attr('src', imgPath).attr("id",thum).css(" -ms-interpolation-mode","bicubic").addClass('PrevImage');
    }).attr("id",thum).css(" -ms-interpolation-mode","bicubic").addClass('PrevImage').attr('src', imgPath);
//mod_END_20130826
}



function confirmCancelChangeOverlayVer(){

    var isCancel = confirm('{!$Label.label_wf_29042}');

    if(isCancel){
        asyncChangeOverlayVersion();
    }

}

/**
 * 最新オーバレイを反映する
 */
function asyncChangeOverlayVersion(){

    searchReturn(formFormatDTO.fixedKomoku,formFormatDTO.detailKomoku,
                            formFormatDTO.thum,formFormatDTO.overlayText,
                            formFormatDTO.rOverlayId,'',
                            formFormatDTO.fixedMap,formFormatDTO.detailMap);

}

</script>

<style type="text/css">

.uploadifyQueueItem {
    display: none;
}

.FormFormatCreateErrorMsg {
    background-color: #FFFF00;
    color: #FF0000;
    font-weight: bold;
    display: none;
}

.innerTable {
    margin-top: 5px;
    padding: 5px;
}

.innerTable th {
    text-align: right;
    font-weight: bold;
}

.innerTable td {
    border: none;
    padding: 5px;
}

.innerTable_middle {
    padding: 5px;
}

.innerTable_middle th {
    text-align: left;
    font-weight: bold;
}

.innerTable_middle td {
    border: none;
    padding: 5px;
}

.innerTable_down {
    margin: 0px 0px 10px 100px;
}

.innerTable_down th {
    text-align: right;
    font-weight: bold;
}

.innerTable_down td {
    border: none;
    padding: 5px;
}

.innerTable_Insertion {
    padding: 5px;
    border:1px;
}

.innerTable_Insertion th {
    text-align: left;
    font-weight: bold;
}

.innerTable_Insertion td {
    padding: 5px;
}

.separatorDiv{
    width: 100%;
    /*background-color:#7FFFD4;*/
}

.separatorDiv div{
    color: white;
    padding: 3px 0px 3px 5px;
    font-weight: bold;
}
.searchTbl th{
    text-align: right;
    width: 80px;
    font-weight: bold;
}

 table.selectedTable{
    border:1px solid #887f7a;
    border-collapse:collapse;
    border-spacing:0;
    empty-cells:show;
    background-color:white;
}
.selectedTable th{
    border:1px solid #887f7a;
    color:#330000;
    background-color:#84a2d4;
    background-position:left top;
    padding:2px 2px;
    text-align:center;
}
.selectedTable td{
    border:1px solid #887f7a;
    padding:2px 2px;
    white-space:nowrap;
}

.selected {
    cursor: url("{!URLFOR($Resource.FormFormat,'img/cursor_drag_hand.cur')}"),default;
    background-color : #a2d7dd;
}

.insertionSheet {
    margin-left: 0;
    padding-left: 0;
}
.insertionSheet li{
    margin-left: 0;
    padding-left: 0;
    list-style-position:outside;
    list-style-type: none;
 }
 .insertionSheet input {
    margin-right: 5px;
    margin-left: 5px;
 }

.PrevImage {
    border: 1px gray solid;
}

.previewTable {
    border-spacing: 5px 10px;
}

#sidePreviewBody td {
    text-align: center;
    border: 1px black solid;
    padding-top: 10px;
}

.ui-tabs {
    background : none;
    border:none;
}

.ui-tabs .ui-tabs-nav {
    background: none;
    border:none;
}

.ui-tabs .ui-tabs-panel {
    background : none;
    border:2px solid #11579c;
    hight:100%
}

.ui-widget-header .ui-state-default {
    background : none;
    border: 2px solid #DFEFFC;

}

.ui-tabs .ui-tabs-nav li.ui-tabs-selected {
    background: #11579c;
    border: 1px solid #11579c;

}

.ui-tabs .ui-tabs-nav li.ui-tabs-selected a{
    color: #FFFFFF;
    font-weight: bold;
}

.ui-corner-all {
    border-radius: 5px 5px 5px 5px;

}

.row {
    border-style: none !important;
}

td.showDragHandle {
    background-image: url("{!URLFOR($Resource.FormFormat,'img/data_sort.png')}");
    background-repeat: no-repeat;
    background-position: center center;
}

td.sheetname {
    padding-left: 19px;
}

td.rowhandler {
    cursor: url("{!URLFOR($Resource.FormFormat,'img/cursor_hand.cur')}"),default;
}

td.dragActive {
    cursor: url("{!URLFOR($Resource.FormFormat,'img/cursor_drag_hand.cur')}"),default;
}

.controlCell {
    width:90px;
    min-width: 90px;
}

.sortCell {
    width:50px;
    min-width: 50px;
    }
.buttonFont {
}

</style>

                        <div class="innerHtmlHeader">
                            <div style="float: left;">
                            <!--
                                <img height="38px" width="38px" style="margin-right: 10px;" src="{!URLFOR($Resource.FormFormat,'img/manager/formFormat.png')}" alt="person"/>
                             -->
                                <img height="38px" width="38px" style="margin-right: 10px;" src="/img/icon/lightning32.png" alt="person"/>
                            </div>
                            <div style="float: left;">
                                <div style="position: absolute;">{!$Label.label_wf_00127}</div>
                                <apex:outputText rendered="{!SOLXYZCSO001__ReportDefinition__c.Id == '' || SOLXYZCSO001__ReportDefinition__c.Id == null}">
                                <div style="font-size: 16px; margin-top: 20px; font-weight: bold;">{!$Label.solxyzcso001__label_wf_30033}</div>
                                </apex:outputText>
                                <apex:outputText rendered="{!SOLXYZCSO001__ReportDefinition__c.Id != '' || SOLXYZCSO001__ReportDefinition__c.Id != null}">
                                <div style="font-size: 16px; margin-top: 20px; font-weight: bold;">{!rd.Name}</div>
                                </apex:outputText>
                            </div>

                            <div style="float: right; margin-top: 10px;">
                            <!--
                                <input type="button" onclick="back(); return false;" class="btn" value="キャンセル" id="crop_edit_calcel"/>
                                <input type="button" onclick="/*return RegistForm();*/saveFormFormat();" style="margin-left: 5px;" class="btn" value="OK" name="FormFormatCreateWindowBtn" id="FormFormatCreateWindowBtn"/>
                             -->
                            </div>
                        </div>
<!-- apex:form START -->
                        <apex:form id="form">

                            <div>
                                <apex:pageMessages id="sfPageMessages"/>
                            </div>
                            <div id="jsPageMessages" style="display:none;">
                                <span id="j_id0:j_id20">
                                    <span id="j_id0:j_id20:j_id21:j_id22:0:j_id23">
                                        <div class="message errorM3">
                                            <table border="0" cellpadding="0" cellspacing="0" class="messageTable" style="padding:0px;margin:0px;">
                                                <tr valign="top">
                                                    <td>
                                                        <img alt="ERROR" class="msgIcon" src="/s.gif" title="ERROR" />
                                                    </td>
                                                    <td id="jsPageMessagesCell" class="messageCell"><div id="j_id0:j_id20:j_id21:j_id22:0:j_id23:j_id24:j_id26" class="messageText"><span id="j_id0:j_id20:j_id21:j_id22:0:j_id23:j_id24:j_id27" style="color:#cc0000">
                                                        <h4>&#12456;&#12521;&#12540;:</h4></span>&#36984;&#25246;&#12373;&#12428;&#12390;&#12356;&#12427;&#12458;&#12502;&#12472;&#12455;&#12463;&#12488;&#21448;&#12399;&#38917;&#30446;&#12395;&#12450;&#12463;&#12475;&#12473;&#27177;&#12364;&#12394;&#12356;&#12383;&#12417;&#12289;&#20351;&#29992;&#12391;&#12365;&#12414;&#12379;&#12435;&#12290;<br /></div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td></td>
                                                    <td></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </span>
                                </span>
                            </div>

                            <apex:pageBlock id="block" title="" mode="detail" tabStyle="ReportDefinition__c">

                                <apex:pageBlockButtons id="buttons" location="top">

                                    <input type="button" onclick="/*return RegistForm();*/saveFormFormat();" style="margin-left: 5px;" class="btn" value="{!$Label.label_wf_00128}" name="FormFormatCreateWindowBtn" id="FormFormatCreateWindowBtn"/>
                                    <input type="button" onclick="back(); return false;" class="btn" value="{!$Label.label_wf_00021}" id="crop_edit_calcel"/>

                                </apex:pageBlockButtons>

                                <div style="min-height: 800px;/*background-color:#f2f2f3;*/" id="tabs" class="ui-tabs ui-widget ui-widget-content ui-corner-all">
                                    <ul id="tabLink" class="ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all">
                                        <li id="tabLinkMain" class="ui-state-default ui-corner-top ui-tabs-selected ui-state-active"><a href="#" onclick="hideShowTabMain();">{!$Label.solxyzcso001__label_wf_00130}</a></li>
                                        <li id="tabLinkSheet" class="ui-state-default ui-corner-top"><a href="#" onclick="hideShowTabSheet();">{!$Label.label_wf_29009}</a></li>
                                        <li id="tabLinkMapping" class="ui-state-default ui-corner-top"><a href="#" onclick="hideShowTabMapping();">{!$Label.label_wf_29010}</a></li>
                                        <li id="tabLinkSecurity" class="ui-state-default ui-corner-top"><a href="#" onclick="hideShowTabSecurity();">{!$Label.label_wf_30072}</a></li>
                                        </ul>
<!-- 基本タブ START -->
                                    <div id="FFRegistMain" style="overflow: auto; min-width: 97%; height: 730px;" class="ui-tabs-panel ui-widget-content ui-corner-bottom">

                                        <apex:pageBlockSection showHeader="false" title="{!$Label.solxyzcso001__label_wf_00130}" columns="1" id="sectionbase" collapsible="false">
                                            <apex:pageBlockSectionItem >

                                                <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_00006}" />

                                                <apex:outputPanel >
                                                <div class="requiredInput">
                                                <div class="requiredBlock"></div>
                                                <!-- required属性をtrueにすると権限の絞り込み検索が動かなくなるので、falseを指定する -->
                                                <apex:inputText id="formatName" value="{!rd.Name}" required="false" style="width:300px;" maxlength="80" size="20" rendered="{!$ObjectType.SOLXYZCSO001__ReportDefinition__c.fields.Name.Updateable}"/>
                                                </div>
                                                </apex:outputPanel>

                                            </apex:pageBlockSectionItem>
                                            <apex:pageblocksectionItem >
                                                <apex:outputlabel value="{!$Label.solxyzcso001__label_wf_00007}"/>
                                                <apex:outputpanel >
                                                    <div id="explanationRemainder" style="height: 1em; padding-bottom: 0.1em;padding-top: 0.5em;text-align:right; width:300px;"></div>

                                                    <apex:inputTextarea id="explanation" style="width: 300px; height: 100px; max-height:100px; max-width:300px; min-height:100px; min-width:300px;" value="{!rd.SOLXYZCSO001__Explanation__c}" rendered="{!$ObjectType.SOLXYZCSO001__ReportDefinition__c.fields.SOLXYZCSO001__Explanation__c.Updateable}"/>
                                                </apex:outputpanel>
                                            </apex:pageblocksectionItem>

                                            <apex:pageBlockSectionItem id="section_item1">

                                                <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_00002}" />

                                                <apex:outputPanel >

                                                    <div id="overlayfile_container" class="requiredInput">

                                                        <div class="requiredBlock"></div>

                                                        <input type="text" id="overlayText" value="{!rd.OverlayID__c}" readonly="readonly" style="width:300px;"/>

                                                        <input id="fixedKomoku" type="hidden" value="" />

                                                        <input id="detailKomoku" type="hidden" value="" />

                                                        <input id="thum" type="hidden" value="" />
                                                        <apex:inputHidden id="rOverlayId" value="{!rd.SOLXYZCSO001__OverlayIDID__c}" rendered="{!$ObjectType.SOLXYZCSO001__ReportDefinition__c.fields.SOLXYZCSO001__OverlayIDID__c.Accessible}"/>
                                                        <apex:inputhidden id="rOverlayVersion" value="{!rd.SOLXYZCSO001__OverlayVersion__c}" rendered="{!$ObjectType.SOLXYZCSO001__ReportDefinition__c.fields.SOLXYZCSO001__OverlayVersion__c.Accessible}"/>
                                                    <!-- 2013.01.11 地図情報追加 -->

                                                        <input id="fixedMap" type="hidden" value="" />

                                                        <input id="detailMap" type="hidden" value="" />
                                                        <input value="{!$Label.solxyzcso001__label_wf_00029}"  class="btn" title="{!$Label.label_wf_00131}" name="overlay" onclick="overlaySearch();" type="button" />
                                                    <!--
                                                        <apex:commandButton value="{!$Label.label_wf_00192}" action="{!changeOverlayVersion}" id="shareBtn" rendered="{!rd.SOLXYZCSO001__OverlayVersionMismatchFlg__c}" />
                                                     -->
                                                        <apex:outputText rendered="{!rd.SOLXYZCSO001__OverlayVersionMismatchFlg__c}">
                                                            <input class="btn" id="changeOverlayVersion" type="button" onclick="confirmCancelChangeOverlayVer();" value="{!$Label.label_wf_00192}"/>
                                                        </apex:outputText>

                                                    </div>

                                                </apex:outputPanel>


                                            </apex:pageBlockSectionItem>

                                            <apex:pageBlockSectionItem >

                                                <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_00050}"  />

                                                <apex:outputPanel >
                                                    <div id="overlayfile_container" class="requiredInput">

                                                        <div class="requiredBlock"></div>

                                                        <input type="text" id="reportOutText" readonly="readonly" value="{!rd.ObjectLabel__c}" onchange="inputObjectChange();" style="width:300px;"/>

                                                        <apex:inputHidden id="reportOutText_lkid" value="{!rd.SOLXYZCSO001__ObjectID__c}" rendered="{!$ObjectType.SOLXYZCSO001__ReportDefinition__c.fields.SOLXYZCSO001__ObjectID__c.Accessible}"/>

                                                        <input value="{!$Label.solxyzcso001__label_wf_00029}"  class="btn" title="{!$Label.label_wf_00132}" name="reportOutput" onclick="searchObject();" type="button" />
                                                    </div>


                                                </apex:outputPanel>

                                            </apex:pageBlockSectionItem>
                                        </apex:pageBlockSection>

                                    <apex:pageBlockSection title="{!$Label.solxyzcso001__label_wf_00442}" columns="1" id="sectionK" collapsible="false">
                                        <apex:pageblocksectionItem id="blocksectionK">
                                            <apex:outputLabel value=""/>
                                            <apex:outputPanel id="panelK">
                                                <apex:selectList id="userType"  value="{!userType}" size="1">
                                                    <apex:selectOptions value="{!userTypeItems}"/>
                                                    <apex:actionSupport event="onchange" action="{!redraw}" rerender="notAddLists"  status="searchStatus" />
                                                </apex:selectList>
                                                <apex:inputText value="{!searchWord}" maxlength="255" rendered="{!$ObjectType.User.fields.Name.Accessible}"/>
                                                <apex:commandButton value="{!$Label.solxyzcso001__label_wf_00029}" action="{!redraw}" id="searchBtn" rerender="notAddLists" status="searchStatus" />
                                                <table width="100" >
                                                    <tr>
                                                        <td>
                                                            <div style="font-weight: bold;">{!$Label.label_wf_00033}</div>
                                                            <apex:outputPanel id="notAddLists">
                                                                <apex:selectList size="10" style="min-width: 150px; width:250px;" multiselect="true" id="notAddUser" styleClass="notAddUser">
                                                                    <apex:selectOptions value="{!Useroptions}"/>
                                                                </apex:selectList>
                                                            </apex:outputPanel>
                                                        </td>
                                                        <td align="center" style="width: *; vertical-align: middle;">
                                                            <apex:outputpanel id="counterAdd">
                                                                <apex:commandButton value="{!$Label.solxyzcso001__label_10020}" style="width:60px;" onclick="moveAuth('notAddUser', 'added', 'add'); return false; "/>
                                                                <apex:actionSupport event="onclick" action="{!redraw}" rerender="counter" />
                                                            </apex:outputpanel>
                                                            <apex:outputpanel id="counterDel">
                                                                <apex:commandButton value="{!$Label.solxyzcso001__label_00072}" style="width:60px;" onclick="moveAuth('added', 'notAddUser', 'del'); return false; "/>
                                                                <apex:actionSupport event="onclick" action="{!redraw}" rerender="counter" />
                                                            </apex:outputpanel>
                                                        </td>
                                                        <td>
                                                            <div style="font-weight: bold;">{!$Label.solxyzcso001__label_wf_00034}</div>
                                                            <apex:outputpanel id="counter2">
                                                                <apex:selectList size="10" value="{!countries}" style="min-width: 150px; width:250px;" multiselect="true" id="added" styleClass="added" readonly="true" >
                                                                    <apex:selectOptions value="{!activeOptions}"/>
                                                                </apex:selectList>
                                                            </apex:outputpanel>
                                                            <apex:outputpanel id="counter">
                                                                <apex:inputHidden value="{!addLst}" id="addListhidden" rendered="{!$ObjectType.User.fields.Name.Accessible}"/>
                                                                <apex:inputHidden value="{!newUsers}" id="newUsershidden" rendered="{!$ObjectType.User.fields.Name.Accessible}"/>
                                                                <apex:inputHidden value="{!orgUsers}" id="orgUsershidden" rendered="{!$ObjectType.User.fields.Name.Accessible}"/>
                                                            </apex:outputpanel>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </apex:outputPanel>
                                        </apex:pageblocksectionItem>
                                    </apex:pageBlockSection>
                                        <apex:pageBlockSection title="{!$Label.solxyzcso001__label_wf_29049}" columns="1" collapsible="false" id="ecmImage">

                                            <apex:pageBlocksectionItem >
                                                <apex:inputcheckbox id="ecmImageFlg" value="{!rd.SOLXYZCSO001__ECMImageFlg__c}" />
                                                <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_29012}"/>
                                            </apex:pageBlocksectionItem>

                                        </apex:pageBlockSection>

                                        <apex:pageBlockSection title="{!$Label.solxyzcso001__label_wf_30076}" columns="1" collapsible="false" rendered="{!categoryList.size > 0}">
                                            <!--
                                            <table>
                                             -->
                                                <apex:repeat value="{!categoryList}" var="category">
                                                    <apex:outputText rendered="{!category.isMulti}">
                                                        <tr class="categoryMulti">
                                                            <td class="categoryLabelTd labelCol"><label>{!category.fieldLabel}</label></td>
                                                            <td class="categoryField data2Col" data-name="{!category.fieldName}" data-multi="{!category.isMulti}">
                                                                <apex:selectCheckboxes value="{!category.selectedValueList}">
                                                                    <apex:selectOptions value="{!category.categoryOptions}"/>
                                                                </apex:selectCheckboxes>
                                                            </td>
                                                        </tr>
                                                    </apex:outputText>
                                                    <apex:outputText rendered="{!NOT(category.isMulti)}">
                                                        <tr class="category">
                                                            <td class="labelCol"><label>{!category.fieldLabel}</label></td>
                                                            <td class="categoryField data2Col" data-name="{!category.fieldName}" data-multi="{!category.isMulti}">
                                                                <apex:selectList value="{!category.selectedValue}" multiselect="false" size="{!category.selectListSize}">
                                                                    <apex:selectOptions value="{!category.categoryOptions}"/>
                                                                </apex:selectList>
                                                            </td>
                                                        </tr>
                                                    </apex:outputText>
                                                </apex:repeat>
                                            <!--
                                            </table>
                                             -->

                                        </apex:pageBlockSection>

                                    </div>
<!-- 基本タブ END -->
<!-- 出力シート順タブ START -->
                                    <div id="tabFormatSetting" class="ui-tabs-panel ui-widget-content ui-corner-bottom" style="overflow: auto; min-width: 97%; height: 730px;">
                                        <table class="innerTable" cellpadding="7">
                                            <tbody>
                                                <tr>
                                                    <td colspan="4">
                                                        <table class="innerTable_middle">
                                                            <tbody>
                                                                <tr>
                                                                    <th>{!$Label.label_wf_29013}</th>
                                                                    <th></th>
                                                                    <th>{!$Label.label_wf_29014}</th>
                                                                    <th style="text-align: right;">
                                                                        <button type="button" id="allClear">
                                                                            <span class="buttonFont">{!$Label.label_00070}</span>
                                                                        </button>
                                                                    </th>
                                                                </tr>
                                                                <tr>
                                                                    <td valign="top">
                                                                        <select id="SelectableSheet" style="width:100px" size="10">
                                                                        <!--
                                                                            <option value="0">sheet1</option>
                                                                         -->
                                                                        </select>
                                                                    </td>
                                                                    <td valign="top" align="center">
                                                                        <table height="150px">
                                                                            <tbody>
                                                                                <tr>
                                                                                    <td valign="middle" align="center">
                                                                                        <button type="button" id="addSingleButton">

                                                                                             <span class="buttonFont">>></span>
                                                                                        </button>

                                                                                    </td>
                                                                                </tr>
                                                                            </tbody>
                                                                        </table>
                                                                    </td>
                                                                    <td valign="top" colspan="2">
                                                                        <div id="drag">
                                                                            <table id="selectedTable" class="selectedTable treeTable">
                                                                                <thead>
                                                                                    <tr class="mark">
                                                                                        <th class="mark sortCell" nowrap="">{!$Label.label_wf_29015}</th>
                                                                                        <th class="mark controlCell"></th>
                                                                                        <th class="mark" width="200">{!$Label.label_wf_29016}</th>
                                                                                        <th class="mark" width="300">{!$Label.label_wf_29017}</th>
                                                                                    </tr>
                                                                                </thead>
                                                                                <tbody id="rows" class="selectable">

                                                                                </tbody>
                                                                                <tfoot>
                                                                                    <tr class="mark">
                                                                                        <th class="mark sortCell" nowrap="">{!$Label.label_wf_29015}</th>
                                                                                        <th class="mark controlCell"></th>
                                                                                        <th class="mark" width="200">{!$Label.label_wf_29016}</th>
                                                                                        <th class="mark" width="300">{!$Label.label_wf_29017}</th>
                                                                                    </tr>
                                                                                </tfoot>
                                                                            </table>
                                                                        </div>
                                                                    </td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
<!-- 出力シート順タブ END -->
<!-- マッピングタブ START -->
<style type="text/css">
.drags {
    background-color: #ddd;
    background-image: url(/img/ple/compbg.gif);
    background-position: left center;
    background-repeat: repeat-x;
    color: #333;
    font-weight: bold;
    border: 1px solid #9daab2;
    cursor: pointer;
    text-indent: 4px;
    width   : 100px   ;
    /*height  : 10px   ;*/
    padding : 1px    ;

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-text-overflow: ellipsis;
    -o-text-overflow: ellipsis;

    margin: 1px;
    font-size:91%;
}

.dropInput {

    width   : 86px;
    padding : 5px;
    display:inline-block;

    background: none repeat scroll 0 0 #EEF2F7;
    border: 2px dashed #CCCCCC;
    border-radius: 6px 6px 6px 6px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);

    /*margin: 2px;*/
    vertical-align: middle;
}


.dropInputed {
    width   : 100px   ;

    /*padding : 5px    ;*/
    display:inline-block;

    /*background-color: #ddd;
    background-image: url(/img/ple/compbg.gif);
    background-position: left center;
    background-repeat: repeat-x;
    color: #333;*/
    /*font-weight: bold;*/
    /*margin:1px;*/
    /*border: 1px solid #9daab2;
    cursor: pointer;*/
    /*text-indent: 4px;*/

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-text-overflow: ellipsis;
    -o-text-overflow: ellipsis;
    vertical-align: middle;
}

.dropArea{
    width   : 300px   ;
    /*height  : 200px   ;*/
    /*padding : 10px    ;*/

}

.drops{
    /*height:50px;*/
    width:150px;
    /*display:inline-block;*/
}

.breadcrumbs{
/*width:100%;*/
display:inline-block;
/*white-space: nowrap;*/
/*overflow: hidden;*/
/*text-overflow: ellipsis;*/
/*-webkit-text-overflow: ellipsis;*/
/*-o-text-overflow: ellipsis;*/
/*margin:5px 0 0 0;*/

padding-top:20px;
}
/*
body,div,pre,p,blockquote,
form,
dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,
embed,object {
    margin: 0;
    padding: 0;
    vertical-align: baseline;
    font-size: 100.01%;
}


body {
    background: #eee;
    color: #333333;
    font: 16px/1.7 Arial, Helvetica, sans-serif;
}
*/
h1 {
    font-size: 200%;
    text-align: center;
    padding: 20px;
}
h1 a {
    color: #444;
    text-decoration: none;
}
h1 a:hover {
    color: #888;
    text-decoration: underline;
}
h2 {
    font-size: 200%;
    margin-bottom: 0.5em;
}
p {
    margin-bottom: 1em;
}
.clearfix:before,
.clearfix:after {
    content:"";
    display:table;
}
.clearfix:after {
    clear:both;
}
.clearfix {
    zoom:1;
}

#article {
    /*background: #fff;*/
    padding: 60px;
    /*height: 2000px;*/
    margin: 0 auto 60px;
    /*width: 680px;*/
}
#page-top {
    text-align: right;
    margin-top: 20px;
}
#page-top a {
    color:#666;
    text-decoration: none;
}
#page-top a:hover {
    text-decoration: underline;
}
.nav {
    padding: 0 20px;
    margin: 0 auto 60px;
    /*width: 760px;*/
    font-size: 85%;
    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    /*background: #333;*/
    /*background: blue;*/
    background: #53A0EC;
    background: -moz-linear-gradient(top, #666, #53A0EC);
    background: -webkit-gradient(linear, left top, left bottom, from(#666), to(#53A0EC));
    background: -o-linear-gradient(top, #666, #53A0EC);
    -webkit-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
    -moz-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
    box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
}
.nav li {
    list-style: none;
    float: left;
}
.nav li a {
    text-decoration: none;
    color: #fff;
    padding: 8px 12px;
    display: block;
    width: 100px;
}
.nav li a:hover {
    /*background: #666;*/
    background: #53A0EC;
}
/* サブナビゲーション */
.nav li ul {
    display: none;
    position: absolute;
    font-size: 85%;
    -webkit-border-bottom-right-radius: 5px;
    -webkit-border-bottom-left-radius: 5px;
    -moz-border-radius-bottomright: 5px;
    -moz-border-radius-bottomleft: 5px;
    border-bottom-right-radius: 5px;
    border-bottom-left-radius: 5px;
    -webkit-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
    -moz-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
    box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
}
.nav li ul li {
    float: none;
}
.nav li ul li a {
    /*background: #444;*/
    background: #53A0EC;
}
.nav li ul li:last-child a {
    -webkit-border-bottom-right-radius: 5px;
    -webkit-border-bottom-left-radius: 5px;
    -moz-border-radius-bottomright: 5px;
    -moz-border-radius-bottomleft: 5px;
    border-bottom-right-radius: 5px;
    border-bottom-left-radius: 5px;
}

.fixed {
    position: fixed;
    /*top: 0;*/
    top: 0px;
    /*left: 100;*/
    left: 300px;
    /*width: 100%;*/
    /*min-width : 720px;*/
    border-radius: 0;
    -webkit-border-radius: 0;
    -moz-border-radius: 0;
    -o-border-radius: 0;
}
li {
margin: 5px;
}

span.menu-triangle {
    border-radius: 0.5em;
    background-color: gray;
    color: white;
    font-size: 12px;
    margin: 0 10px;
    padding: 0 15px;
    cursor: pointer;
}
span.menu-triangle:hover {
    background-color: red;
}
ul.jquery-menu {
}
ul.jquery-menu li {
    list-style-type: square;
}
ul.jquery-menu-sub {
    display: none;
}
ul.jquery-menu-sub li {
    list-style-type: square;
}


.nav2 {
    padding: 0 20px;
    margin: 0 auto 60px;
    /*width: 760px;*/
    font-size: 85%;
    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    /*background: #333;*/
    /*background: blue;*/
    background: #53A0EC;
    background: -moz-linear-gradient(top, #666, blue);
    background: -webkit-gradient(linear, left top, left bottom, from(#666), to(#53A0EC));
    background: -o-linear-gradient(top, #666, #53A0EC);
    -webkit-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
    -moz-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
    box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.3);
}

.scrollOn{
    overflow-x:scroll;
    overflow-y:hidden;
}


span.tooltip{
/*color:#fff;*/
color:black;
width:200px;
/*background:#FF9900;*/
background:#87CEEB;
border:2px solid white;
padding:1em;
font-size:small;
zIndex:1000;
word-break: break-all;
}

.toolsInner {
background-image: url(/img/ple/quickfindbg.gif);
background-position: left bottom;
background-repeat: repeat-x;
color: #333;
height: 26px;
}


#mappingTable {
    width:100%;
}

#mappingTable tbody tr td{
    vertical-align:middle;
    height:30px;
    word-break: break-all;
}


#mapsMappingTable {
    width:100%;
}

#mapsMappingTable tbody tr td{
    vertical-align:middle;
    height:30px;
    word-break: break-all;
}

.del {
    vertical-align:middle;
}

.searchOption {
    vertical-align:middle;
}

.quickLabel {
    font-size:95%;
    font-weight:bold;
}
</style>
<script type="text/javascript">

Visualforce.remoting.timeout = 120000; // ページレベルのタイムアウト値を指定

/**
 * jQueryのセレクターを生成する
 */
function esc(myid) {
    return '#' + myid.replace(/(:|\.)/g,'\\\\$1');
}

/**
 * draggableを設定する
 */
function createDraggable(){

    $('.drags').draggable(
        {
            cursor: 'pointer'
            /*, cursorAt: {top: 20,left: 90}*/
            ,absolutePosition:{top:20,left:90}
            ,cancel: false
            ,revert: 'invalid'
            ,helper:'clone'
            ,opacity:0.5
            /*,scroll:false*/
            ,zIndex:999
            ,drag:function(e,ui){}
            ,stop:function(e,ui){}
        }
    );

    $("span.tooltip").css({
        opacity:"0.8",
        position:"absolute",
        display:"none"
    });
    $(".drags").mouseover(function(){
        //$(this).next("span.tooltip").fadeIn();


        //$(this).next("span.tooltip").fadeIn();
        var h = '';
        h = $(this).next('span.tooltip').html();

        if(h != '' && h != undefined && h != null){
            $('#hiddentooltip').html(h);
            //$('#hiddentooltip').delay(3000).fadeIn('slow');
            $('#hiddentooltip').fadeIn('slow');
        }

    }).mouseout(function(){
        //$(this).next("span.tooltip").fadeOut()
        //$(this).next("span.tooltip").hide();
        //$(this).next('span.tooltip').fadeOut();
        //$('#hiddentooltip').html($(this).next('span.tooltip').html());
        //$('#hiddentooltip').fadeOut();
        $('#hiddentooltip').hide();
        //$('#hiddentooltip').dequeue();
        //$('#hiddentooltip').dequeue();

        }).mousemove(function(e){
        //$(this).next("span.tooltip").css({
         $('#hiddentooltip').css({
        //"top":e.pageY/30+15+"px",
        "top":e.pageY-200+"px",
        //"top":50+"px",
        "left":e.pageX-290+"px"
        //"top":50+"px",
        //"left":15+"px"
        })


    });

    $('#divDrags').mouseout(function(){
         $('#hiddentooltip').clearQueue();
         $("#hiddentooltip").css({
            opacity:"0.8",
            position:"absolute",
            display:"none"
        });
    });
}

/**
 * droppableを設定する
 */
function createDroppable(){

    //動的に作成したdroppableにドロップできなくなるため、初期化する
    $('.drops').droppable('destroy');
    $('.notdrops').droppable('destroy');

    $('.drops').droppable({
        accept : ".drags",
        //containment : ".dropArea",
        //containment : "parent",
        //containment : "document",
        //scroll : false,
        drop : function(ev,ui){



                    //ドラッグ要素のIDを保持する
                    var dragId = ui.draggable.attr('id');
                    var dragE = $(esc(dragId));

                    //ドロップ要素
                    var dropE = $(this);

                    var tableid = dropE.parent('td').parent('tr').parent('tbody').parent('table').attr('id');

                    if(tableid == 'mappingTable'){
                        dropMapping(dragId,dragE,dropE);
                    }else{
                        mapDropMapping(dragId,dragE,dropE);
                    }
                },
         stop : function(ev,ui){


                }
    });


    $('.notdrops').droppable({
        accept : ".drags",
        drop : function(ev,ui){
                    //何もしない

                }
    });

    $("span.tooltip").css({
        opacity:"0.8",
        position:"absolute",
        display:"none"
    });
    $(".drops").mouseover(function(){
        if($(this).children('span').text() != ''){
            //$(this).next("span.tooltip").delay(600).show();
            $('#hiddentooltip2').html($(this).next('span.tooltip').html());
            $('#hiddentooltip2').delay(3000).fadeIn('slow');
        }
    }).mouseout(function(){
        //$(this).next("span.tooltip").hide();
        $('#hiddentooltip2').hide();

    }).mousemove(function(e){
        //$(this).next("span.tooltip").css({
        $("#hiddentooltip2").css({
            "top":e.pageY-215+"px",
            "left":e.pageX-215+"px"
            //"top":300+"px",
            //"left":515+"px"
        })
    });

    $('#mappingTable').mouseout(function(){
        $('#hiddentooltip2').clearQueue();
    });

    $(".breadcrumbs").mouseover(function(){

        if($(this).text() != ''){
            //$(this).next("span.tooltip").delay(600).show();
            $('#hiddentooltip2').html($(this).html());
            $('#hiddentooltip2').delay(3000).fadeIn('slow');
        }

    }).mouseout(function(){

        //$(this).next("span.tooltip").hide();
        $('#hiddentooltip2').hide();

    }).mousemove(function(e){
        //$(this).next("span.tooltip").css({
        $("#hiddentooltip2").css({
            "top":e.pageY-215+"px",
            "left":e.pageX-215+"px"
            //"top":300+"px",
            //"left":515+"px"
        })
    });
}

function dropMapping(dragId,dragE,dropE){

    //明細行にユーザ入力項目はマッピングしない
    var checkOverlayColumnID = dropE.parent('td').prev('td').prev('td').text();

    if(dragE.attr('data-name') == 'userInput'){
        if(checkOverlayColumnID.lastIndexOf('*')>0){

            //マッピングしない
            return;
        }
    }

    var objReportMapping = {};

    //ドラッグ要素のIDを保持する
    //var dragId = ui.draggable.attr('id');
    //var dragE = $(esc(dragId));

    //ドロップ要素
    //var dropE = $(this);

    dropE.children('span').text(dragE.text());
    dropE.children('span').removeClass('dropInput').addClass('dropInputed');

    var t = '{!$Label.label_wf_29018}';//表示ラベル名：
    t += dragE.text();
    //t += dragObjectMap[dragId].label;
    t += '<br />';
    t += '{!$Label.label_wf_29019}';//api参照名：
    //t += dragE.attr('data-name');
    t += dragObjectMap[dragId].name;

    dropE.next('span').html(t);

    var objLabel = '';
    if(dragE.attr('data-name') == 'datetimeToday'){

        dropE.parent('td').prev('td').text('');
        dropE.parent('td').next('td').children().remove();

        //初期値を設定する
        objReportMapping['{!$ObjectType.ReportMapping__c.fields.USERINPUTFLG__C.Name}'] = true;

    }else if(dragE.attr('data-name') == 'userInput'){

        dropE.parent('td').prev('td').text('');
        dropE.parent('td').next('td').children().remove();

        //ユーザ入力項目の場合は、インプットフィールドとチェックボックスを表示する
        //dropE.parent('td').next('td').append('<input id=\"userInputField\" type=\"input\" value=\"\"/><input id=\"userInputRequiredFlg\" type=\"checkbox\" ><label>{!$Label.label_wf_00142}</label>');
        dropE.parent('td').next('td').append('<input class=\"userInputField\" type=\"input\" maxlength=\"255\" value=\"\"/><input class=\"userInputRequiredFlg\" type=\"checkbox\" ><label>{!$Label.label_wf_00142}</label>');

        //初期値を設定する
        objReportMapping['{!$ObjectType.ReportMapping__c.fields.USERINPUTFLG__C.Name}'] = true;
        objReportMapping['{!$ObjectType.ReportMapping__c.fields.USERINPUTREQUIREDFLG__C.Name}'] = false;

        //選択リストにonchangeイベントを付与する
        onchangeUserInputField();
        //チェックボックスにonchangeイベントを付与する
        onchangeUserInputFlg();

    }else if(dragE.attr('data-name') == 'estimateNumber'){

        dropE.parent('td').prev('td').text('');
        dropE.parent('td').next('td').children().remove();

        //自動採番項目の場合は、選択リストを表示する
        //var appendHtml = '<select id=\"estimateNumber\" value=\"\" >';
        var appendHtml = '<select class=\"estimateNumber\" value=\"\" >';
        appendHtml += EstimateNumberingOptionsAppendHtml;
        appendHtml += '</select>';
        dropE.parent('td').next('td').append(appendHtml);

        //選択リストにonchangeイベントを付与する
        onchangeEstimateNumber();

//    }else if(dragE.attr('data-name') == 'ecmImage'){

//        dropE.parent('td').prev('td').text('');
//        dropE.parent('td').next('td').children().remove();

        //objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] = '2';

//        var trid = dropE.parent('td').parent('tr').attr('id');
//        var thumid = 'thum'+trid;

        //ECM画像を選択する検索サブ画面を呼び出すボタンを生成する
//        var appendHtml = '<span id=\"';
//        appendHtml += thumid;
//        appendHtml += '\"></span>';
//        appendHtml += '<input id=\"searchImage\" type=\"button\" class=\"btn\" value=\"{!$Label.solxyzcso001__label_wf_00029}\" onclick=\"ecmImageSearch(';
//        appendHtml += thumid;
//        appendHtml += ');\"/>';
//        appendHtml += '<input id=\"docid\" type=\"hidden\" />';

//        dropE.parent('td').next('td').append(appendHtml);



//    }else if(dragE.attr('data-name') == 'userSelect'){

//        dropE.parent('td').prev('td').text('');
//        dropE.parent('td').next('td').children().remove();

        //objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] = '2';
//        objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'] = 'UserSelect';

    }else{

        dropE.parent('td').prev('td').text('');
        dropE.parent('td').next('td').children().remove();

        //SFオブジェクト項目の場合は、パンくずリストを表示する
        var relLabel = '';

        relLabel += dragTrackMap[dragE.attr('data-parentId')].relBreadcrumbsLabel;
        //relLabel += ' > ';

        //relLabel += dragE.text();

        //オブジェクト欄に表示するパンくずリストを設定する
        dropE.parent('td').prev('td').text(relLabel);
        objLabel = relLabel;
        
        var dataType = dragObjectMap[dragId].dataType;
        dropE.parent('td').next('td').next('td').next('td').next('td').text(dataType);
        
        if(checkOverlayColumnID.lastIndexOf('*')>0){
            var appendHtml = '<div style\=\"z-index\:999\">';
            appendHtml += '<span id\=\"searchInput\" class\=\"searchInputed\"></span>';
            if(dataType != 'ENCRYPTEDSTRING' && dataType != 'TEXTAREA' && dataType != 'LOCATION'){
                appendHtml += '<img class=\"searchOption\" src="{!URLFOR($Resource.FormFormat,'001_38.gif')}" height="18px"/>';
            }
            appendHtml += '</div>';
            dropE.parent('td').next('td').append(appendHtml);
            searchOption();
        }
    }

    //明細ソート項目の選択リストを活性化する
//    dropE.parent('td').prev('td').prev('td').prev('td').prev('td').children('select').attr('disabled',false);
    dropE.parent('td').next('td').next('td').children('select').attr('disabled',false);

    //オーバレイ項目ID
    var strOverlayColumnID = dropE.parent('td').prev('td').prev('td').text();
//mod_start_20130829 チケット7511
    //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
    indexOverlayColumnID = strOverlayColumnID;
//mod_end_20130829 チケット7511
    if(indexOverlayColumnID.lastIndexOf('*')>0){
        indexOverlayColumnID = indexOverlayColumnID.replace('*','');
    }

    overlayColumnIDMap[indexOverlayColumnID].relBreadcrumbsLabel = objLabel;
    overlayColumnIDMap[indexOverlayColumnID].name = dragE.text();

    //親のマッピングレコードを取得する
    overlayColumnIDMap[indexOverlayColumnID].reportMappingList
        = $.extend(true,[],dragTrackMap[dragE.attr('data-parentId')].reportMappingList);

    overlayColumnIDMap[indexOverlayColumnID].relationId = dragE.attr('data-parentId');

    //var objReportMapping = {};

    objReportMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] = dragObjectMap[dragId].type;
    objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = dragObjectMap[dragId].objName;
    objReportMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'] = dragObjectMap[dragId].name;
    objReportMapping['{!$ObjectType.ReportMapping__c.fields.OBJECTIDREF__C.Name}'] = dragObjectMap[dragId].relationshipName;

    //objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'];

    //objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}'];

    //objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'];

    //if(overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] != undefined){
    //    objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'];
    //}

    var cntReportMappingList = overlayColumnIDMap[indexOverlayColumnID].reportMappingList.length;

    if(cntReportMappingList>0){

        var prevObjReportMapping = overlayColumnIDMap[indexOverlayColumnID].reportMappingList[cntReportMappingList-1];
        if(prevObjReportMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] == 'children'){

            if(objectIDRefMap[objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']] != undefined
                    && objectIDRefMap[objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']] != null){

                objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectIDREF__c.Name}']
                    = objectIDRefMap[objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']];
            }

            objReportMapping['{!$ObjectType.ReportMapping__c.fields.OBJECTIDREF__C.Name}']
                = prevObjReportMapping['{!$ObjectType.ReportMapping__c.fields.SUBREFID__C.Name}'];

        }else if(prevObjReportMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] == 'parents'){

            var objectIDRef = '';

            var objNameObjField = prevObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
            objNameObjField += ':';
            objNameObjField += prevObjReportMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'];

            if(objectIDRefParentsMap[objNameObjField] != undefined){
                objectIDRef = objectIDRefParentsMap[objNameObjField];
            }else{
                objectIDRef = 'null';
            }
            objectIDRef += '-';
            //objectIDRef += dragObjectMap[dragId].objName;
            objectIDRef += dragObjectMap[dragId].objectName;

            objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = objectIDRef;


        }

        //overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}']
        //    = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'];



        //overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}']
        //    = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}'];

        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
            = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'];

        if(overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] != undefined){
            overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'];
        }

    }

    //overlayColumnIDMap[indexOverlayColumnID].objReportMapping = objReportMapping;

    overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
        = objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];

    overlayColumnIDMap[indexOverlayColumnID].reportMappingList.push(objReportMapping);


    //overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}']
    //    = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'];

    //overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}']
    //    = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}'];

    overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
        = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'];

    if(overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] != undefined){
        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
            = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'];
    }


    var sortOrderNum = dropE.parent('td').next('td').next('td').children('select').val();

    if(sortOrderNum != undefined && sortOrderNum != ''){
        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SortOrderNum__c.Name}'] = Number(sortOrderNum);
    }

    var sortType = dropE.parent('td').next('td').next('td').next('td').children('select').val();

    if(sortType != undefined && sortType != ''){
        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}'] = sortType;
    }


    for(var i=0; i<overlayColumnIDMap[indexOverlayColumnID].reportMappingList.length;i++){
        //マッピングレコードにオーバレイ項目IDを設定する
        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}']
            = strOverlayColumnID;

        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}']
            = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'];

        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}']
            = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}'];

    }

}


function mapDropMapping(dragId,dragE,dropE){

    //明細行にユーザ入力項目はマッピングしない
    var checkOverlayColumnID = dropE.parent('td').prev('td').prev('td').text();

    if(dragE.attr('data-name') == 'userInput'){
        if(checkOverlayColumnID.lastIndexOf('*')>0){

            //マッピングしない
            return;
        }
    }

    var objReportMapping = {};

    //ドラッグ要素のIDを保持する
    //var dragId = ui.draggable.attr('id');
    //var dragE = $(esc(dragId));

    //ドロップ要素
    //var dropE = $(this);

    dropE.children('span').text(dragE.text());
    dropE.children('span').removeClass('dropInput').addClass('dropInputed');

    var t = '{!$Label.label_wf_29018}';//表示ラベル名：
    t += dragE.text();
    //t += dragObjectMap[dragId].label;
    t += '<br />';
    t += '{!$Label.label_wf_29019}';//api参照名：
    //t += dragE.attr('data-name');
    t += dragObjectMap[dragId].name;

    dropE.next('span').html(t);

    if(dragE.attr('data-name') == 'datetimeToday'){

        dropE.parent('td').prev('td').text('');
        dropE.parent('td').next('td').children().remove();

        //初期値を設定する
        objReportMapping['{!$ObjectType.ReportMapping__c.fields.USERINPUTFLG__C.Name}'] = true;

    }else if(dragE.attr('data-name') == 'userInput'){

        dropE.parent('td').prev('td').text('');
        dropE.parent('td').next('td').children().remove();

        //ユーザ入力項目の場合は、インプットフィールドとチェックボックスを表示する
        dropE.parent('td').next('td').append('<input id=\"userInputField\" type=\"input\" maxlength=\"255\" value=\"\"/><input id=\"userInputRequiredFlg\" type=\"checkbox\" ><label>{!$Label.label_wf_00142}</label>');

        //初期値を設定する
        objReportMapping['{!$ObjectType.ReportMapping__c.fields.USERINPUTFLG__C.Name}'] = true;
        objReportMapping['{!$ObjectType.ReportMapping__c.fields.USERINPUTREQUIREDFLG__C.Name}'] = false;

        //選択リストにonchangeイベントを付与する
        onchangeUserInputField();
        //チェックボックスにonchangeイベントを付与する
        onchangeUserInputFlg();

    }else if(dragE.attr('data-name') == 'estimateNumber'){

        dropE.parent('td').prev('td').text('');
        dropE.parent('td').next('td').children().remove();

        //自動採番項目の場合は、選択リストを表示する
        var appendHtml = '<select id=\"estimateNumber\" value=\"\" >';
        appendHtml += EstimateNumberingOptionsAppendHtml;
        appendHtml += '</select>';
        dropE.parent('td').next('td').append(appendHtml);

        //選択リストにonchangeイベントを付与する
        onchangeEstimateNumber();

//    }else if(dragE.attr('data-name') == 'ecmImage'){

//        dropE.parent('td').prev('td').text('');
//        dropE.parent('td').next('td').children().remove();

//        var trid = dropE.parent('td').parent('tr').attr('id');
//        var thumid = 'thum'+trid;

        //ECM画像を選択する検索サブ画面を呼び出すボタンを生成する
//        var appendHtml = '<span id=\"';
//        appendHtml += thumid;
//        appendHtml += '\"></span>';
//        appendHtml += '<input id=\"searchImage\" type=\"button\" class=\"btn\" value=\"{!$Label.solxyzcso001__label_wf_00029}\" onclick=\"ecmImageSearch(';
//        appendHtml += thumid;
//        appendHtml += ');\"/>';
//        appendHtml += '<input id=\"docid\" type=\"hidden\" />';

//        dropE.parent('td').next('td').append(appendHtml);



    }else{

        dropE.parent('td').prev('td').text('');
        dropE.parent('td').next('td').children().remove();

        //SFオブジェクト項目の場合は、パンくずリストを表示する
        var relLabel = '';

        relLabel += dragTrackMap[dragE.attr('data-parentId')].relBreadcrumbsLabel;
        relLabel += ' > ';

        relLabel += dragE.text();

        //オブジェクト欄に表示するパンくずリストを設定する
        dropE.parent('td').prev('td').text(relLabel);
        
        var dataType = dragObjectMap[dragId].dataType;
        dropE.parent('td').next('td').next('td').next('td').next('td').text(dataType);
        
        if(checkOverlayColumnID.lastIndexOf('*')>0){
            var appendHtml = '<div style\=\"z-index\:999\">';
            appendHtml += '<span id\=\"searchInput\" class\=\"searchInputed\"></span>';
            if(dataType != 'ENCRYPTEDSTRING' && dataType != 'TEXTAREA' && dataType != 'LOCATION'){
                appendHtml += '<img class=\"searchOption\" src="{!URLFOR($Resource.FormFormat,'001_38.gif')}" height="18px"/>';
            }
            appendHtml += '</div>';
            dropE.parent('td').next('td').append(appendHtml);
            searchOption();
        }
    }

    //明細ソート項目の選択リストを活性化する
    dropE.parent('td').prev('td').prev('td').prev('td').prev('td').children('select').attr('disabled',false);
    dropE.parent('td').prev('td').prev('td').prev('td').children('select').attr('disabled',false);


    //オーバレイ項目ID
    var strOverlayColumnID = dropE.parent('td').prev('td').prev('td').text();

    var indexOverlayColumnID = dropE.parent('td').prev('td').prev('td').prev('td').prev('td').text() + ':' + strOverlayColumnID;

    //indexOverlayColumnID = indexOverlayColumnID.toLowerCase();

    if(indexOverlayColumnID.lastIndexOf('*')>0){
        indexOverlayColumnID = indexOverlayColumnID.replace('*','');
    }


    //親のマッピングレコードを取得する
    overlayColumnIDMap[indexOverlayColumnID].reportMappingList
        = $.extend(true,[],dragTrackMap[dragE.attr('data-parentId')].reportMappingList);



    //var objReportMapping = {};

    objReportMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] = dragObjectMap[dragId].type;
    objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = dragObjectMap[dragId].objName;
    objReportMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'] = dragObjectMap[dragId].name;
    objReportMapping['{!$ObjectType.ReportMapping__c.fields.OBJECTIDREF__C.Name}'] = dragObjectMap[dragId].relationshipName;

    //objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'];

    //objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}'];

    objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'];

    objReportMapping['{!$ObjectType.ReportMapping__c.fields.tagInfo__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.tagInfo__c.Name}'];

    objReportMapping['{!$ObjectType.ReportMapping__c.fields.keyName__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.keyName__c.Name}'];

    objReportMapping['{!$ObjectType.ReportMapping__c.fields.mapName__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.mapName__c.Name}'];

    objReportMapping['{!$ObjectType.ReportMapping__c.fields.mapwidth__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.mapwidth__c.Name}'];

    objReportMapping['{!$ObjectType.ReportMapping__c.fields.mapHeight__c.Name}'] = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.mapHeight__c.Name}'];


    overlayColumnIDMap[indexOverlayColumnID].reportMappingList.push(objReportMapping);

    for(var i=0; i<overlayColumnIDMap[indexOverlayColumnID].reportMappingList.length;i++){
        //マッピングレコードにオーバレイ項目IDを設定する
        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}']
            = strOverlayColumnID;

        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}']
            = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'];

        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}']
            = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIdList__c.Name}'];

        overlayColumnIDMap[indexOverlayColumnID].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.tagInfo__c.Name}']
            = overlayColumnIDMap[indexOverlayColumnID].objReportMapping['{!$ObjectType.ReportMapping__c.fields.tagInfo__c.Name}'];

    }

    //オーバレイフィールドの履歴を作成する
    //var objReportDefinitionHistory = {};
    var strTrackMessage = '';

//    if(overlayColumnIDMap[indexOverlayColumnID].trackReportMappingList.length>0){
//        strTrackMessage = strOverlayColumnID;
//        strTrackMessage += '{!$Label.msg_wf_00260}';
//    }else{
//        strTrackMessage = strOverlayColumnID;
//        strTrackMessage += '{!$Label.msg_wf_00255}';
//    }

//    overlayColumnIDMap[indexOverlayColumnID].strTrackMessage = strTrackMessage;
}

function matchDatetime(dateVal){
    var dateFormateList1 = [
        '昨日', 'YESTERDAY',
        '今日', 'TODAY',
        '明日', 'TOMORROW',
        '先週', 'LAST WEEK',
        '今週', 'THIS WEEK',
        '来週', 'NEXT WEEK',
        '先月', 'LAST MONTH',
        '今月', 'THIS MONTH',
        '来月', 'NEXT MONTH',
        '過去90日間', 'LAST 90 DAYS',
        '翌90日間', 'NEXT 90 DAYS',
        '前四半期', 'LAST QUARTER',
        '当四半期', 'THIS QUARTER',
        '翌四半期', 'NEXT QUARTER',
        '昨年', 'LAST YEAR',
        '今年', 'THIS YEAR',
        '来年', 'NEXT YEAR',
        '前会計四半期', 'LAST FISCAL QUARTER',
        '当会計四半期', 'THIS FISCAL QUARTER',
        '翌会計四半期', 'NEXT FISCAL QUARTER',
        '前会計年度', 'LAST FISCAL YEAR',
        '当会計年度', 'THIS FISCAL YEAR',
        '翌会計年度', 'NEXT FISCAL YEAR'
        ];
    var dateFormateList2 = [
        /過去[1-9][0-9]*週間/, /LAST [1-9][0-9]* WEEKS/,
        /翌[1-9][0-9]*週間/, /NEXT [1-9][0-9]* WEEKS/,
        /[1-9][0-9]*週間/, /[1-9][0-9]* WEEKS AGO/,
        /過去[1-9][0-9]*か月/, /LAST [1-9][0-9]* MONTHS/,
        /翌[1-9][0-9]*か月/, /NEXT [1-9][0-9]* MONTHS/,
        /[1-9][0-9]*か月前/, /[1-9][0-9]* MONTHS AGO/,
        /過去[1-9][0-9]*日間/, /LAST [1-9][0-9]* DAYS/,
        /翌[1-9][0-9]*日間/, /NEXT [1-9][0-9]* DAYS/,
        /[1-9][0-9]*日前/, /[1-9][0-9]* DAYS AGO/,
        /過去[1-9][0-9]*四半期/, /LAST [1-9][0-9]* QUARTERS/,
        /翌[1-9][0-9]*四半期/, /NEXT [1-9][0-9]* QUARTERS/,
        /[1-9][0-9]*四半期前/, /[1-9][0-9]* QUARTERS AGO/,
        /過去[1-9][0-9]*年間/, /LAST [1-9][0-9]* YEARS/,
        /翌[1-9][0-9]*年間/, /NEXT [1-9][0-9]* YEARS/,
        /[1-9][0-9]*年前/, /[1-9][0-9]* YEARS AGO/,
        /過去[1-9][0-9]*会計四半期/, /LAST [1-9][0-9]* FISCAL QUARTERS/,
        /翌[1-9][0-9]*会計四半期/, /NEXT [1-9][0-9]* FISCAL QUARTERS/,
        /[1-9][0-9]*会計四半期前/, /[1-9][0-9]* FISCAL QUARTERS AGO/,
        /過去[1-9][0-9]*会計年度/, /LAST [1-9][0-9]* FISCAL YEARS/,
        /翌[1-9][0-9]*会計年度/, /NEXT [1-9][0-9]* FISCAL YEARS/,
        /[1-9][0-9]*会計年度前/, /[1-9][0-9]* FISCAL YEARS AGO/
        ];
    for(var i=0; i<dateFormateList1.length; i++){
        if(dateVal == dateFormateList1[i]){
            return true;
        }
    }
    
    for(var i=0; i<dateFormateList2.length; i++){
        if(dateVal.match(dateFormateList2[i])){
            return true;
        }
    }
    return false;
}

function searchOption(){
    
    $('.searchOption').click(
        function(){
            
            var searchOptionE = $(this).parent('div');
            var indexOverlayColumnIDStr = searchOptionE.parent('td').prev('td').prev('td').prev('td').text(); 
            var sheetName = searchOptionE.parent('td').prev('td').prev('td').prev('td').prev('td').prev('td').text();
            var objectName = searchOptionE.parent('td').prev('td').prev('td').text();
            var itemName = searchOptionE.parent('td').prev('td').children('div').children('span').text();
            var itemType = searchOptionE.parent('td').next('td').next('td').next('td').text();
            
            var indexOverlayColumnID = indexOverlayColumnIDStr;
            if(indexOverlayColumnID.lastIndexOf('*')>0){
                indexOverlayColumnID = indexOverlayColumnID.replace('*','');
            }
            
            var optionObj; 
            
            if(itemType == 'PERCENT' || itemType == 'DOUBLE' || itemType == 'CURRENCY' || itemType == 'DATE' || itemType == 'DATETIME'){
                //数値
                optionObj = {
                    "e"   : '{!$Label.label_wr_search_e_00001}',
                    "n"   : '{!$Label.label_wr_search_n_00002}',
                    "l"   : '{!$Label.label_wr_search_l_00006}',
                    "g"   : '{!$Label.label_wr_search_g_00007}',
                    "m"   : '{!$Label.label_wr_search_m_00008}',
                    "h"   : '{!$Label.label_wr_search_h_00009}'
                };
            } else if (itemType == 'BOOLEAN'){
                //チェックボックス
                optionObj = {
                    "e"   : '{!$Label.label_wr_search_e_00001}',
                    "n"   : '{!$Label.label_wr_search_n_00002}'
                };
            } else if (itemType == 'MULTIPICKLIST'){
                //選択リスト（複数選択）
                optionObj = {
                    "e"   : '{!$Label.label_wr_search_e_00001}',
                    "n"   : '{!$Label.label_wr_search_n_00002}',
                    "u"   : '{!$Label.label_wr_search_u_00010}',
                    "x"   : '{!$Label.label_wr_search_x_00011}'
                };
            } else {
                //テキスト
                optionObj = {
                    "e"   : '{!$Label.label_wr_search_e_00001}',
                    "n"   : '{!$Label.label_wr_search_n_00002}',
                    "l"   : '{!$Label.label_wr_search_l_00006}',
                    "g"   : '{!$Label.label_wr_search_g_00007}',
                    "m"   : '{!$Label.label_wr_search_m_00008}',
                    "h"   : '{!$Label.label_wr_search_h_00009}',
                    "s"   : '{!$Label.label_wr_search_s_00003}',
                    "c"   : '{!$Label.label_wr_search_c_00004}',
                    "k"   : '{!$Label.label_wr_search_k_00005}'
                };
            }
            
            var select = document.getElementById("opt_operator");
            
            while(select.options.length > 1) {
                //optionsのデータを削除
                select.options[select.options.length - 1] = null;
            }
            for(index in optionObj){
                select.options[select.options.length] = new Option(optionObj[index], index);
            }
            
            var operatorOrg = overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SearchOperator__c.Name}'];
            var valueOrg = overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SearchValue__c.Name}'];
            
            if(operatorOrg == undefined){
                operatorOrg = "";
            }
            
            if(valueOrg == undefined){
                valueOrg = "";
            }
            
            $("#opt_sheet_name").text(sheetName);
            $("#opt_object_name").text(objectName);
            $("#opt_item_name").text(itemName);
            $("#opt_item_type").val(itemType);
            
            if(operatorOrg != ""){
                $("#opt_operator").val(operatorOrg);
                $("#opt_value").val(valueOrg);
            } else {
                $("#opt_operator").val("none");
                $("#opt_value").val("");
            }
                
            $("#overlay_column_id").val(indexOverlayColumnIDStr);
            $("#org_operator").val(operatorOrg);
            $("#org_value").val(valueOrg);
            
            $("#opt_button_clear").click(function(){
                $("#opt_operator").val("none");
                $("#opt_value").val("");
                return false;
            });
            
            $("#opt_button_cancel").click(function(){
                $("#searchOptionDialog").dialog('close');
                return false;
            });

            $("#opt_button_save").unbind();
            $("#opt_button_save").click(function(){
                
                var operatorNew = $("#opt_operator").val();
                var valueNew = $("#opt_value").val();
                var dataType = $("#opt_item_type").val();
                
                if(operatorNew != "none"){
                    if(valueNew == ""){
                        alert("{!$Label.label_13003}");
                        return false;
                    }else{
                        if(dataType == 'PERCENT' || dataType == 'DOUBLE' || dataType == 'CURRENCY'){
                            //パーセント、数値、通貨
                            if(!isFinite(valueNew)){
                                alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00207}'));
                                return false;
                            }
                        } else if(dataType == 'DATE'){
                            //日付
                            if(!valueNew.match(/^\d{4}\/\d{2}\/\d{2}$/) && !matchDatetime(valueNew)){
                                alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                return false;
                            }
                            
                            if(valueNew.match(/^\d{4}\/\d{2}\/\d{2}$/)){
                                var vYear    = valueNew.substr(0, 4) - 0;
                                var vMonth   = valueNew.substr(5, 2) - 1;
                                var vDay     = valueNew.substr(8, 2) - 0;
                                
                                if(vMonth < 0 || vMonth > 11 || vDay < 1 || vDay > 31){
                                    alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                    return false;
                                }
                                
                                try{
                                    var date = new Date(valueNew);
                                    if(isNaN(date) || vYear != date.getFullYear() || vMonth != date.getMonth() || vDay != date.getDate()){
                                        alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                        return false;
                                    }
                                } catch (e){
                                    alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                    return false;
                                }
                            }
                            
                        } else if(dataType == 'DATETIME'){
                            //日付/時間
                            if(!valueNew.match(/^\d{4}\/\d{2}\/\d{2}\s\d{2}:\d{2}(\s(am|pm))?$/i) && !matchDatetime(valueNew)){
                                alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                return false;
                            }
                            
                            if(valueNew.match(/^\d{4}\/\d{2}\/\d{2}\s\d{2}:\d{2}(\s(am|pm))?$/i)){
                                var vYear     = valueNew.substr(0, 4) - 0;
                                var vMonth    = valueNew.substr(5, 2) - 1;
                                var vDay      = valueNew.substr(8, 2) - 0;
                                var vHour     = valueNew.substr(11, 2) - 0;
                                var vMinutes  = valueNew.substr(14, 2) - 0;
                                var vMeridiem = '';
                                if(valueNew.length == 19){
                                    vMeridiem = valueNew.substr(17, 2).toUpperCase();
                                }
                                
                                if(vMonth < 0 || vMonth > 11 || vDay < 1 || vDay > 31 || 
                                    vHour < 0 || vHour > 12 || vMinutes < 0 || vMinutes > 59 || 
                                    (vMeridiem == 'AM' && vHour == 12)){
                                    alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                    return false;
                                }
                                
                                try{
                                    var date = new Date(valueNew.substr(0, 10));
                                    if(isNaN(date) || vYear != date.getFullYear() || vMonth != date.getMonth() || vDay != date.getDate()){
                                        alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                        return false;
                                    }
                                } catch (e){
                                    alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                    return false;
                                }
                            }
                            
                        } else if(dataType == 'BOOLEAN'){
                            //チェックボックス
                            if(valueNew.toUpperCase() != 'TRUE' && valueNew.toUpperCase() != 'FALSE'){
                                alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00191}'));
                                return false;
                            }
                        } else if(dataType == 'MULTIPICKLIST'){
                            //選択リスト（複数）
                            if(valueNew.indexOf(',') == 0 || valueNew.lastIndexOf(',') == valueNew.length -1){
                                alert(getMsg(new Array('{!$Label.label_wr_search_00018}'), '{!$Label.msg_00186}'));
                                return false;
                            }
                        } else {
                            if(valueNew.length > 255){
                                alert(getMsg(new Array('{!$Label.label_wr_search_00018}', '255'), '{!$Label.msg_00230}'));
                                return false;
                            }
                        }
                    }
                }
                
                var indexOverlayColumnIDStr = $("#overlay_column_id").val();
                
                var indexOverlayColumnID = indexOverlayColumnIDStr;
                if(indexOverlayColumnID.lastIndexOf('*')>0){
                    indexOverlayColumnID = indexOverlayColumnID.replace('*','');
                }
                
                var operatorOld = $("#org_operator").val();
                var valueOld = $("#org_value").val();
                
                if(operatorNew != operatorOld || valueNew != valueOld){
                    
                    var selectMsg = "";
                    
                    if(operatorNew == "none"){
                        operatorNew = "";
                        valueNew = "";
                    } else {
                        switch (operatorNew){
                            case 'e' : selectMsg +=  '{!$Label.label_wr_search_e_00001}'; break;
                            case 'n' : selectMsg +=  '{!$Label.label_wr_search_n_00002}'; break;
                            case 's' : selectMsg +=  '{!$Label.label_wr_search_s_00003}'; break;
                            case 'c' : selectMsg +=  '{!$Label.label_wr_search_c_00004}'; break;
                            case 'k' : selectMsg +=  '{!$Label.label_wr_search_k_00005}'; break;
                            case 'l' : selectMsg +=  '{!$Label.label_wr_search_l_00006}'; break;
                            case 'g' : selectMsg +=  '{!$Label.label_wr_search_g_00007}'; break;
                            case 'm' : selectMsg +=  '{!$Label.label_wr_search_m_00008}'; break;
                            case 'h' : selectMsg +=  '{!$Label.label_wr_search_h_00009}'; break;
                            case 'u' : selectMsg +=  '{!$Label.label_wr_search_u_00010}'; break;
                            case 'x' : selectMsg +=  '{!$Label.label_wr_search_x_00011}'; break;
                            case 'w' : selectMsg +=  '{!$Label.label_wr_search_w_00012}'; break;
                        }
                        selectMsg += ':' + valueNew;
                    }
                    overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SearchOperator__c.Name}'] = operatorNew;
                    overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SearchValue__c.Name}'] = valueNew;
                    
                    $('.searchtd').each(function(){
                        var searchOptionE = $(this);
                        var overlayColumnIDTemp = searchOptionE.prev('td').prev('td').prev('td').text(); 
                        if(overlayColumnIDTemp == indexOverlayColumnIDStr){
                            searchOptionE.children().remove();
                            
                            var appendHtml = '<div style\=\"z-index\:999\">';
                            appendHtml += '<span id\=\"searchInput\" class\=\"searchInputed\">';
                            appendHtml += selectMsg;
                            appendHtml += '</span>';
                            appendHtml += '<img class=\"searchOption\" src="{!URLFOR($Resource.FormFormat,'001_38.gif')}" height="18px"/>';
                            appendHtml += '</div>';
                    
                            searchOptionE.append(appendHtml);
                            searchOption();
                        }
                    });
                }
                $("#searchOptionDialog").dialog('close');
                return false;
            });
  
            $("#searchOptionDialog").dialog({
                modal:true,
                width:450,
                height:300,
                title : "{!$Label.label_wr_search_00013}",
                close: function(event, ui) {
                },
                open : function(){
                    $("#searchOptionDialog").removeClass("ui-dialog ui-dialog-content");
                }
            });
        }
    );
}

/**
 * ドロップしたドラッグ要素を削除する
 */
function deleteDrags(){

    $('.del').click(
        function(){
            var delE = $(this);
            delE.prev('span').text('').removeClass('dropInputed').addClass('dropInput');
            delE.parent('div').parent('td').prev('td').text('');
            delE.parent('div').parent('td').next('td').children().remove();

            delE.parent('div').next('span').html('{!$Label.label_wf_29018}<br/>{!$Label.label_wf_29019}');

            //明細ソート順番号をクリアして非活性化
            //delE.parent('div').parent('td').prev('td').prev('td').prev('td').prev('td').children('select').val('').attr('disabled',true);
            delE.parent('div').parent('td').next('td').next('td').children('select').val('').attr('disabled',true);

            //明細ソートタイプをクリアして非活性化
            //delE.parent('div').parent('td').prev('td').prev('td').prev('td').children('select').val('').attr('disabled',true);
            delE.parent('div').parent('td').next('td').next('td').next('td').children('select').val('').attr('disabled',true);


            //overlayColumnIDMap[delE.parent('div').parent('td').prev('td').prev('td').text()]

            var tableid = delE.parent('div').parent('td').parent('tr').parent('tbody').parent('table').attr('id');

            if(tableid == 'mappingTable'){

                var strOverlayColumnID = delE.parent('div').parent('td').prev('td').prev('td').text();
        //mod_start_20130829 チケット7511
                //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
                var indexOverlayColumnID = strOverlayColumnID;
        //mod_start_20130829 チケット7511
                if(indexOverlayColumnID.indexOf('*') > -1){
                    indexOverlayColumnID = indexOverlayColumnID.replace('*','');
                }

                var overlayColumnDto = overlayColumnIDMap[indexOverlayColumnID];

                overlayColumnDto.reportMappingList = [];
            }else{

                //オーバレイ項目ID
                var strOverlayColumnID = delE.parent('div').parent('td').prev('td').prev('td').text();

                var indexOverlayColumnID = delE.parent('div').parent('td').prev('td').prev('td').prev('td').prev('td').text() + ':' + strOverlayColumnID;

                if(indexOverlayColumnID.lastIndexOf('*')>0){
                    indexOverlayColumnID = indexOverlayColumnID.replace('*','');
                }


                //親のマッピングレコードを取得する
                overlayColumnIDMap[indexOverlayColumnID].reportMappingList = [];

            }
        }
   );


    $('.delImage').click(
        function(){
            var delE = $(this);
            //delE.prev('span').text('').removeClass('dropInputed').addClass('dropInput');
            //delE.parent('div').parent('td').prev('td').text('');
            //delE.parent('div').parent('td').next('td').children().remove();

            delE.parent('div').parent('td').next('td').children('span').html('');

            delE.parent('div').parent('td').next('td').children('input #docid').val('');

            //delE.parent('div').next('span').html('{!$Label.label_wf_29018}<br/>{!$Label.label_wf_29019}');

            //明細ソート順番号をクリアして非活性化
            //delE.parent('div').parent('td').prev('td').prev('td').prev('td').prev('td').children('select').val('').attr('disabled',true);
            delE.parent('div').parent('td').next('td').next('td').children('select').val('').attr('disabled',true);

            //明細ソートタイプをクリアして非活性化
            //delE.parent('div').parent('td').prev('td').prev('td').prev('td').children('select').val('').attr('disabled',true);
            delE.parent('div').parent('td').next('td').next('td').next('td').children('select').val('').attr('disabled',true);


            //overlayColumnIDMap[delE.parent('div').parent('td').prev('td').prev('td').text()]

            var tableid = delE.parent('div').parent('td').parent('tr').parent('tbody').parent('table').attr('id');

            if(tableid == 'mappingTable'){

                var strOverlayColumnID = delE.parent('div').parent('td').prev('td').prev('td').text();
        //mod_start_20130829 チケット7511
                //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
                var indexOverlayColumnID = strOverlayColumnID;
        //mod_end_20130829 チケット7511
                if(indexOverlayColumnID.indexOf('*') > -1){
                    indexOverlayColumnID = indexOverlayColumnID.replace('*','');
                }

                var cntMaxReportMappingList = overlayColumnIDMap[indexOverlayColumnID].reportMappingList.length;

                overlayColumnIDMap[indexOverlayColumnID].reportMappingList[cntMaxReportMappingList-1]['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}']
                    = '';


                overlayColumnIDMap[indexOverlayColumnID].reportMappingList[cntMaxReportMappingList-1]['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                    = 'Selection_of_users'; //ユーザ選択
            }
        }
   );
}

/**
 * 明細ソート順番号をマッピングレコードに格納する
 */
function onchangeDetailSortOrderNum(){
    $('#sortOrderNum select').change(
        function(){

            //selectタグ
            var sortOrderNumE = $(this);

            var selectValue = sortOrderNumE.val();
            var trId = sortOrderNumE.parent('td').parent('tr').attr('id');

            //var strOverlayColumnID = sortOrderNumE.parent('td').next('td').next('td').text();
            var strOverlayColumnID = sortOrderNumE.parent('td').prev('td').prev('td').prev('td').prev('td').text();
            var sheetName = sortOrderNumE.parent('td').prev('td').prev('td').prev('td').prev('td').prev('td').prev('td').text();
    //mod_start_20130829 チケット7511
            //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
            var indexOverlayColumnID = strOverlayColumnID;
    //mod_end_20130829 チケット7511
            if(indexOverlayColumnID.lastIndexOf('*')>0){
                indexOverlayColumnID = indexOverlayColumnID.replace('*','');
            }

            var sortOrderNumValue;

            if(sortOrderNumE.val() != ''){
                sortOrderNumValue = Number(sortOrderNumE.val());


                overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SortOrderNum__c.Name}']
                = sortOrderNumValue;

                if(sortOrderNumE.parent('td').next('td').children('select').attr('disabled')){
                    sortOrderNumE.parent('td').next('td').children('select').attr('disabled',false);
                    sortOrderNumE.parent('td').next('td').children('select').val('asc');

                    overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}']
                    = 'asc';
                }

                //$('[id$="sortOrderNum"]').each(function(){
                $('.sortOrderNum').each(function(){

                    var objSelectE = $(this).children('select');

                    if(trId != $(this).parent('tr').attr('id')){
                        var sheetNameTemp = $(this).prev('td').prev('td').prev('td').prev('td').prev('td').prev('td').text();
                        if(sheetName == sheetNameTemp){
                        if(selectValue == objSelectE.val()){
                            objSelectE.val('').trigger('change');
                        }
                    }
                    }

                });

            }else{


                overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SortOrderNum__c.Name}']
                = sortOrderNumValue;

                sortOrderNumE.parent('td').next('td').children('select').val('');


                sortOrderNumE.parent('td').next('td').children('select').attr('disabled',true);
                overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}']
                    = '';
            }



        }
   );
}


/**
 * 明細ソートタイプをマッピングレコードに格納する
 */
function onchangeDetailSortType(){
    $('#sortType select').change(
        function(){

            //selectタグ
            var sortTypeE = $(this);


            var sortTypeValue = sortTypeE.val();


            //var strOverlayColumnID = sortTypeE.parent('td').next('td').text();
            var strOverlayColumnID = sortTypeE.parent('td').prev('td').prev('td').prev('td').prev('td').prev('td').text();
    //mod_start_20130829 チケット7511
            //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
            var indexOverlayColumnID = strOverlayColumnID;
    //mod_end_20130829 チケット7511
            if(indexOverlayColumnID.lastIndexOf('*')>0){
                indexOverlayColumnID = indexOverlayColumnID.replace('*','');
            }

            overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}']
                = sortTypeValue;

            if(sortTypeValue == ''){

                sortTypeE.attr('disabled',true);

                sortTypeE.parent('td').prev('td').children('select').val('');


                overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.SortOrderNum__c.Name}']
                    = undefined;


            }
        }
   );
}

/**
 * ユーザ入力内容をマッピングレコードに格納する
 */
function onchangeUserInputField(){
    //$('#userInputField').change(
    //$('input[id$="userInputField"]').change(
    $('.userInputField').change(
        function(){

            //inputタグ
            var inputE = $(this);

            var inputValue = '';

            if(inputE.val() != undefined){
                inputValue = inputE.val();
            }

            var strOverlayColumnID = inputE.parent('td').prev('td').prev('td').prev('td').text();
    //mod_start_20130829 チケット7511
            //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
            var indexOverlayColumnID = strOverlayColumnID;
    //mod_end_20130829 チケット7511
            if(indexOverlayColumnID.lastIndexOf('*')>0){
                indexOverlayColumnID = indexOverlayColumnID.replace('*','');
            }

            overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.UserInput__c.Name}']
                = inputValue;

        }
   );
}

/**
 * ユーザ入力必須フラグをマッピングレコードに格納する
 */
function onchangeUserInputFlg(){
    //$('#userInputRequiredFlg').change(
    //$('input[id$="userInputRequiredFlg"]').change(
    $('.userInputRequiredFlg').change(
        function(){

            //チェックボックス
            var inputE = $(this);


            var inputValue = inputE.is(':checked');


            var strOverlayColumnID = inputE.parent('td').prev('td').prev('td').prev('td').text();
    //mod_start_20130829 チケット7511
            //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
            var indexOverlayColumnID = strOverlayColumnID;
    //mod_end_20130829 チケット7511
            if(indexOverlayColumnID.lastIndexOf('*')>0){
                indexOverlayColumnID = indexOverlayColumnID.replace('*','');
            }

            overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.USERINPUTREQUIREDFLG__C.Name}']
                = inputValue;

        }
   );
}


/**
 * 自動採番ををマッピングレコードに格納する
 */
function onchangeEstimateNumber(){
    //$('#estimateNumber').change(
    //$('select[id$="estimateNumber"]').change(
    $('.estimateNumber').change(
        function(){

            //selectタブ
            var selectE = $(this);


            var selectValue = selectE.val();


            var strOverlayColumnID = selectE.parent('td').prev('td').prev('td').prev('td').text();
    //mod_start_20130829 チケット7511
            //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
            var indexOverlayColumnID = strOverlayColumnID;
    //mod_end_20130829 チケット7511
            if(indexOverlayColumnID.lastIndexOf('*')>0){
                indexOverlayColumnID = indexOverlayColumnID.replace('*','');
            }

            overlayColumnIDMap[indexOverlayColumnID].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OBJECTCULOMN__C.Name}']
                = selectValue;

        }
   );
}

//$j=jQuery.noConflict(); //他のライブラリとの衝突を回避します

//$j(function($) {
$(function($) {

    createDraggable();
    createDroppable();



    //var nav = $('.nav,#navTab');
    var nav = $('#navTab');

    var navTop = nav.offset().top+200;

    $(window).scroll(function () {

        var winTop = $(this).scrollTop();

        if (winTop > navTop) {

            //nav.width(nav.width());
            nav.addClass('fixed');

        } else if (winTop <= navTop) {

            //nav.width(720);
            //nav.css('width','');
            nav.removeClass('fixed');

        }

    });




    deleteDrags();
    searchOption();

    $('.drags').hover(
        function(){

            //$(this).addClass('ui-draggable');
            createDraggable();
        }
    );


    hideShowTabMain();

    if({!isPdfAvailable}){
        $('#tabLinkSecurity').show();
    }else{
        $('#tabLinkSecurity').hide();
    }
});

//連想配列
var beforeUserAuthAddedMap = {};

//文字列
var strBeforeUserAuthAddedLabel = '';

//連想配列
var beforeCategoryMap = {};

//option要素
var beforeAddedUserOptionArray = [];

/**
 * 初期化処理
 */
$(document).ready(function() {


    $('#tv').treeview({});

    //$(esc('page:form:added')+' option').each(function() {
    //$('select[id$="added"]').children('option').each(function(){
    $('select[id$="added"] option').each(function(){

        beforeUserAuthAddedMap[$(this).val()] = $(this).text();

        beforeAddedUserOptionArray.push($(this));

        if(strBeforeUserAuthAddedLabel != ''){
              strBeforeUserAuthAddedLabel += ',';
              strBeforeUserAuthAddedLabel += $(this).text();
        }else{
              strBeforeUserAuthAddedLabel = $(this).text();
        }

    });


    //修正前のカテゴリを保持する

    $(".categoryField").each(function(){
        var objCategoryE = $(this);
        var objCategory = {};

        getObjCategory(objCategoryE,objCategory);

        beforeCategoryMap[objCategory['field']] = objCategory;
    });


});

/**
 * 画面のカテゴリ情報を取得する
 */
function getObjCategory(objCategoryE,objCategory){

    objCategory['field'] = objCategoryE.attr('data-name');
    objCategory['value'] = '';
    objCategory['isMulti'] = objCategoryE.attr('data-multi');
    objCategory['label'] = objCategoryE.prev('td').text();
    objCategory['valueLabel'] = '';

    if(objCategoryE.attr('data-multi') == 'true'){

        var checkedValue = '';
        var checkedValueLabel = '';

        objCategoryE.children('table').children('tbody').children('tr').children('td').each(function(){

            var checkboxE = $(this).children('input');

            if(checkboxE.is(':checked')){
                //if(checkboxE.attr('checked')){
                if(checkedValue == ''){
                    //checkedValue = checkboxE.next('label').text();
                    checkedValue = checkboxE.val();
                    checkedValueLabel = checkboxE.next('label').text();
                }else{
                    checkedValue += ';';
                    checkedValueLabel += ',';
                    //checkedValue += checkboxE.next('label').text();
                    checkedValue += checkboxE.val();
                    checkedValueLabel += checkboxE.next('label').text();
                }
            }

            objCategory['value'] = checkedValue;

            if(checkedValue != ''){
                objCategory['valueLabel'] = checkedValueLabel;
            }else{
                objCategory['valueLabel'] = '{!$Label.label_wf_00141}';
            }
        });
    }else{

        //objCategory['field'] = objCategoryE.attr('data-name');
        objCategory['value'] = objCategoryE.children('select').val();
        objCategory['valueLabel'] = objCategoryE.children('select:first-child').children('option:selected').text();

        if(objCategory['valueLabel'] == '' || objCategory['valueLabel'] == ' '){
            objCategory['valueLabel'] = '{!$Label.label_wf_00141}';
        }
    }

}


</script>
<script type="text/javascript">

/**
 * 基本タブを表示する
 */
function hideShowTabMain(){

    //$('#tabs').css('height','800px');
    //$('#tabs').css('overflow','');
    $('#tabs').height(800);

    $('#FFRegistMain').show();
    $('#tabLinkMain').removeClass('ui-state-disabled').addClass('ui-tabs-selected ui-state-active');
    $('#tabFormatSetting,#tabMapping,#tabSecurity').hide();
    $('#tabLinkSheet,#tabLinkMapping,#tabLinkSecurity').removeClass('ui-state-disabled ui-tabs-selected ui-state-active');

}

/**
 * 出力シート順タブを表示する
 */
function hideShowTabSheet(){

    $('#tabs').height(800);

    $('#FFRegistMain,#tabMapping,#tabSecurity').hide();
    $('#tabLinkMain,#tabLinkMapping,#tabLinkSecurity').removeClass('ui-state-disabled ui-tabs-selected ui-state-active');
    $('#tabFormatSetting').show();
    $('#tabLinkSheet').removeClass('ui-state-disabled').addClass('ui-tabs-selected ui-state-active');

}

/**
 * マッピングタブを表示する
 */
function hideShowTabMapping(){

    //$('#tabs').css('overflow','auto');
    $('#tabs').height($('#tabMapping').height()+270+70);
    $('#tabMapping').height($('#tabMapping').height()+270);

    $('#tabMapping').show();

    $('#tabLinkMapping').removeClass('ui-state-disabled').addClass('ui-tabs-selected ui-state-active');
    $('#tabFormatSetting,#FFRegistMain,#tabSecurity').hide();
    $('#tabLinkSheet,#tabLinkMain,#tabLinkSecurity').removeClass('ui-state-disabled ui-tabs-selected ui-state-active');
}

/**
 * セキュリティタブを表示する
 */
function hideShowTabSecurity(){

    $('#tabs').height(800);

    $('#tabSecurity').show();
    $('#tabLinkSecurity').removeClass('ui-state-disabled').addClass('ui-tabs-selected ui-state-active');
    $('#tabFormatSetting,#FFRegistMain,#tabMapping').hide();
    $('#tabLinkSheet,#tabLinkMain,#tabLinkMapping').removeClass('ui-state-disabled ui-tabs-selected ui-state-active')
}

//TreeViewRecDTOのインスタンスを保持する
var treeViewRecDTO;

/**
 * ツリーの初期処理
 */
function asyncInitTrreView(){


    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.getInstanceTreeViewRecDTO}'

        ,function(result, event){

            if (event.status) {
                //DTOの空のインスタンスを取得
                treeViewRecDTO = result;

            } else if (event.type === 'exception') {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            } else {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            }
        }
        ,{escape: true}
    );
}

asyncInitTrreView();

//自動採番の情報を保持する
var EstimateNumberingList;
var EstimateNumberingOptionsAppendHtml = '';

function asyncGetEstimateNumberingList(){


    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.getEstimateNumberingList}'

        ,function(result, event){



            if (event.status) {

                EstimateNumberingList = result;


                for(var i=0; i<result.length; i++){
                    EstimateNumberingOptionsAppendHtml += '<option value=\"\" ></option>';
                    EstimateNumberingOptionsAppendHtml += '<option value=\"';
                    EstimateNumberingOptionsAppendHtml += result[i]['{!$ObjectType.EstimateNumbering__c.fields.Id.Name}'];
                    EstimateNumberingOptionsAppendHtml += '\" >';
                    EstimateNumberingOptionsAppendHtml += result[i]['{!$ObjectType.EstimateNumbering__c.fields.Name.Name}'];
                    EstimateNumberingOptionsAppendHtml += ' ';
                    EstimateNumberingOptionsAppendHtml += result[i]['{!$ObjectType.EstimateNumbering__c.fields.NumberingFormat__c.Name}'];
                    EstimateNumberingOptionsAppendHtml += '\</option>';
                }

            } else if (event.type === 'exception') {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            } else {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            }
        }
        ,{escape: true}
    );
}

asyncGetEstimateNumberingList();



//空のインスタンスを保持する
var TreeViewRecDtoInstance;

function asyncGetInstanceTreeViewRecDto(){



    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.getInstanceTreeViewRecDTO}'

        ,function(result, event){

            if (event.status) {
                //DTOの空のインスタンスを取得
                TreeViewRecDtoInstance = result;

            } else if (event.type === 'exception') {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            } else {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            }
        }
        ,{escape: true}
    );


}

asyncGetInstanceTreeViewRecDto();

//連想配列
var dragTrackMap = {};

//連想配列
var dragObjectMap = {};


function getTreeViewCustom(item){
    //ツリーでクリックした項目のオブジェクト
    var itemE = $(esc(item.id));

    if(currentTreeViewId != ''){
        $(esc(currentTreeViewId)).css('color','');
    }

    currentTreeViewId = item.id;


    itemE.css('color','red');

    var treeViewRecDto = $.extend(true,{},TreeViewRecDtoInstance);

    //ツリーでクリックした項目のオブジェクト
    var itemE = $(esc(item.id));

    var dragAppendHtml = '';

    dragAppendHtml += '<div class=\"drags\" style=\"z-index: 999; float: left; \" id=\"';
    dragAppendHtml += itemE.attr('data-name');
    dragAppendHtml += '-';
    dragAppendHtml += itemE.attr('data-name');
    dragAppendHtml += '\" data-name=\"';
    dragAppendHtml += itemE.attr('data-name');
    dragAppendHtml += '\" data-type=\"';
    dragAppendHtml += itemE.attr('data-type');
    dragAppendHtml += '\" data-parentId=\"';
    dragAppendHtml += item.id;
    dragAppendHtml += '\" >';
    //if(){
        dragAppendHtml += itemE.text();
    //}
    dragAppendHtml += '</div>';

    dragAppendHtml += '<span class=\"tooltip\">';
    dragAppendHtml += '{!$Label.label_wf_29018}';//表示ラベル名：
    dragAppendHtml += itemE.text();
    dragAppendHtml += '<br />';

    dragAppendHtml += '</span>';

    treeViewRecDto.objName = itemE.attr('data-objName');
    treeViewRecDto.reportMappingList = [];

    dragTrackMap[item.id] = treeViewRecDto;
    dragObjectMap[itemE.attr('data-name')+'-'+itemE.attr('data-name')] = treeViewRecDto;




    $('#ulDrags').hide('fast');
    $('#ulDrags').html(dragAppendHtml);
    $('#ulDrags').slideDown('slow');

    createDraggable();

    $('.drags').hover(
        function(){
            createDraggable();
        }
    );

}

/**
 * childrenの次のマッピングレコードのobjectIDRefの値を保持する
 */
var objectIDRefMap = {};

var objectIDRefParentsMap = {};

var objectIDParentsMap = {};

var objectIDChildrenParentsMap = {};

var dragIdMap = {};

/**
 * ツリーで最後にクリックした項目のID
 */
var currentTreeViewId = '';

/**
 * ツリーに表示する情報を取得する
 */
function getTreeView(item){

    //ツリーでクリックした項目のオブジェクト
    var itemE = $(esc(item.id));

    if(currentTreeViewId != ''){
        $(esc(currentTreeViewId)).css('color','');
    }

    currentTreeViewId = item.id;


    itemE.css('color','red');

    //ツリーに表示するオブジェクトのDescribe情報を取得する
    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.getTreeViewDTO}'
        ,itemE.attr('data-type')//sObject or field
        ,itemE.attr('data-objName')//オブジェクトのapi参照名
        ,itemE.attr('data-name')//項目のapi参照名
        ,function(result, event){

            if (event.status) {

                //ツリーに追加するhtmlタグを保持する
                var treeAppendHtml = '<ul >';

                //ドラッグ要素のhtmlタグを保持する
                var dragAppendHtml = '';

                var cntDragE = 0;

                //初期化
                dragIdMap = {};

                //Describeの情報からhtmlとMapを作成する
                for(var j=0;j<result.treeViewRecDtoList.length;j++){

                    //SOLXYZCSO001の名前空間の場合は、RemoteActionでエラーになるため、画面に表示しない
                    if(result.treeViewRecDtoList[j].objName.indexOf('SOLXYZCSO001__')>-1){

                        //次の項目を処理する
                        continue;
                    }else if(result.treeViewRecDtoList[j].name.indexOf('SOLXYZCSO001__')>-1){
                        //Userオブジェクトなどの管理パッケージの項目も登録した後、画面表示ができなくなるので、表示しない

                        //次の項目を処理する
                        continue;
                    }

                    var parentRelBreadcrumbsLabel = dragTrackMap[item.id].relBreadcrumbsLabel;

                    //if(parentRelBreadcrumbsLabel != '>'){
                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += dragTrackMap[item.id].relBreadcrumbsLabel;
                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += ' > ';
                    //}

                    if(result.treeViewRecDtoList[j].type == 'REFERENCE'){
                        result.treeViewRecDtoList[j].type = 'parents';
                    }else if(result.treeViewRecDtoList[j].type == 'children'){
                        //何もしない
                    }else{
                       //項目の型は利用しないので、空白にする
                       result.treeViewRecDtoList[j].type = '';
                    }


                    if(result.treeViewRecDtoList[j].type == 'parents'){

                        treeAppendHtml += '<li class=\"expandable\">';
                        treeAppendHtml += '<div class=\"hitarea expandable-hitarea\" onclick=\"triggerGetTreeView(this);\"></div>';

                        treeAppendHtml += '<span onclick=\"getTreeView(this);\" id=\"';
                        treeAppendHtml += item.id;
                        treeAppendHtml += ':';
                        treeAppendHtml += result.treeViewRecDtoList[j].objName;
                        treeAppendHtml += '-';
                        treeAppendHtml += result.treeViewRecDtoList[j].name;
                        treeAppendHtml += '\" data-name=\"';
                        treeAppendHtml += result.treeViewRecDtoList[j].name;
                        treeAppendHtml += '\" data-objName=\"';
                        treeAppendHtml += result.treeViewRecDtoList[j].objName;
                        treeAppendHtml += '\"';
                        treeAppendHtml += ' data-type=\"field\">';
                        treeAppendHtml += '{!$Label.label_wf_29020}';//（親）
                        treeAppendHtml += result.treeViewRecDtoList[j].label;
//                        treeAppendHtml += '(';
//                        treeAppendHtml += result.treeViewRecDtoList[j].name;
//                        treeAppendHtml += ')';
                        treeAppendHtml += '</span></li>';

                        var key = '';
                        key += item.id;
                        key += ':';
                        key += result.treeViewRecDtoList[j].objName;
                        key += '-';
                        key += result.treeViewRecDtoList[j].name;
                        result.treeViewRecDtoList[j].domId = key;


                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += '{!$Label.label_wf_29020}';//（親）
                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += result.treeViewRecDtoList[j].label;
//                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += '(';
//                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += result.treeViewRecDtoList[j].name;
//                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += ')';

                        //親のマッピングレコードを取得する
                        result.treeViewRecDtoList[j].reportMappingList =  $.extend(true,[],dragTrackMap[item.id].reportMappingList);

                        var objMapping = {};
                        var parentObjectID = '';

                        //if(result.treeViewRecDtoList[j].reportMappingList.length == 0){
                        //    parentObjectID = result.treeViewRecDtoList[j].objName;
                        //}else{
                        //    parentObjectID = result.treeViewRecDtoList[j].relationshipName;
                        //    parentObjectID += '-';
                        //    parentObjectID += result.treeViewRecDtoList[j].objName;
                        //}


                        var prevObjMapping = {};

                        var cntReportMappingList = result.treeViewRecDtoList[j].reportMappingList.length;

                        if(cntReportMappingList>0){
                            prevObjMapping = result.treeViewRecDtoList[j].reportMappingList[cntReportMappingList-1];
                            //parentObjectID = result.treeViewRecDtoList[j].reportMappingList[cntReportMappingList-1]['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                            parentObjectID = prevObjMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];


                            if(prevObjMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] == 'children'){

                                parentObjectID = prevObjMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'];
                                objMapping['{!$ObjectType.ReportMapping__c.fields.ObjectIDREF__C.Name}'] = prevObjMapping['{!$ObjectType.ReportMapping__c.fields.SUBREFID__C.Name}'];

                            }else if(prevObjMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] == 'parents'){

                                var objectIDRef = '';

                                var objNameObjField = prevObjMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                                objNameObjField += ':';
                                objNameObjField += prevObjMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'];

                                objectIDRef = objectIDRefParentsMap[objNameObjField];
                                objectIDRef += '-';
                                objectIDRef += result.treeViewRecDtoList[j].objName;

                                parentObjectID = objectIDRef;


                            }

                        }else{
                            //parentObjectID = result.treeViewRecDtoList[j].relationshipName;
                            //parentObjectID += '-';
                            parentObjectID = result.treeViewRecDtoList[j].objName;
                        }


                        objMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] = result.treeViewRecDtoList[j].type;
                        objMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = parentObjectID;
                        objMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'] = result.treeViewRecDtoList[j].name;




                        result.treeViewRecDtoList[j].reportMappingList.push(objMapping);

                        dragTrackMap[key] = result.treeViewRecDtoList[j];

                        var objNameObjField = objMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                        objNameObjField += ':';
                        objNameObjField += objMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'];
                        //objectIDRefParentsMap[objNameObjField] = result.treeViewRecDtoList[j].relationshipName + '-' + result.treeViewRecDtoList[j].objName;
                        objectIDRefParentsMap[objNameObjField] = result.treeViewRecDtoList[j].relationshipName;

                        objectIDParentsMap[objNameObjField] = result.treeViewRecDtoList[j].objName;

                    }else if(result.treeViewRecDtoList[j].type == 'children'){

                        treeAppendHtml += '<li class="expandable">';
                        treeAppendHtml += '<div class=\"hitarea expandable-hitarea\" onclick=\"triggerGetTreeView(this);\"></div>';
                        treeAppendHtml +='<span onclick=\"getTreeView(this);\" id=\"';
                        treeAppendHtml += item.id;
                        treeAppendHtml += ':';
                        //ツリー上でユニークにするため、子リレーション名を利用する
                        //treeAppendHtml += result.treeViewRecDtoList[j].objName;
                        treeAppendHtml += result.treeViewRecDtoList[j].relationshipName
                        treeAppendHtml += '-';
                        treeAppendHtml += result.treeViewRecDtoList[j].name;
                        treeAppendHtml += '\" data-name=\"';
                        treeAppendHtml += result.treeViewRecDtoList[j].name;
                        treeAppendHtml += '\" data-objName=\"';
                        treeAppendHtml += result.treeViewRecDtoList[j].objName;
                        treeAppendHtml += '\"';
                        treeAppendHtml += '\" data-parentObjName=\"';
                        treeAppendHtml += result.treeViewRecDtoList[j].objectName;
                        treeAppendHtml += '\"';
                        treeAppendHtml += ' data-type=\"sObject\">';
                        treeAppendHtml += '{!$Label.label_wf_29021}';//（子）
                        treeAppendHtml += result.treeViewRecDtoList[j].label;
//                        treeAppendHtml += '(';
//                        treeAppendHtml += result.treeViewRecDtoList[j].relationshipName;
//                        treeAppendHtml += ')';
                        treeAppendHtml += '</span></li>';

                        var key = '';
                        key += item.id;
                        key += ':';
                        //マッピングレコードを引けるように子リレーション名でユニークにする
                        //key += result.treeViewRecDtoList[j].objName;
                        key += result.treeViewRecDtoList[j].relationshipName;
                        key += '-';
                        key += result.treeViewRecDtoList[j].name;
                        result.treeViewRecDtoList[j].domId = key;


                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += '{!$Label.label_wf_29021}';//（子）
                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += result.treeViewRecDtoList[j].label;
//                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += '(';
//                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += result.treeViewRecDtoList[j].relationshipName;
//                        result.treeViewRecDtoList[j].relBreadcrumbsLabel += ')';

                        //親のマッピングレコードを取得する
                        result.treeViewRecDtoList[j].reportMappingList =  $.extend(true,[],dragTrackMap[item.id].reportMappingList);

                        var objMapping = {};
                        var parentObjectID = '';

                        var prevObjMapping = {};

                        var cntReportMappingList = result.treeViewRecDtoList[j].reportMappingList.length;

                        if(cntReportMappingList>0){
                            prevObjMapping = result.treeViewRecDtoList[j].reportMappingList[cntReportMappingList-1];
                            //parentObjectID = result.treeViewRecDtoList[j].reportMappingList[cntReportMappingList-1]['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                            parentObjectID = prevObjMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];


                            if(prevObjMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] == 'children'){

                                parentObjectID = prevObjMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'];
                                objMapping['{!$ObjectType.ReportMapping__c.fields.ObjectIDREF__C.Name}'] = prevObjMapping['{!$ObjectType.ReportMapping__c.fields.SUBREFID__C.Name}'];

                            }else if(prevObjMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] == 'parents'){

                                var objectIDRef = '';

                                var objNameObjField = prevObjMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                                objNameObjField += ':';
                                objNameObjField += prevObjMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'];

                                objectIDRef = objectIDRefParentsMap[objNameObjField];
                                objectIDRef += '-';
                                //objectIDRef += objectIDParentsMap[objNameObjField];
                                objectIDRef += result.treeViewRecDtoList[j].objectName;

                                //parentObjectID = itemE.attr('data-parentObjName');
                                parentObjectID = objectIDRef;

                            }

                        }else{
                            parentObjectID = itemE.attr('data-objName');
                        }


                        objMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] = result.treeViewRecDtoList[j].type;
                        objMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = parentObjectID;
                        objMapping['{!$ObjectType.ReportMapping__c.fields.Objectculomn__c.Name}'] = result.treeViewRecDtoList[j].name;
                        objMapping['{!$ObjectType.ReportMapping__c.fields.SUBREFID__C.Name}'] = result.treeViewRecDtoList[j].relationshipName;

                        result.treeViewRecDtoList[j].reportMappingList.push(objMapping);

                        //オブジェクトの子リレーション名をキャッシュする
                        objectIDRefMap[result.treeViewRecDtoList[j].objName] = result.treeViewRecDtoList[j].relationshipName;

                        dragTrackMap[key] = result.treeViewRecDtoList[j];
                    }

                    //親リレーションも対応しなくてよくなったので、修正
                    //if(result.treeViewRecDtoList[j].type != 'children'){
                    if(result.treeViewRecDtoList[j].type == ''){

                        cntDragE++;

                        dragAppendHtml += '<div class="divsort" style=\"float:left;\">';

                        dragAppendHtml += '<div class=\"drags\" style=\"z-index: 999; float: left; \" id=\"';
                        dragAppendHtml += result.treeViewRecDtoList[j].objName;
                        dragAppendHtml += '-';
                //mod_start_20130829 チケット7511
                        //dragAppendHtml += result.treeViewRecDtoList[j].name.toLowerCase();
                        dragAppendHtml += result.treeViewRecDtoList[j].name;
                        dragAppendHtml += '\" data-name=\"';
                        //dragAppendHtml += result.treeViewRecDtoList[j].name.toLowerCase();
                        dragAppendHtml += result.treeViewRecDtoList[j].name;
                //mod_end_20130829 チケット7511
                        dragAppendHtml += '\" data-parentId=\"';
                        dragAppendHtml += item.id;
                        dragAppendHtml += '\" data-search=\"';
                        dragAppendHtml += result.treeViewRecDtoList[j].label.toLowerCase();
                        dragAppendHtml += '-';
                        dragAppendHtml += result.treeViewRecDtoList[j].name.toLowerCase();

                        dragAppendHtml += '\" >';
                        dragAppendHtml += result.treeViewRecDtoList[j].label;
                        dragAppendHtml += '</div>';

                        dragAppendHtml += '<span class=\"tooltip\" style=\"display:none;\">';

                        dragAppendHtml += '{!$Label.label_wf_29018}';//カスタム表示ラベル
                        dragAppendHtml += result.treeViewRecDtoList[j].label;
                        dragAppendHtml += '<br />';
                        dragAppendHtml += '{!$Label.label_wf_29019}';//api参照名
                        dragAppendHtml += result.treeViewRecDtoList[j].name;
                        dragAppendHtml += '</span>';

                        dragAppendHtml += '</div>';

                        var key = '';
                        key += result.treeViewRecDtoList[j].objName;
                        key += '-';
                //mod_start_20130829 チケット7511
                        //key += result.treeViewRecDtoList[j].name.toLowerCase();
                        key += result.treeViewRecDtoList[j].name;
                //mod_end_20130829 チケット7511
                        var cntReportMappingList = result.treeViewRecDtoList[j].reportMappingList.length;

                        if(cntReportMappingList>0){

                            if(objectIDRefMap[result.treeViewRecDtoList[j].objName] != undefined
                                    && objectIDRefMap[result.treeViewRecDtoList[j].objName] != null){
                                result.treeViewRecDtoList[j].reportMappingList[cntReportMappingList-1]['{!$ObjectType.ReportMapping__c.fields.ObjectIDREF__c.Name}']
                                    = objectIDRefMap[result.treeViewRecDtoList[j].objName];
                            }

                        }

                        dragObjectMap[key] = result.treeViewRecDtoList[j];

                        var dragId = item.id;
                        dragId += ':';
                        dragId += key;
                        dragIdMap[dragId.toLowerCase()] = key;
                    }

                }

                treeAppendHtml += '</ul>';

                //ツリーにトグルを表示する。
                //if(itemE.prev('div').length == 0){
                //
                //    if(itemE.parent('.last').length == 0){
                //        itemE.parent('li').prepend('<div class=\"hitarea collapsable-hitarea\"></div>');
                //    }else{
                //        itemE.parent('li').prepend('<div class=\"hitarea lastCollapsable-hitarea collapsable-hitarea\"></div>');
                //    }
                //}


                //ツリーが作成済みでない場合
                if(!itemE.hasClass('created')){
                    itemE.addClass('created');
                    itemE.parent('li').append(treeAppendHtml);

                    $("#tv").treeview();

                    itemE.next('ul').children('li:last-child').addClass('lastExpandable');
                    itemE.next('ul').children('li:last-child').children('div').addClass('lastExpandable-hitarea');

                    clickHideTree();
                    clickShowTree();

                    if(itemE.parent('li').hasClass('expandable')){
                        itemE.prev('div').trigger("click");
                    }
                }



                resizeDragsAreaWidth(cntDragE);

                $('#ulDrags').hide('fast');

                $('#ulDrags').html(dragAppendHtml);
                //$('#ulDrags').remove();
                //$('#ulDrags').append(dragAppendHtml);

                var divList =
                $('#ulDrags div.divsort').sort(function(a, b){
                    return $(a).children('div').text() > $(b).children('div').text() ? 1 : -1;

                });

                $('#ulDrags').html(divList);

                $('#ulDrags').slideDown('slow');


                createDraggable();

                $('.drags').hover(
                    function(){
                       createDraggable();
                    }
                );



            } else if (event.type === 'exception') {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            } else {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            }
        }
        ,{escape: true}
    );
}

function resizeDragsAreaWidth(cnt){

    if(cnt<21){

        //if(950<$(window).width()-338){
        //    console.log('1');
        //    console.log($(window).width());
        //    $('#divDrags').width($(window).width()-338-200);
        //    $('#ulDrags').width($(window).width()-338-200);
        //    $('#quickTool').width($(window).width()-338-200);
        //}else{
        //    console.log('2');
        //    console.log($(window).width());
        //    $('#divDrags').width(750);
            $('#ulDrags').width(750);
            $('#quickTool').width(750);
        //}



    }else{
        var w = (cnt/4)*115;
        //var w = ((cnt/4)+1)*80;

        //$('#ulDrags').css('width',w+'px');
        $('#ulDrags').width(w);
        $('#quickTool').width(w);

        //if(950<$(window).width()-338){
        //    console.log('3');
        //    console.log($(window).width());
        //    $('#divDrags').width($(window).width()-338-200);
        //}else{
        //    console.log('4');
        //    console.log($(window).width());
        //    $('#divDrags').width(750);
        //}


    }
}

function bindResize(){

    var cntDragE = 0;

    $(".drags").each(function(){

        if($(this).is(':visible')){
            cntDragE++;
        }

    });

    resizeDragsAreaWidth(cntDragE);
}

$(document).ready(function() {

        $(window).bind("resize", bindResize);

        $('div[id$="sectionMap"]').hide();

        bindResize();
      });

/**
 * ツリーを表示しない
 */
function clickHideTree(){

    $('.collapsable-hitarea').not('.lastCollapsable-hitarea').click(
        function(){

            $(this).removeClass('collapsable-hitarea').addClass('expandable-hitarea');
            $(this).parent('li').removeClass('collapsable').addClass('expandable');
            //$(this).parent('li').removeClass('collapsable');
            $(this).nextAll('ul').css('display','none');

            clickShowTree();
        }


    );

    $('.lastCollapsable-hitarea').click(
        function(){

            $(this).removeClass('lastCollapsable-hitarea').removeClass('collapsable-hitarea').addClass('lastExpandable-hitarea').addClass('expandable-hitarea');
            $(this).parent('li').removeClass('collapsable').addClass('expandable');
            //$(this).parent('li').removeClass('collapsable');
            $(this).nextAll('ul').css('display','none');

            clickShowTree();
        }


    );

}

/**
 * ツリーを表示する
 */
function clickShowTree(){

    $('.expandable-hitarea').not('.lastExpandable-hitarea').click(
        function(){

            $(this).removeClass('expandable-hitarea').addClass('collapsable-hitarea');
            $(this).parent('li').removeClass('expandable').addClass('collapsable');
            //$(this).parent('li').removeClass('expandable').addClass('collapsable');
            $(this).nextAll('ul').css('display','block');

            clickHideTree();
        }


    );

    $('.lastExpandable-hitarea').click(
        function(){

            $(this).removeClass('lastExpandable-hitarea').removeClass('expandable-hitarea').addClass('lastCollapsable-hitarea').addClass('collapsable-hitarea');
            $(this).parent('li').removeClass('expandable').addClass('collapsable');
            //$(this).parent('li').removeClass('expandable').addClass('collapsable');
            $(this).nextAll('ul').css('display','block');

            clickHideTree();
        }


    );


}

var OverlayColumnDTO;

/**
 * 新規作成時の初期化処理
 */
function asyncGetInstanceOverlayColumnDTO(){

    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.getInstanceOverlayColumnDTO}'

        ,function(result, event){

            if (event.status) {
                //グローバル変数に戻り値を格納する
                OverlayColumnDTO = result;

            } else if (event.type === 'exception') {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            } else {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            }
        }
        ,{escape: true}
    );
}

asyncGetInstanceOverlayColumnDTO();

//RemoteActionで利用するDTOクラス
var formFormatDTO;

/**
 * 新規作成時の初期化処理
 */
function asyncInitFormFormatMapping(){

    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.getInstanceFormFormatDTO}'

        ,function(result, event){

            if (event.status) {
                //グローバル変数に戻り値を格納する
                formFormatDTO = result;
                formFormatDTO.newFlg = true;
                formFormatDTO.ecmActiveFlg = {!ecmActiveFlg};

            } else if (event.type === 'exception') {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            } else {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            }
        }
        ,{escape: true}
    );
}


var cntContentsId = 0;
var contentsIdList = [];
var contentsPropertyMap = {};
var currentNumber = 0;
var lastNumber = 0;


/**
 * 編集時の初期化処理
 */
function asyncInitFormFormatDTOById(){

    var rdId = '{!JSENCODE(ReportDefinition__c.Id)}';

    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.initFormFormatDTOById}'
        ,rdId
        ,function(result, event){

            if (event.status) {
                //グローバル変数に戻り値を格納する
                formFormatDTO = result;

                if(formFormatDTO.errMessageList != null && formFormatDTO.errMessageList.length > 0){
                    var messageHtml = createMessageHtml(formFormatDTO.errMessageList);
                    $('#jsPageMessagesCell').html(messageHtml);
                    $('#jsPageMessages').show();
                }
                if(formFormatDTO.errFlg){
                    return;
                }

                formFormatDTO.ecmActiveFlg = {!ecmActiveFlg};

                //$('input[id$="overlayText"]').val([Name]);
                //$('input[id$="fixedKomoku"]').val([fixedKomoku]);
                //$('input[id$="detailKomoku"]').val([detailKomoku]);
                //$('input[id$="thum"]').val([thum]);
                //$('input[id$="rOverlayId"]').val([Id]);
                //$('input[id$="rOverlayVersion"]').val([LatestVersion]);
                //$('input[id$="fixedMap"]').val([returnfixedMap]);
                //$('input[id$="detailMap"]').val([returndetailMap]);

                formFormatDTO.overlayText = $('input[id$="overlayText"]').val();
                formFormatDTO.rOverlayId = $('input[id$="rOverlayId"]').val();
                formFormatDTO.rOverlayVersion = $('input[id$="rOverlayVersion"]').val();

                if(formFormatDTO.overlayText == '' || formFormatDTO.overlayText == undefined){
                    $('input[id$=changeOverlayVersion]').hide();
                }

                if(formFormatDTO.contentsIdList.length == 0
                    || !formFormatDTO.ecmActiveFlg){
                    createHtmlMappingTable(formFormatDTO);

                    if(formFormatDTO.mapOverlayColumnDtoList.length>0){
                        $('div[id$="sectionMap"]').show();
                        createHtmlMapsMappingTable(formFormatDTO);
                    }else{
                        $('div[id$="sectionMap"]').hide();
                    }

                    //WR本体の帳票定義情報を取得する
                    if(formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}']
                        != '' && formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}']
                            != null){
                        asyncGetFormDefinitionInfo(formFormatDTO, false);
                    }else if(formFormatDTO.rOverlayId != '' && formFormatDTO.rOverlayId != null){
                        //20130725新しい画面のリリースに伴い特殊条件を追加
                        //WR本体の帳票定義IDがnullでオーバレイIDがある場合は、最新オーバレイ反映処理を実行する
                        asyncChangeOverlayVersion();
                    }
                }else{

                    lastNumber = 0;
                    currentNumber = 0;

                    if(formFormatDTO.contentsIdList.length>1){
                        lastNumber = formFormatDTO.contentsIdList.length - 1;
                    }

                    contentPropertyGetAsync(formFormatDTO,currentNumber,lastNumber);


                }

            } else if (event.type === 'exception') {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            } else {

                CsoScript_loadingStop();

                var message = event.message;

                var errMessageArray = [];
                errMessageArray.push(message);

                var messageHtml = createMessageHtml(errMessageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();

            }
        }
        ,{escape: true}
    );
}

if('{!JSENCODE(ReportDefinition__c.Id)}' == '' || '{!JSENCODE(ReportDefinition__c.Id)}' == 'null'){
    asyncInitFormFormatMapping();
}else{
    asyncInitFormFormatDTOById();
}


/**
 * サムネイルURLを取得する
 */
function contentPropertyGetAsync(dto,current,last){


    var callerror = function(data){
        //CsoScript_loadingStop();

        if(data.status != 500){
            var dataObj = JSON.parse(data.responseText);

            if(dataObj.code == 'CA2-CPGS-XE-0002'){
                //ECM画像へのアクセス権がない場合はなにもしない。
            }else{
                var message = dataObj.message;
                message += '<br/>';
                message += 'code:';
                message += dataObj.code;
                var messageArray = [];

                messageArray.push(message);

                var messageHtml = createMessageHtml(messageArray);

                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();
                return;
            }

        }else{

            var errMessageArray = [];
            errMessageArray.push('{!$Label.msg_00136}');

            var messageHtml = createMessageHtml(errMessageArray);

            $('#jsPageMessagesCell').html(messageHtml);
            $('#jsPageMessages').show();
            return;
        }


        if(currentNumber==lastNumber){
            CsoScript_loadingStop();

            createHtmlMappingTable(formFormatDTO);
            deleteDrags();
            searchOption();

                    if(formFormatDTO.mapOverlayColumnDtoList.length>0){
                        $('div[id$="sectionMap"]').show();
                        createHtmlMapsMappingTable(formFormatDTO);
                    }else{
                        $('div[id$="sectionMap"]').hide();
                    }
                //WR本体の帳票定義情報を取得する
                if(formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}']
                    != '' && formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}']
                        != null){
                    asyncGetFormDefinitionInfo(formFormatDTO, true);
                }else if(formFormatDTO.rOverlayId != '' && formFormatDTO.rOverlayId != null){
                    //20130725新しい画面のリリースに伴い特殊条件を追加
                    //WR本体の帳票定義IDがnullでオーバレイIDがある場合は、最新オーバレイ反映処理を実行する
                    asyncChangeOverlayVersion();
                }
        }else{
            currentNumber++;
            contentPropertyGetAsync(formFormatDTO,currentNumber,lastNumber);
        }
    };

    var callback = function(data){

        contentsPropertyMap[data.fileId] = data;

        if(currentNumber==lastNumber){
            CsoScript_loadingStop();
            createHtmlMappingTable(formFormatDTO);
            deleteDrags();
            searchOption();

                    if(formFormatDTO.mapOverlayColumnDtoList.length>0){
                        $('div[id$="sectionMap"]').show();
                        createHtmlMapsMappingTable(formFormatDTO);
                    }else{
                        $('div[id$="sectionMap"]').hide();
                    }
                //WR本体の帳票定義情報を取得する
                if(formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}']
                    != '' && formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}']
                        != null){
                    asyncGetFormDefinitionInfo(formFormatDTO, true);
                }else if(formFormatDTO.rOverlayId != '' && formFormatDTO.rOverlayId != null){
                    //20130725新しい画面のリリースに伴い特殊条件を追加
                    //WR本体の帳票定義IDがnullでオーバレイIDがある場合は、最新オーバレイ反映処理を実行する
                    asyncChangeOverlayVersion();
                }
        }else{
            currentNumber++;
            contentPropertyGetAsync(formFormatDTO,currentNumber,lastNumber);
        }

    };

    CsoScript_loadingStart();
    //secureGetAsync('/contentsmanagement/ContentsPropertyGet.json?fileId=' + dto.contentsIdList[current],'' ,callback, callerror);
    secureGetAsyncECM('/contentsmanagement/ContentsPropertyGet.json?fileId=' + dto.contentsIdList[current],'',true,false ,callback, callerror);


}

/**
 * ページ冒頭でiframeで認証を通しておく必要あり。
 */
function secureGetAsyncECM(__url, __data, __sync, __cache, __callback, __callerror){

    // エラーハンドラーが無い場合には標準ハンドラーを使用
    if(__callerror === undefined){
        __callerror = exceptionHandler;
    }

    var errorWrap = function(data, status, throwz){
        if(status == 'timeout'){
            CsoScript_loadingStop();
            data = '{!$Label.msg_01074}';
        }
        __callerror(data, status, throwz);
    };

    $.ajax({
            url     : '{!$Label.field_CSO_URL}' + __url,
            // GET固定
            type    : 'GET',
            data    : __data,
            dataType: 'jsonp',
            sync    : __sync,
            cache   : __cache,
            timeout : 60000,
            success : function(data, status){
                          // 処理結果が失敗で処理継続等の付属情報も存在しない場合エラーと判断する
                          if(data.result == false && data.resultInfo == undefined){
                              //alert(data.message);
                              //return;
                              __callerror(data, status);
                          } else {
                              // 正常にコールバックを実行する
                              __callback(data, status);
                          }
                      },
            error   : errorWrap
    });
}

var sheet_Order;
var sheetNamesheetIdMap = {};
/**
 * WR本体の帳票定義情報を取得する
 */
function asyncGetFormDefinitionInfo(dto, hiddenMsg) {
    if(hiddenMsg){
        $('#jsPageMessages').hide();
    }
    
    // #10296 IE11で帳票定義参照・編集画面が開かない
    if(getBrowserType() == "IE11"){
        XMLHttpRequest = Sarissa.originalXMLHttpRequest;
    }
    
    //1回目のコールバック
    var callback = function (data) {
        
        sheetDto.sheet_list = data;
        
        //2回目のコールバック
        var callback2 = function(data) {
        
            var callback3 = function(data) {
                
                CsoScript_loadingStop();
                
                sheetDto.sheet_list = data.sheetInfoList;
                
                for (var i=0; i < sheetDto.sheet_list.length;i++) {
                    sheetsBase.push(makeSheetInfo(i, sheetDto.sheet_list[i].sheet_name, sheetDto.sheet_list[i].changeable, 'sheet'));
                    allSheets.push(makeSheetInfo(i, sheetDto.sheet_list[i].sheet_name, sheetDto.sheet_list[i].changeable, 'sheet'));
                    
                    if(sheetDto.sheet_list[i].sheet_name.indexOf("#") != 0){
                        insertSheets.push(makeSheetInfo(i, sheetDto.sheet_list[i].sheet_name, sheetDto.sheet_list[i].changeable, 'sheet'));
                    }
                }
                format = makeFormat(sheet_Order);
                change();
                createHtmlMappingTable(formFormatDTO);
            };
            
            var callerror3 = function(data, status, xhr) {
                
                CsoScript_loadingStop();
                
                if (data.status != 500) {
                    var dataObj = JSON.parse(data.responseText);
                    
                    var message = dataObj.message;
                    message += '<br/>';
                    message += 'code:';
                    message += dataObj.code;
                    
                    var errMessageArray = [];
                    errMessageArray.push(message);
                    
                    var messageHtml = createMessageHtml(errMessageArray);
                    $('#jsPageMessagesCell').html(messageHtml);
                    $('#jsPageMessages').show();
                } else {
                    var errMessageArray = [];
                    errMessageArray.push('{!$Label.msg_00136}');
                    
                    var messageHtml = createMessageHtml(errMessageArray);
                    
                    $('#jsPageMessagesCell').html(messageHtml);
                    $('#jsPageMessages').show();
                }
            };
            
            var apiGetSheetInfoUrl = '/rest/GetSheetInfo';
            apiGetSheetInfoUrl += '/';
            apiGetSheetInfoUrl += USERNAME;
            apiGetSheetInfoUrl += '/';
            apiGetSheetInfoUrl += CREDENTIAL;
            apiGetSheetInfoUrl += '/';
            apiGetSheetInfoUrl += formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayIDID__c.Name}'];
            
            if (formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayVersion__c.Name}'] != ''
                && formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayVersion__c.Name}'] != undefined) {
                    apiGetSheetInfoUrl += '/';
                    apiGetSheetInfoUrl += formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayVersion__c.Name}'];
            }
            
            secureGetAsyncSfJsonAccess(apiGetSheetInfoUrl, '', callback3, callerror3);
        };
        
        var callerror2 = function(data, status, xhr) {
            
            CsoScript_loadingStop();
            
            if (data.status != 500) {
                var dataObj = JSON.parse(data.responseText);
                
                var message = dataObj.message;
                message += '<br/>';
                message += 'code:';
                message += dataObj.code;
                
                var errMessageArray = [];
                errMessageArray.push(message);
                
                var messageHtml = createMessageHtml(errMessageArray);
                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();
            } else {
                var errMessageArray = [];
                errMessageArray.push('{!$Label.msg_00136}');
                
                var messageHtml = createMessageHtml(errMessageArray);
                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();
            }
        };
        
        sheet_Order = data.sheet_order;
        
        var paramData = JSON.stringify({
            'userid'        : USERNAME,
            'credential'    : CREDENTIAL,
            'ovl_id'        : data.ovl_id,
            'ovl_ver'       : data.ovl_ver,
            'sheet_order'   : JSON.stringify(data.sheet_order)
        });
        
        //WR本体の帳票定義プレビュー情報を取得する
        if (data.ovl_id != '') {
            securePostAsyncSf('/rest/FormDefinitionPreview', paramData, callback2, callerror2);
        } else {
            CsoScript_loadingStop();
        }
    };
    
    //1回目のコールバックエラー
    var callerror = function (data, status, xhr) {
        
        CsoScript_loadingStop();
        
        if (data.status != 500) {
            var dataObj = JSON.parse(data.responseText);
            
            var message = dataObj.message;
            message += '<br/>';
            message += 'code:';
            message += dataObj.code;
            
            var errMessageArray = [];
            errMessageArray.push(message);
            
            var messageHtml = createMessageHtml(errMessageArray);
            $('#jsPageMessagesCell').html(messageHtml);
            $('#jsPageMessages').show();
        } else {
            var errMessageArray = [];
            errMessageArray.push('{!$Label.msg_00136}');
            
            var messageHtml = createMessageHtml(errMessageArray);
            $('#jsPageMessagesCell').html(messageHtml);
            $('#jsPageMessages').show();
        }
    };
    
    CsoScript_loadingStart();
    
    var urlFormDefinitionInfo = '/rest/FormDefinitionInfo';
    urlFormDefinitionInfo += '/';
    urlFormDefinitionInfo += USERNAME;
    urlFormDefinitionInfo += '/';
    urlFormDefinitionInfo += CREDENTIAL;
    urlFormDefinitionInfo += '/';
    urlFormDefinitionInfo += dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}'];
    
    secureGetAsyncSfJsonAccess(urlFormDefinitionInfo, '', callback, callerror);
}

function makeFormat(sheetOrder) {

    var order = new Array();

    // サブシートシートを取得
    var orderSubReport = new Array();
    for(var j = 0; j<allSheets.length; j++){
        if(allSheets[j].sheet_name.indexOf("#") == 0){
            orderSubReport.push(allSheets[j]);
            allSheets.splice(j, 1);
        }
    }
    for(var i=0; i<sheetOrder.length;i++){
        var type = sheetOrder[i].type;
        if (type == 'sheet') {
            for(var j=0; j<allSheets.length; j++){
                if(sheetOrder[i].sheet_id == allSheets[j].sheet_id){
                    appendNode(order, allSheets[j]);
                    // 差込シートから削除
                    allSheets.splice(j, 1);
                }
            }
            
            for(var k=0; k<sheetOrder[i].insertions.length; k++){
                appendInsert(order, makeInsertInfo(randamStr(5), sheetNamesheetIdMap[sheetOrder[i].insertions[k].insert_sheet_name], sheetOrder[i].insertions[k].insert_condition), sheetOrder[i].sheet_id);
            }

        } else if (type == 'repeat') {
            var childlen = makeFormat(sheetOrder[i].children);
            var repeat = makeRepeatInfo(randamStr(5));
            repeat['children'] = childlen;
            order.push(repeat);
        } else if (type == 'trace') {
            var childlen = makeFormat(sheetOrder[i].children);
            var trace = makeTraceInfo(randamStr(5));
            trace['children'] = childlen;
            order.push(trace);
        }
    }
    
    // サブシートシートを追加
    for(var j = 0; j<orderSubReport.length; j++){
        if(orderSubReport[j].sheet_name.indexOf("#") == 0){
            appendNode(order, orderSubReport[j]);
        }
    }

    return order;
}

function overlaySearch() {
    //2013.01.22 #5068対処
    window.open('{!$Page.FE_OverlaySearch}' , '_blank', 'width=980,height=400,resizable=yes,toolbar=no,status=no,scrollbars=yes,menubar=no,directories=no,location=no,dependant=yes', true, true);
}

function searchObject() {
    var searchPageUrl = "/apex/FE_ObjectSearch";
    //2013.01.22 #5068対処
    window.open('{!$Page.FE_ObjectSearch}?callType=new', 'document','width=600,height=400,scrollbars=yes,toolbar=no,status=no,directories=no,menubar=no,resizable=yes', true);

}

function ecmImageSearch(item) {
    window.open('{!$Page.EcmImageSearch}?thumid='+item.id , '_blank', 'width=980,height=400,resizable=yes,toolbar=no,status=no,scrollbars=yes,menubar=no,directories=no,location=no,dependant=yes', true, true);
}

var parentNew = 'true';

//連想配列
var overlayColumnIDMap = {};


/**
 * オーバレイのドロップエリアを生成する
 */
function searchReturn(fixedKomoku,detailKomoku,thum,Name,Id,LatestVersion,returnfixedMap,returndetailMap) {

    // #10296 IE11で帳票定義参照・編集画面が開かない
    if(getBrowserType() == "IE11"){
        XMLHttpRequest = Sarissa.originalXMLHttpRequest;
    }
    
    $('[id$="sfPageMessages"]').hide();
    $('#jsPageMessages').hide();

    $('input[id$="overlayText"]').val(Name);
    $('input[id$="fixedKomoku"]').val(fixedKomoku);
    $('input[id$="detailKomoku"]').val(detailKomoku);
    $('input[id$="thum"]').val(thum);
    $('input[id$="rOverlayId"]').val(Id);
    $('input[id$="rOverlayVersion"]').val(LatestVersion);
    $('input[id$="fixedMap"]').val(returnfixedMap);
    $('input[id$="detailMap"]').val(returndetailMap);
//    overlayMapFirst();

    formFormatDTO.overlayText = Name;
    formFormatDTO.fixedKomoku = fixedKomoku;
    formFormatDTO.detailKomoku = detailKomoku;
    formFormatDTO.thum = thum;



    formFormatDTO.rOverlayId = Id;
    formFormatDTO.rOverlayVersion = LatestVersion;

    formFormatDTO.fixedMap = returnfixedMap;

    formFormatDTO.detailMap = returndetailMap;

    //コールバックエラー
    var callerror = function (data) {

                    CsoScript_loadingStop();

                    if(data.status != 500){
                        var dataObj = JSON.parse(data.responseText);
                    
                        var message = dataObj.message;
                        message += '<br/>';
                        message += 'code:';
                        message += dataObj.code;

                        var errMessageArray = [];
                        errMessageArray.push(message);

                        var messageHtml = createMessageHtml(errMessageArray);

                        $('#jsPageMessagesCell').html(messageHtml);
                        $('#jsPageMessages').show();
                    }else{

                        var errMessageArray = [];
                        errMessageArray.push('{!$Label.msg_00136}');

                        var messageHtml = createMessageHtml(errMessageArray);

                        $('#jsPageMessagesCell').html(messageHtml);
                        $('#jsPageMessages').show();
                    }
                };


    CsoScript_loadingStart();

    //var apiGetSheetInfoUrl = '/rest/GetSheetInfo/p';
    var apiGetSheetInfoUrl = '/rest/GetSheetInfo';
    apiGetSheetInfoUrl += '/';
    apiGetSheetInfoUrl += USERNAME;
    apiGetSheetInfoUrl += '/';
    apiGetSheetInfoUrl += CREDENTIAL;
    apiGetSheetInfoUrl += '/';
    apiGetSheetInfoUrl += Id;

    if(LatestVersion != '' && LatestVersion != null){
        apiGetSheetInfoUrl += '/';
        apiGetSheetInfoUrl += LatestVersion;
    }

    //secureGetAsyncSf(apiGetSheetInfoUrl, '', callbackAsyncGetSheetInfo, callerror);
    secureGetAsyncSfJsonAccess(apiGetSheetInfoUrl, '', callbackAsyncGetSheetInfo, callerror);

}

/**
 * オーバレイ情報のコールバック
 */
function callbackAsyncGetSheetInfo(data){

    CsoScript_loadingStop();

    resetSheetSelect();

    var sheetArray = new Array();

    changeMappingInfo(data,formFormatDTO,sheetArray);

    //sheetDto.sheet_list = data;
    sheetDto.sheet_list = sheetArray;

    var sheetList = sheetDto.sheet_list;

    var elem = $("#SelectableSheet");
    var refopt = "";
    var insopt = "";
    // SelectBox設定

    var sheetCount = 0;
    for (var i = 0; i < sheetList.length; i++) {
        allSheets.push(makeSheetInfo(i, sheetList[i].sheet_name, sheetList[i].changeable, 'sheet'));
        sheetsBase.push(makeSheetInfo(i, sheetList[i].sheet_name, sheetList[i].changeable, 'sheet'));
        if(sheetList[i].sheet_name.indexOf("#") != 0){
            sheetCount++;
            insertSheets.push(makeSheetInfo(i, sheetList[i].sheet_name, sheetList[i].changeable, 'sheet'));
        }
    }


    format = makeFormat(sheetList);

    change();
    //$("#SelectionArea").dialog("close");
    //$.unblockUI();

    formFormatDTO.rOverlayVersion = data.ovlVersion;
    formFormatDTO.rOverlayLatestVersion = data.ovlVersion;

    if(formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayVersionMismatchFlg__c.Name}'] != undefined){
        formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayVersionMismatchFlg__c.Name}'] = false;
    }

    $('[id$="rOverlayId"]').val(data.ovlId);
    //$('[id$="rOverlayText"]').val(name);
    $('[id$="rOverlayVersion"]').val(data.ovlVersion);

    createHtmlMappingTable(formFormatDTO);

    if(formFormatDTO.mapOverlayColumnDtoList.length>0){
        $('div[id$="sectionMap"]').show();
        createHtmlMapsMappingTable(formFormatDTO);
    }else{
        $('div[id$="sectionMap"]').hide();
    }

    $('input[id$=changeOverlayVersion]').hide();

    if(sheetCount == 1){

        $('#SelectableSheet').children('option:first').attr('selected',true);

        setTimeout(function () {$('#addSingleButton').trigger('click');},1000);

    }
}

//シート名
var sheetNameArray = new Array();

/**
 * マッピング情報を作成する
 */
function changeMappingInfo(res, dto, shArray){

    var overlayColumnDtoMap = {};
    var beforeOverlayColumnDtoMap = {};

    var mapOverlayColumnDtoMap = {};
    var beforeMapOverlayColumnDtoMap = {};

    var delOverlayColumnDtoList = [];
    var newOverlayColumnIDMap = {};

    for(var i=0; i<dto.overlayColumnDtoList.length; i++){

        var strOverlayColumnId
            = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}'];

        beforeOverlayColumnDtoMap[strOverlayColumnId]
            = $.extend(true,{},dto.overlayColumnDtoList[i]);

    }

    for(var i=0; i<dto.mapOverlayColumnDtoList.length; i++){

        var strOverlayColumnId
            = dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.keyName__c.Name}'];

        if(beforeMapOverlayColumnDtoMap[strOverlayColumnId] != undefined){
            beforeMapOverlayColumnDtoMap[strOverlayColumnId].push($.extend(true,{},dto.mapOverlayColumnDtoList[i]));
        }else{

            beforeMapOverlayColumnDtoMap[strOverlayColumnId] = [];
            beforeMapOverlayColumnDtoMap[strOverlayColumnId].push($.extend(true,{},dto.mapOverlayColumnDtoList[i]));
        }

    }

    //初期化
    dto.overlayColumnDtoList = [];

    //初期化
    dto.mapOverlayColumnDtoList = [];

    var overlayFixedKey = {};
    var overlayDetailKey = {};

    var overlayFixedMap = {};
    var overlayDetailMap = {};

    var overlayIDSheetMap = {};

    var mapOverlayIDSheetMap = {};


    var ecmFixedKey = {};
    var ecmDetailKey = {};

    if(res.sheetInfoList == null){
        res.sheetInfoList = [];
    }

    for(var i=0; i<res.sheetInfoList.length;i++){

        var sheetObj = new Object();

        sheetObj.sheet_id = res.sheetInfoList[i].sheet_id;
        sheetObj.sheet_name = res.sheetInfoList[i].sheet_name;
        sheetObj.sheet_thum = res.sheetInfoList[i].sheet_thum;
        sheetObj.changeable = res.sheetInfoList[i].changeable;

        shArray.push(sheetObj);

        //sheetNameArray.push(sheetObj);

        if(res.sheetInfoList[i].fixedKey == null){
            res.sheetInfoList[i].fixedKey = [];
        }

        for(var j=0; j<res.sheetInfoList[i].fixedKey.length; j++){

            var strOverlayColumnId
                = res.sheetInfoList[i].fixedKey[j]['name'];

            overlayFixedKey[strOverlayColumnId]
                = res.sheetInfoList[i].fixedKey[j];

            if(beforeOverlayColumnDtoMap[strOverlayColumnId] != undefined){

                overlayColumnDtoMap[strOverlayColumnId]
                    = beforeOverlayColumnDtoMap[strOverlayColumnId];

                overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                    = res.sheetInfoList[i].fixedKey[j]['type'].toString();

                //データ型がイメージの場合
                if(res.sheetInfoList[i].fixedKey[j]['type'] == 3){
                    overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                        = res.sheetInfoList[i].fixedKey[j]['ref'].toString();

                    if(res.sheetInfoList[i].fixedKey[j]['ref'] == 3){
                        overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                            = 'Selection_of_users'; //ユーザ選択
                    }
                }

                if(overlayColumnDtoMap[strOverlayColumnId].reportMappingList.length>0){
                    var beforeObjReportMapping = overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0];
                    var objReportMapping = overlayColumnDtoMap[strOverlayColumnId].objReportMapping;

                    if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                            == '3'){
                        if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                            == '3'){

                            if(beforeObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                                    //ユーザ選択
                                    == 'Selection_of_users'
                                || beforeObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                                    //ＥＣＭ画像
                                    == 'ECM_image'){
                                overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                                    = beforeObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                            }else{

                                overlayColumnDtoMap[strOverlayColumnId].reportMappingList = [];
                                overlayColumnDtoMap[strOverlayColumnId].reportMappingList.push(overlayColumnDtoMap[strOverlayColumnId].objReportMapping);
                            }
                        }
                    }else{

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}']
                            = undefined;

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                            = objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'];

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                            = objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'];

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                            = objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}'];


                    }
                }
            }else{

                var overlayColumnDto = $.extend(true,{},OverlayColumnDTO);

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}']
                    = res.sheetInfoList[i].fixedKey[j]['name'];

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                    = res.sheetInfoList[i].fixedKey[j]['type'].toString();

                //データ型がイメージの場合
                if(res.sheetInfoList[i].fixedKey[j]['type'] == 3){
                    overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                        = res.sheetInfoList[i].fixedKey[j]['ref'].toString();

                    if(res.sheetInfoList[i].fixedKey[j]['ref'] == 3){
                        overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                            = 'Selection_of_users'; //ユーザ選択
                    }
                }

                overlayColumnDtoMap[strOverlayColumnId]
                    = $.extend(true,{},overlayColumnDto);

                overlayColumnDtoMap[strOverlayColumnId].reportMappingList.push(overlayColumnDtoMap[strOverlayColumnId].objReportMapping);

            }

            if(overlayIDSheetMap[strOverlayColumnId] != undefined){

                overlayIDSheetMap[strOverlayColumnId]['sheetid'] += ',';
                overlayIDSheetMap[strOverlayColumnId]['sheetid'] += res.sheetInfoList[i].sheet_id;

                overlayIDSheetMap[strOverlayColumnId]['sheetname'] += ',';
                overlayIDSheetMap[strOverlayColumnId]['sheetname'] += res.sheetInfoList[i].sheet_name;

            }else{

                var sheet = {};
                sheet['sheetid'] = res.sheetInfoList[i].sheet_id;
                sheet['sheetname'] = res.sheetInfoList[i].sheet_name;

                overlayIDSheetMap[strOverlayColumnId]
                    = $.extend(true,{},sheet);

            }
        }

        if(res.sheetInfoList[i].detailKey == null){
            res.sheetInfoList[i].detailKey = [];
        }

        for(var j=0;j<res.sheetInfoList[i].detailKey.length;j++){
            var strOverlayColumnId
                = res.sheetInfoList[i].detailKey[j]['name'] + '*';

            if(res.sheetInfoList[i].detailKey[j]['type'] != 3){
                overlayDetailKey[strOverlayColumnId]
                    = res.sheetInfoList[i].detailKey[j];
            }

            if(beforeOverlayColumnDtoMap[strOverlayColumnId] != undefined){


                overlayColumnDtoMap[strOverlayColumnId]
                    = beforeOverlayColumnDtoMap[strOverlayColumnId];

                overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                    = res.sheetInfoList[i].detailKey[j]['type'].toString();

                //データ型がイメージの場合
                if(res.sheetInfoList[i].detailKey[j]['type'] == 3){
                    overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnref__c.Name}']
                        = res.sheetInfoList[i].detailKey[j]['ref'].toString();

                    if(res.sheetInfoList[i].detailKey[j]['ref'] == 3){
                        overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                            = 'Selection_of_users'; //ユーザ選択
                    }
                }

                if(overlayColumnDtoMap[strOverlayColumnId].reportMappingList.length>0){
                    var beforeObjReportMapping = overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0];
                    var objReportMapping = overlayColumnDtoMap[strOverlayColumnId].objReportMapping;

                    if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                            == '3'){
                        if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                            == '3'){

                            if(beforeObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                                    //ユーザ選択
                                    == 'Selection_of_users'
                                || beforeObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                                    //ＥＣＭ画像
                                    == 'ECM_image'){
                                overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                                    = beforeObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                            }else{

                                overlayColumnDtoMap[strOverlayColumnId].reportMappingList = [];
                                overlayColumnDtoMap[strOverlayColumnId].reportMappingList.push(overlayColumnDtoMap[strOverlayColumnId].objReportMapping);
                            }
                        }
                    }else{

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}']
                            = undefined;

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                            = objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'];

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                            = objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'];

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                            = objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}'];


                    }
                }
            }else{

                var overlayColumnDto = $.extend(true,{},OverlayColumnDTO);

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}']
                    = res.sheetInfoList[i].detailKey[j]['name']+'*';

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                    = res.sheetInfoList[i].detailKey[j]['type'].toString();

                //データ型がイメージの場合
                if(res.sheetInfoList[i].detailKey[j]['type'] == 3){
                    overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnref__c.Name}']
                        = res.sheetInfoList[i].detailKey[j]['ref'].toString();

                    if(res.sheetInfoList[i].detailKey[j]['ref'] == 3){
                        overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                            = 'Selection_of_users'; //ユーザ選択
                    }
                }

                overlayColumnDto.isDetailItem = true;


                overlayColumnDtoMap[strOverlayColumnId]
                    = $.extend(true,{},overlayColumnDto);

                overlayColumnDtoMap[strOverlayColumnId].reportMappingList.push(overlayColumnDtoMap[strOverlayColumnId].objReportMapping);
            }


            if(overlayIDSheetMap[strOverlayColumnId] != undefined){

                overlayIDSheetMap[strOverlayColumnId]['sheetid'] += ',';
                overlayIDSheetMap[strOverlayColumnId]['sheetid'] += res.sheetInfoList[i].sheet_id;

                overlayIDSheetMap[strOverlayColumnId]['sheetname'] += ',';
                overlayIDSheetMap[strOverlayColumnId]['sheetname'] += res.sheetInfoList[i].sheet_name;

            }else{

                var sheet = {};
                sheet['sheetid'] = res.sheetInfoList[i].sheet_id;
                sheet['sheetname'] = res.sheetInfoList[i].sheet_name;

                overlayIDSheetMap[strOverlayColumnId] = $.extend(true,{},sheet);

            }

        }

        if(res.sheetInfoList[i].ecmFixedKey == null){
            res.sheetInfoList[i].ecmFixedKey = [];
        }

        for(var j=0; j<res.sheetInfoList[i].ecmFixedKey.length; j++){

            var strOverlayColumnId
                = res.sheetInfoList[i].ecmFixedKey[j]['name'];

            ecmFixedKey[strOverlayColumnId] = res.sheetInfoList[i].ecmFixedKey[j];

            if(beforeOverlayColumnDtoMap[strOverlayColumnId] != undefined){

                overlayColumnDtoMap[strOverlayColumnId]
                    = beforeOverlayColumnDtoMap[strOverlayColumnId];

                overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                    = res.sheetInfoList[i].ecmFixedKey[j]['id'];

                overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                    = 'Automatic_Image'; //自動画像

                if(overlayColumnDtoMap[strOverlayColumnId].reportMappingList.length>0){

                    var beforeObjReportMapping = overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0];
                    var objReportMapping = overlayColumnDtoMap[strOverlayColumnId].objReportMapping;

                    if(beforeObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                            == 'Automatic_Image'){ //自動画像

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                            = objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}'];
                    }else{

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList = [];
                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList.push(overlayColumnDto.objReportMapping);
                    }
                }
            }else{

                var overlayColumnDto = $.extend(true,{},OverlayColumnDTO);

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}']
                    = res.sheetInfoList[i].ecmFixedKey[j]['name'];

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                    = res.sheetInfoList[i].ecmFixedKey[j]['id'];

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                    = 'Automatic_Image'; //自動画像

                overlayColumnDtoMap[strOverlayColumnId] =
                    $.extend(true,{},overlayColumnDto);

                overlayColumnDtoMap[strOverlayColumnId].reportMappingList.push(overlayColumnDto.objReportMapping);

            }

            if(overlayIDSheetMap[strOverlayColumnId] != undefined){

                overlayIDSheetMap[strOverlayColumnId]['sheetid'] += ',';
                overlayIDSheetMap[strOverlayColumnId]['sheetid'] += res.sheetInfoList[i].sheet_id;

                overlayIDSheetMap[strOverlayColumnId]['sheetname'] += ',';
                overlayIDSheetMap[strOverlayColumnId]['sheetname'] += res.sheetInfoList[i].sheet_name;

            }else{

                var sheet = {};
                sheet['sheetid'] = res.sheetInfoList[i].sheet_id;
                sheet['sheetname'] = res.sheetInfoList[i].sheet_name;

                overlayIDSheetMap[strOverlayColumnId]
                    = $.extend(true,{},sheet);

            }
        }


        if(res.sheetInfoList[i].ecmDetailKey == null){
            res.sheetInfoList[i].ecmDetailKey = [];
        }

        for(var j=0;j<res.sheetInfoList[i].ecmDetailKey.length;j++){

            var strOverlayColumnId
                = res.sheetInfoList[i].ecmDetailKey[j]['name'] + '*';

            ecmDetailKey[strOverlayColumnId]
                = res.sheetInfoList[i].ecmDetailKey[j];

            if(beforeOverlayColumnDtoMap[strOverlayColumnId] != undefined){


                overlayColumnDtoMap[strOverlayColumnId]
                    = beforeOverlayColumnDtoMap[strOverlayColumnId];

                overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                    = res.sheetInfoList[i].ecmDetailKey[j]['id'];

                overlayColumnDtoMap[strOverlayColumnId].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                    = 'Automatic_Image'; //自動画像

                if(overlayColumnDtoMap[strOverlayColumnId].reportMappingList.length>0){

                    var beforeObjReportMapping = overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0];
                    var objReportMapping = overlayColumnDtoMap[strOverlayColumnId].objReportMapping;

                    if(beforeObjReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                            == 'Automatic_Image'){ //自動画像

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList[0]['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                            = objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}'];
                    }else{

                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList = [];
                        overlayColumnDtoMap[strOverlayColumnId].reportMappingList.push(overlayColumnDto.objReportMapping);
                    }
                }
            }else{

                var overlayColumnDto = $.extend(true,{},OverlayColumnDTO);

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}']
                    = res.sheetInfoList[i].ecmDetailKey[j]['name']+'*';

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                    = res.sheetInfoList[i].ecmDetailKey[j]['id'];

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
                   = 'Automatic_Image'; //自動画像

                overlayColumnDto.isDetailItem = true;

                overlayColumnDtoMap[strOverlayColumnId]
                    = $.extend(true,{},overlayColumnDto);

                overlayColumnDtoMap[strOverlayColumnId].reportMappingList.push(overlayColumnDto.objReportMapping);

            }


            if(overlayIDSheetMap[strOverlayColumnId] != undefined){

                overlayIDSheetMap[strOverlayColumnId]['sheetid'] += ',';
                overlayIDSheetMap[strOverlayColumnId]['sheetid'] += res.sheetInfoList[i].sheet_id;

                overlayIDSheetMap[strOverlayColumnId]['sheetname'] += ',';
                overlayIDSheetMap[strOverlayColumnId]['sheetname'] += res.sheetInfoList[i].sheet_name;

            }else{

                var sheet = {};
                sheet['sheetid'] = res.sheetInfoList[i].sheet_id;
                sheet['sheetname'] = res.sheetInfoList[i].sheet_name;

                overlayIDSheetMap[strOverlayColumnId]
                    = $.extend(true,{},sheet);

            }

        }


        //地図連携
        for(var key in res.sheetInfoList[i].fixedMap){

            mapOverlayColumnDtoMap[key] = [];


            if(beforeMapOverlayColumnDtoMap[key] != undefined){

                for(var j=0; j<beforeMapOverlayColumnDtoMap[key].length;j++){
                    //dto.mapOverlayColumnDtoList.push(beforeMapOverlayColumnDtoMap[key][j]);
                    //mapOverlayColumnDtoMap[key] = beforeMapOverlayColumnDtoMap[key][j];
                    mapOverlayColumnDtoMap[key].push(beforeMapOverlayColumnDtoMap[key][j]);

                }

            }else{

                var fMap = res.sheetInfoList[i].fixedMap[key];

                var overlayColumnDto = $.extend(true,{},OverlayColumnDTO);

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.tagInfo__c.Name}']
                    = 'fixedMap';

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.keyName__c.Name}']
                    = key;

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.MapName__c.Name}']
                    = fMap['name'];

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.MapHeight__c.Name}']
                    = fMap['height'];

                overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.MapWidth__c.Name}']
                    = fMap['width'];


                var locationArray = fMap['location'].split('+');

                for(var h=0; h<locationArray.length; h++){

                    //var startIndex = locationArray[h].indexOf('<<');
                    var endIndex = locationArray[h].lastIndexOf('>>');

                    overlayColumnDto.objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}']
                        = locationArray[h].substring(2, endIndex);

                    //dto.mapOverlayColumnDtoList.push($.extend(true,{},overlayColumnDto));
                    mapOverlayColumnDtoMap[key].push($.extend(true,{},overlayColumnDto));
                }
            }


            if(mapOverlayIDSheetMap[key] != undefined){

                mapOverlayIDSheetMap[key]['sheetid'] += ',';
                mapOverlayIDSheetMap[key]['sheetid'] += res.sheetInfoList[i].sheet_id;

                mapOverlayIDSheetMap[key]['sheetname'] += ',';
                mapOverlayIDSheetMap[key]['sheetname'] += res.sheetInfoList[i].sheet_name;

            }else{

                var sheet = {};
                sheet['sheetid'] = res.sheetInfoList[i].sheet_id;
                sheet['sheetname'] = res.sheetInfoList[i].sheet_name;

                mapOverlayIDSheetMap[key] = $.extend(true,{},sheet);

            }
        }
    }

    for(var key in overlayColumnDtoMap){

        overlayColumnDtoMap[key].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIDList__c.Name}']
            = overlayIDSheetMap[key]['sheetid'];

        overlayColumnDtoMap[key].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}']
            = overlayIDSheetMap[key]['sheetname'];

        for(var i=0; i<overlayColumnDtoMap[key].reportMappingList.length;i++){

            overlayColumnDtoMap[key].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIDList__c.Name}']
                = overlayIDSheetMap[key]['sheetid'];

            overlayColumnDtoMap[key].reportMappingList[i]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}']
                = overlayIDSheetMap[key]['sheetname'];
        }

        dto.overlayColumnDtoList.push(overlayColumnDtoMap[key]);

    }

    for(var key in beforeOverlayColumnDtoMap){

        if(overlayColumnDtoMap[key] == undefined){
            dto.delOverlayColumnDtoList.push(beforeOverlayColumnDtoMap[key]);
        }

    }

    for(key in mapOverlayColumnDtoMap){

        for(var i=0;i<mapOverlayColumnDtoMap[key].length;i++){

            mapOverlayColumnDtoMap[key][i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIDList__c.Name}']
                = mapOverlayIDSheetMap[key]['sheetid'];

            mapOverlayColumnDtoMap[key][i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}']
                = mapOverlayIDSheetMap[key]['sheetname'];

            for(var j=0;j<mapOverlayColumnDtoMap[key][i].reportMappingList.length;j++){

                mapOverlayColumnDtoMap[key][i].reportMappingList[j]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIDList__c.Name}']
                    = mapOverlayIDSheetMap[key]['sheetid'];

                mapOverlayColumnDtoMap[key][i].reportMappingList[j]['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}']
                    = mapOverlayIDSheetMap[key]['sheetname'];


                mapOverlayColumnDtoMap[key][i].reportMappingList[j]['{!$ObjectType.ReportMapping__c.fields.tagInfo__c.Name}']
                    = 'fixedMap';
            }

            dto.mapOverlayColumnDtoList.push(mapOverlayColumnDtoMap[key][i]);
        }
    }


    for(var key in beforeMapOverlayColumnDtoMap){

        if(mapOverlayColumnDtoMap[key] == undefined){

            for(var i=0;i<beforeMapOverlayColumnDtoMap[key].length;i++){
                dto.delMapOverlayColumnDtoList.push(beforeMapOverlayColumnDtoMap[key][i]);
            }
        }

    }

    for(var key in overlayFixedKey){
        if(dto.fixedKomoku != ''){
            dto.fixedKomoku += ',';
        }

        dto.fixedKomoku += key;
    }

    var cntDetailItem = 0;

    for(var key in overlayDetailKey){

        cntDetailItem++;

        if(dto.detailKomoku != ''){
            dto.detailKomoku += ',';
        }

        dto.detailKomoku += key;
    }

    //for(var key in ecmDetailKey){

    //    cntDetailItem++;

    //}

    dto.cntDetailItem = cntDetailItem;


}



/**
 * オーバレイとオブジェクトのマッピングを作成する
 */
function createHtmlMappingTable(dto){

    var ecmImageShowFlg = false;

    var mappingTableRec = '';


    var sortOrderNumOptionHtml = '<option value=\"\"></option>';


    var sheetNameMap = {};

    var notSelectedSheets = new Array(allSheets.length);
    for(var i=0;i<allSheets.length;i++){
        notSelectedSheets[i] = allSheets[i].sheet_name;
    }

    for(var i=0; i < dto.overlayColumnDtoList.length;i++){

        var sheetName = '';
        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'] != undefined){
            var sheetNameList = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'].split(',');
            var isSelected = false;
            for(var j=0;j<sheetNameList.length;j++){
                if(notSelectedSheets.indexOf(sheetNameList[j]) >= 0){
                    continue;
                } else {
                    isSelected = true;
                    sheetName = sheetNameList[j];
                    break;
                }
            }

            if(!isSelected){
                continue;
            }
        }

        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                == '3'
            && dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                == '3'){
            ecmImageShowFlg = true;
        }
//mod_start_20130829 チケット7511
        //var indexOverlayColumnID = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}'].toLowerCase();
        var indexOverlayColumnID = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}'];
//mod_end_20130829 チケット7511
        if(indexOverlayColumnID.lastIndexOf('*')>-1){
            indexOverlayColumnID = indexOverlayColumnID.replace('*','');
        }

        overlayColumnIDMap[indexOverlayColumnID] = dto.overlayColumnDtoList[i];

        mappingTableRec += '<tr id=\"';
        mappingTableRec += i.toString();
        mappingTableRec += '\">';

        //シート名
        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'] != undefined){

            mappingTableRec += '<td>';
            mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'];
            mappingTableRec += '</td>';
            mappingTableRec += '<td style=\"display:none;\" id=\"';
            mappingTableRec += 'hiddensheetid';
            mappingTableRec += i.toString();
            mappingTableRec += '\">';
            mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetIDList__c.Name}'];
            mappingTableRec += '</td>';

            var sheetNameList = [];
            sheetNameList = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'].split(',');

            var sheetIDList = [];
            sheetIDList = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetIdList__c.Name}'].split(',');


            for(var j=0;j<sheetNameList.length;j++){

                sheetNameMap[sheetIDList[j]] = sheetNameList[j];

            }

        }else{
            mappingTableRec += '<td></td>';
            mappingTableRec += '<td style=\"display:none;\"></td>';
        }



        mappingTableRec += '<td id=\"overlayColumnID\">';
        mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}'];
        mappingTableRec += '</td><td id=\"relBreadcrumbs\" class=\"breadcrumbs\">';


        //if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ＥＣＭ画像'){
        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ＥＣＭ画像'
            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ECM_image'){
            mappingTableRec += '{!$Label.label_wf_29032}';

        //}else if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ユーザ選択'){
        }else if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ユーザ選択'
            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'Selection_of_users'){
            mappingTableRec += '{!$Label.label_wf_29032}';

        //}else if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == '自動画像'){
        }else if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == '自動画像'
            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'Automatic_Image'){
            mappingTableRec += '{!$Label.label_wf_29045}';
        }else{
            mappingTableRec += dto.overlayColumnDtoList[i]['relBreadcrumbsLabel'];
        }
        //if(dto.overlayColumnDtoList[i]['relBreadcrumbsLabel'] != ''){

            //mappingTableRec += ' > ';
            //mappingTableRec += dto.overlayColumnDtoList[i]['name'];
//            mappingTableRec += '(';
//            mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectCulomn__c.Name}'];
//            mappingTableRec += ')';
        //}

        mappingTableRec += '</td>';

        var droppableFlg = true;

        var autoImageFlg = false;

        var ecmImageFlg = false;

        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}'] != undefined){
            droppableFlg = false;
            autoImageFlg = true;
        }

        var overlayColumnType = '';

        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] != undefined){
            overlayColumnType = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'];
        }

        var overlayColumnRef = '';

        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'] != undefined){
            overlayColumnRef = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'];
        }

        if(overlayColumnType == '3' && overlayColumnRef == '3'){
            droppableFlg = false;
            ecmImageFlg = true;
        }

        if(droppableFlg){

            mappingTableRec += '<td id=\"droptd\"><div class\=\"drops ui-droppable\" style\=\"z-index\:999\">';

            if(dto.overlayColumnDtoList[i]['name'] != ''){
                mappingTableRec += '<span id\=\"myInput\" class\=\"dropInputed\">';
                mappingTableRec += dto.overlayColumnDtoList[i]['name'];
                mappingTableRec += '</span>';
            }else{
                mappingTableRec += '<span id\=\"myInput\" class\=\"dropInput\"> </span>';
            }

            mappingTableRec += '<img class=\"del\" src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px"/>';
            mappingTableRec += '</div>';

            mappingTableRec += '<span class=\"tooltip\">';
            mappingTableRec += '{!$Label.label_wf_29018}';
            mappingTableRec += dto.overlayColumnDtoList[i]['name'];
            mappingTableRec += '<br />';
            mappingTableRec += '{!$Label.label_wf_29019}';
            mappingTableRec +=  dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectCulomn__c.Name}'];
            mappingTableRec += '</span>';
            mappingTableRec +='</td>';
        }else{
            //自動画像の場合は、ドロップできない
            mappingTableRec += '<td id=\"droptd\"><div class\=\"\" style\=\"z-index\:999\">';

            if(ecmImageFlg){
                //mappingTableRec += '<span id\=\"myInput\" class\=\"dropInput\" style=\"display:none;\"> </span>';
                mappingTableRec += '<span style=\"padding:5px;width:102px;display:inline-block;\"> </span>';

                if(dto.ecmActiveFlg){
                    mappingTableRec += '<img class=\"delImage\" src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px"/>';
                }
            }

            mappingTableRec += '</div>';

            mappingTableRec +='</td>';

            //自動画像はドロップしないので、ここでマッピングレコードを作成する
            //if(autoImageFlg){
            //    dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = '自動画像';
            //    dto.overlayColumnDtoList[i].reportMappingList.push(dto.overlayColumnDtoList[i].objReportMapping);
            //}

            //if(ecmImageFlg){
            //    dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = 'ユーザ選択';
            //    dto.overlayColumnDtoList[i].reportMappingList.push(dto.overlayColumnDtoList[i].objReportMapping);
            //}

            //履歴メッセージを作成する
            var strTrackMessage = '';
//            if(dto.overlayColumnDtoList[i].trackReportMappingList.length>0){
//                strTrackMessage = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}'];
//                strTrackMessage += '{!$Label.msg_wf_00260}';
//            }else{
//                strTrackMessage = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}'];
//                strTrackMessage += '{!$Label.msg_wf_00255}';
//            }

//            dto.overlayColumnDtoList[i].strTrackMessage = strTrackMessage;
        }

        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'Input_Values'
            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ユーザ入力'){ //ユーザ入力
            //mappingTableRec += '<td><input id=\"userInputField\" type=\"input\" value=\"';
            mappingTableRec += '<td><input class=\"userInputField\" type=\"input\" maxlength=\"255\" value=\"';
            if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInput__c.Name}'] != undefined){
                mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInput__c.Name}'];
            }else{
                mappingTableRec += '';
            }
            //mappingTableRec += '\"/><input id=\"userInputRequiredFlg\" value=\"';
            mappingTableRec += '\"/><input class=\"userInputRequiredFlg\" value=\"';
            mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInputrequiredFlg__c.Name}'];
            mappingTableRec += '\" type=\"checkbox\" ><label>{!$Label.label_wf_00142}</label></td>';
        }else if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'Automatic_Numbering'
            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == '自動採番'){ //自動採番

            //mappingTableRec += '<td><select id=\"estimateNumber\" value=\"';
            mappingTableRec += '<td><select class=\"estimateNumber\" value=\"';
            mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectCulomn__c.Name}'];
            mappingTableRec += '\" data-value=\"';
            mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectCulomn__c.Name}'];
            mappingTableRec += '\">';
            mappingTableRec += EstimateNumberingOptionsAppendHtml;
            mappingTableRec += '</select></td>';

        }else if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ECM_image'
            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ＥＣＭ画像'){ //ＥＣＭ画像

            var thumid = 'thum' + i.toString();

            //if(dto.overlayColumnDtoList[i].contentsThumb != null
            //    && dto.overlayColumnDtoList[i].contentsThumb != ''){
            if(contentsPropertyMap[dto.overlayColumnDtoList[i].contentsId] != null
                    && contentsPropertyMap[dto.overlayColumnDtoList[i].contentsId] != undefined){
                mappingTableRec += '<td><span style=\"display:inline-block;vertical-align:middle;\" id=\"';
                mappingTableRec += thumid;
                mappingTableRec += '\">';
                mappingTableRec += '<img src=\"';
                //mappingTableRec += dto.overlayColumnDtoList[i].contentsThumb;
                mappingTableRec += contentsPropertyMap[dto.overlayColumnDtoList[i].contentsId].thumb_36x36;
                mappingTableRec += '\" style=\"border: none; width: 36px; height: 36px;\"/>';
                mappingTableRec += '</span>';
                mappingTableRec += '<input id=\"searchImage\" type=\"button\" class=\"btn\" value=\"{!$Label.solxyzcso001__label_wf_00029}\" onclick=\"ecmImageSearch(';
                mappingTableRec += thumid;
                mappingTableRec += ');\"/>';
                mappingTableRec += '<input id=\"docid\" type=\"hidden\" value=\"';
                mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'];
                mappingTableRec += '\"/></td>';
            }else if(dto.overlayColumnDtoList[i].contentsId != ''
                        && dto.overlayColumnDtoList[i].contentsId != null){
                mappingTableRec += '<td>';
                mappingTableRec += '{!$Label.label_wf_29043}';
                mappingTableRec += '</td>';
            }else{
                mappingTableRec += '<td><span style=\"display:inline-block;vertical-align:middle;\" id=\"';
                mappingTableRec += thumid;
                mappingTableRec += '\">';
                mappingTableRec += '</span>';
                mappingTableRec += '<input id=\"searchImage\" type=\"button\" class=\"btn\" value=\"{!$Label.solxyzcso001__label_wf_00029}\"';
                if(!dto.ecmActiveFlg){
                    mappingTableRec += ' style=\"display:none;\"';
                }
                mappingTableRec += ' onclick=\"ecmImageSearch(';
                mappingTableRec += thumid;
                mappingTableRec += ');\"/>';
                mappingTableRec += '<input id=\"docid\" type=\"hidden\" value=\"';
                mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'];
                mappingTableRec += '\"/></td>';
            }
        }else if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'Selection_of_users'
            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] == 'ユーザ選択'){ //ユーザ選択

            var thumid = 'thum' + i.toString();

            if(dto.overlayColumnDtoList[i].userSelectImageFlg){
                //mappingTableRec += '<td>{!$Label.label_wf_29043}</td></tr>';
                mappingTableRec += '<td><span style=\"display:inline-block;vertical-align:middle;\" id=\"';
                mappingTableRec += thumid;
                mappingTableRec += '\">';
                mappingTableRec += '{!$Label.label_wf_29043}';
                mappingTableRec += '</span>';
                mappingTableRec += '<input id=\"searchImage\" type=\"button\" class=\"btn\" value=\"{!$Label.solxyzcso001__label_wf_00029}\" onclick=\"ecmImageSearch(';
                mappingTableRec += thumid;
                mappingTableRec += ');\"/>';
                mappingTableRec += '<input id=\"docid\" type=\"hidden\" value=\"';
                mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'];
                mappingTableRec += '\"/></td>';
            }else{
                //mappingTableRec += '<td></td>';
                mappingTableRec += '<td><span style=\"display:inline-block;vertical-align:middle;\" id=\"';
                mappingTableRec += thumid;
                mappingTableRec += '\">';
                mappingTableRec += '</span>';
                mappingTableRec += '<input id=\"searchImage\" type=\"button\" class=\"btn\" value=\"{!$Label.solxyzcso001__label_wf_00029}\"'
                if(!dto.ecmActiveFlg){
                    mappingTableRec += ' style=\"display:none;\"';
                }
                mappingTableRec += ' onclick=\"ecmImageSearch(';
                mappingTableRec += thumid;
                mappingTableRec += ');\"/>';
                mappingTableRec += '<input id=\"docid\" type=\"hidden\" value=\"';
                mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'];
                mappingTableRec += '\"/></td>';
            }

        }else if(ecmImageFlg){

            var thumid = 'thum' + i.toString();

            mappingTableRec += '<td><span style=\"display:inline-block;vertical-align:middle;\" id=\"';
            mappingTableRec += thumid;
            mappingTableRec += '\">';
            mappingTableRec += '</span>';
            mappingTableRec += '<input id=\"searchImage\" type=\"button\" class=\"btn\" value=\"{!$Label.solxyzcso001__label_wf_00029}\"';
            if(!dto.ecmActiveFlg){
                mappingTableRec += ' style=\"display:none;\"';
            }
            mappingTableRec += ' onclick=\"ecmImageSearch(';
            mappingTableRec += thumid;
            mappingTableRec += ');\"/>';
            mappingTableRec += '<input id=\"docid\" type=\"hidden\" value=\"';
            mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'];
            mappingTableRec += '\"/></td>';

        }else if(dto.overlayColumnDtoList[i].isDetailItem){
            //検索条件
            
            mappingTableRec += '<td id=\"searchtd\" class=\"searchtd\"><div style\=\"z-index\:999\">';
            
            var dataType = dto.overlayColumnDtoList[i].itemType;
            
            if(dataType != 'ENCRYPTEDSTRING' && dataType != 'TEXTAREA' && dataType != 'LOCATION'){
                if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SearchOperator__c.Name}'] !== undefined){
                    var operationStr = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SearchOperator__c.Name}'];
                    switch (operationStr){
                        case 'e' : operationStr = '{!$Label.label_wr_search_e_00001}'; break;
                        case 'n' : operationStr = '{!$Label.label_wr_search_n_00002}'; break;
                        case 's' : operationStr = '{!$Label.label_wr_search_s_00003}'; break;
                        case 'c' : operationStr = '{!$Label.label_wr_search_c_00004}'; break;
                        case 'k' : operationStr = '{!$Label.label_wr_search_k_00005}'; break;
                        case 'l' : operationStr = '{!$Label.label_wr_search_l_00006}'; break;
                        case 'g' : operationStr = '{!$Label.label_wr_search_g_00007}'; break;
                        case 'm' : operationStr = '{!$Label.label_wr_search_m_00008}'; break;
                        case 'h' : operationStr = '{!$Label.label_wr_search_h_00009}'; break;
                        case 'u' : operationStr = '{!$Label.label_wr_search_u_00010}'; break;
                        case 'x' : operationStr = '{!$Label.label_wr_search_x_00011}'; break;
                        case 'w' : operationStr = '{!$Label.label_wr_search_w_00012}'; break;
                    }
                    
                    mappingTableRec += '<span id\=\"searchInput\" class\=\"searchInputed\">';
                    mappingTableRec += operationStr;
                    if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SearchValue__c.Name}'] != undefined){
                        mappingTableRec += ':';
                        mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SearchValue__c.Name}'];
                    }
                    mappingTableRec += '</span>';
                }
                
                if(dto.overlayColumnDtoList[i]['name'] != ''){
                    mappingTableRec += '<img class=\"searchOption\" src="{!URLFOR($Resource.FormFormat,'001_38.gif')}" height="18px"/>';
                    mappingTableRec += '</div>';
                    mappingTableRec += '<span class=\"tooltip\">';
                    mappingTableRec += "{!$Label.msg_wr_search_00001}";
                    mappingTableRec += '</span>';
                }
            }
            mappingTableRec +='</td>';
            
        }else{
            mappingTableRec += '<td></td>';
        }


        //ソート順
        if(dto.overlayColumnDtoList[i].isDetailItem){

            if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                    != '3'
                && dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.AutoImageNo__c.Name}']
                    == undefined){
                mappingTableRec += '<td id=\"sortOrderNum\" class=\"sortOrderNum\"> <select value=\"';
                mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SortOrderNum__c.Name}'];
                mappingTableRec += '\">'

                var sortNumTemp = 0;
                for(var j=0; j < dto.overlayColumnDtoList.length; j++){
                    if((!dto.overlayColumnDtoList[j].isDetailItem) || 
                    dto.overlayColumnDtoList[j].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'] == '3' ||
                    dto.overlayColumnDtoList[j].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'] == undefined 
                    ){
                        continue;
                    }
                    var isSameSheet = false;
                    var sheetNameListTemp = dto.overlayColumnDtoList[j].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'].split(',');                        
                    for(var k=0;k<sheetNameListTemp.length;k++){
                        if(sheetNameListTemp[k] != sheetName){
                            continue;
                        } else {
                            isSameSheet = true;
                            break;
                        }
                    }

                    if(!isSameSheet){
                        continue;
                    }
                    
                    sortNumTemp++;
            
                    if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SortOrderNum__c.Name}'] != sortNumTemp){
                        sortOrderNumOptionHtml += '<option value=\"';
                    }else{
                        sortOrderNumOptionHtml += '<option selected=\"selected\" value=\"';
                    }

                    sortOrderNumOptionHtml += sortNumTemp;
                    sortOrderNumOptionHtml += '\">';
                    sortOrderNumOptionHtml += sortNumTemp;
                    sortOrderNumOptionHtml += '</option>';
                }

                mappingTableRec += sortOrderNumOptionHtml;

                sortOrderNumOptionHtml = '<option value=\"\"></option>';

                mappingTableRec += '</select></td>';
                mappingTableRec += '<td id=\"sortType\" class=\"sortType\" >';

                if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}'] != undefined){
                    mappingTableRec += '<select value=\"';
                    mappingTableRec += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}'];
                    mappingTableRec += '\">';
                }else{
                    mappingTableRec += '<select disabled=\"disabled\" value=\"';
                    mappingTableRec += '\">';
                }
                var sortTypeOptionHtml = '<option value=\"\"></option>';

                if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}'] == 'asc'){
                    sortTypeOptionHtml += '<option selected=\"selected\" value=\"';
                    sortTypeOptionHtml += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}'];
                    sortTypeOptionHtml += '\">{!$Label.label_wf_30078}</option>';
                }else{
                    sortTypeOptionHtml += '<option value=\"';
                    sortTypeOptionHtml += 'asc';
                    sortTypeOptionHtml += '\">{!$Label.label_wf_30078}</option>';
                }

                if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}'] == 'desc'){
                    sortTypeOptionHtml += '<option selected=\"selected\" value=\"';
                    sortTypeOptionHtml += dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.SortType__c.Name}'];
                    sortTypeOptionHtml += '\">{!$Label.label_wf_30079}</option>';
                }else{
                    sortTypeOptionHtml += '<option value=\"';
                    sortTypeOptionHtml += 'desc';
                    sortTypeOptionHtml += '\">{!$Label.label_wf_30079}</option>';
                }

                mappingTableRec += sortTypeOptionHtml;
                mappingTableRec += '</select></td>';

            }else{
                mappingTableRec += '<td id=\"sortOrderNum\" class=\"sortOrderNum\"></td>';
                mappingTableRec += '<td id=\"sortType\"  ></td>';
            }
        }else{
            mappingTableRec += '<td id=\"sortOrderNum\" class=\"sortOrderNum\"></td>';
            mappingTableRec += '<td id=\"sortType\"  ></td>';
        }

        //データタイプ
        mappingTableRec += '<td style=\"display:none;\" id=\"dateType\">';
        mappingTableRec += dto.overlayColumnDtoList[i]['itemType'];
        mappingTableRec += '</td>';
            
        mappingTableRec += '</tr>';
    }



    if(ecmImageShowFlg){
        $('div[id$=ecmImage]').show();
    }else{
        $('div[id$=ecmImage]').hide();
    }

    $('#mappingTable').children('tbody').html(mappingTableRec);
    createDroppable();
    createDraggable();

    //$('input[id$="userInputRequiredFlg"]').each(function(){
    $('.userInputRequiredFlg').each(function(){

        //$(this).val($(this).val());
        if($(this).val()=='true'){
            $(this).attr('checked',true);
        }
    });

    $('.estimateNumber').each(function(){

        $(this).val($(this).attr('data-value'));

    });

    deleteDrags();
    searchOption();
    //明細ソート順番号の選択リストにonchangeイベントを付与する
    onchangeDetailSortOrderNum();

    //明細ソートタイプの選択リストにonchangeイベントを付与する
    onchangeDetailSortType();

    onchangeUserInputField();
    onchangeUserInputFlg();
    onchangeEstimateNumber();



    var sheetNameOptionHtml = '<option value=\"\"></option>';



    for(var key in sheetNameMap){

        sheetNameOptionHtml += '<option value=\"';
        sheetNameOptionHtml += key;
        sheetNameOptionHtml += '\">';
        sheetNameOptionHtml += sheetNameMap[key];
        sheetNameOptionHtml += '</option>';


    }

    $('#sheetList').html(sheetNameOptionHtml);



    objectReturn(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.ObjectLabel__c.Name}'],dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.ObjectID__c.Name}']);

}

//連想配列
var mapOverlayColumnIDMap = {};

/**
 * 地図連携のマッピング情報を生成する
 */
function createHtmlMapsMappingTable(dto){

    var mappingTableRec = '';



    for(var i=0; i < dto.mapOverlayColumnDtoList.length;i++){

        //var indexOverlayColumnID = dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.keyName__c.Name}'];
        var indexOverlayColumnID = dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.mapName__c.Name}'];
        indexOverlayColumnID += ':';
        indexOverlayColumnID += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}'];

        overlayColumnIDMap[indexOverlayColumnID] = dto.mapOverlayColumnDtoList[i];

        mappingTableRec += '<tr>';

        if(dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'] != undefined){

            mappingTableRec += '<td>';
            mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetNameList__c.Name}'];
            mappingTableRec += '</td>';

            mappingTableRec += '<td style=\"display:none;\" id=\"';
            mappingTableRec += 'hiddenmapsheetid';
            mappingTableRec += i.toString();
            mappingTableRec += '\">';
            mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlaySheetIDList__c.Name}'];
            mappingTableRec += '</td>';

        }else{
            mappingTableRec += '<td></td>';
            mappingTableRec += '<td style=\"display:none;\">';
        }

//        mappingTableRec += '<td id=\"keyName\">';
//        mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.keyName__c.Name}'];
        mappingTableRec += '<td id=\"mapName\">';
        mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.mapName__c.Name}'];
        mappingTableRec += '</td><td id=\"imageSize\">';
        mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.MapHeight__c.Name}'];
        mappingTableRec += '{!$Label.label_wf_00447}';
        mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.MapWidth__c.Name}'];

        mappingTableRec += '</td><td id=\"overlayColumnID\">';
        mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnID__c.Name}'];
        mappingTableRec += '</td><td id=\"relBreadcrumbs\" class=\"breadcrumbs\">';
        mappingTableRec += dto.mapOverlayColumnDtoList[i]['relBreadcrumbsLabel'];


        if(dto.mapOverlayColumnDtoList[i]['relBreadcrumbsLabel'] != ''){

            mappingTableRec += ' > ';
            mappingTableRec += dto.mapOverlayColumnDtoList[i]['name'];
//            mappingTableRec += '(';
//            mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectCulomn__c.Name}'];
//            mappingTableRec += ')';
        }

        mappingTableRec += '<td id=\"droptd\"><div class\=\"drops ui-droppable\" style\=\"z-index\:999\">';

        if(dto.mapOverlayColumnDtoList[i]['name'] != ''){
            mappingTableRec += '<span id\=\"myInput\" class\=\"dropInputed\">';
            mappingTableRec += dto.mapOverlayColumnDtoList[i]['name'];
            mappingTableRec += '</span>';
        }else{
            mappingTableRec += '<span id\=\"myInput\" class\=\"dropInput\"></span>';
        }

        mappingTableRec += '<img class=\"del\" src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px"/>';
        mappingTableRec += '</div>';

        mappingTableRec += '<span class=\"tooltip\">';
        mappingTableRec += '{!$Label.label_wf_29018}';
        mappingTableRec += dto.mapOverlayColumnDtoList[i]['name'];
        mappingTableRec += '<br />';
        mappingTableRec += '{!$Label.label_wf_29019}';
        mappingTableRec +=  dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectCulomn__c.Name}'];
        mappingTableRec += '</span>';
        mappingTableRec +='</td>';

        if(dto.mapOverlayColumnDtoList[i].name == 'Input_Values' || dto.mapOverlayColumnDtoList[i].name == 'ユーザ入力'){ //ユーザ入力
            mappingTableRec += '<td><input id=\"userInputField\" type=\"input\" maxlength="255" value=\"';
            mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInput__c.Name}'];
            mappingTableRec += '\"/><input id=\"userInputRequiredFlg\" value=\"';
            mappingTableRec += dto.mapOverlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInputrequiredFlg__c.Name}'];
            mappingTableRec += '\" type=\"checkbox\" ><label>{!$Label.label_wf_00142}</label></td></tr>';
        }else{
            mappingTableRec += '<td></td></tr>';
        }

    }



    $('#mapsMappingTable').children('tbody').html(mappingTableRec);
    createDroppable();
    createDraggable();




    deleteDrags();
    searchOption();


}

/**
 * 自動マッピング
 */
function autoMapping(){

    $('#mappingTable tbody tr').each(function(){

        var indexOverlayColumnID = $(this).children('#overlayColumnID').text();

        if(indexOverlayColumnID.lastIndexOf('*')>0){
            indexOverlayColumnID = indexOverlayColumnID.replace('*','');
        }

        var dragId = 'root-';
        dragId += $('[id$="reportOutText_lkid"]').val();
        dragId += ':';
        dragId += $('[id$="reportOutText_lkid"]').val();
        dragId += '-';
        dragId += indexOverlayColumnID;

        //for(var key in dragIdMap){

        //    if(key.toLowerCase() == dragId.toLowerCase()){
        //        dragId = key;
        //    }
        //}
        dragId = dragId.toLowerCase();
        dragId = dragIdMap[dragId];


        if(dragId != undefined){
            var dragE = $(esc(dragId));

            var dropE = $(this).children('#droptd').children('div');

            if(undefined != dragE.attr('id')){
                dropMapping(dragId,dragE,dropE);
            }
        }
    });

}



/**
 * オブジェクト検索画面からのコールバック
 */
function objectReturn(label,name) {

    if(name == '' || name == undefined){
        return;
    }

    var changeFlg = false;

    //$(esc('page:form:reportOutText')).val(label);
    $('[id$="reportOutText"]').val(label);
    //$(esc('page:form:reportOutText_lkid')).val(name);

    var beforeObjName = '';
    beforeObjName = $('[id$="reportOutText_lkid"]').val();

    if(beforeObjName != name && beforeObjName != ''){
        refreshMappingTable();
        refreshMapsMappingTable();
    }

    $('[id$="reportOutText_lkid"]').val(name);

    var treeAppendHtml = '';

    //選択したオブジェクト項目
    treeAppendHtml += '<li style=\"cursor:pointer;\" class=\"expandable\">';
    treeAppendHtml += '<div class=\"hitarea expandable-hitarea\" onclick=\"triggerGetTreeView(this);\"></div>';
    treeAppendHtml += '<span data-name\=\"';
    treeAppendHtml += name;
    treeAppendHtml += '\" data-objName\=\"';
    treeAppendHtml += name;
    treeAppendHtml += '\" data-type\=\"sObject\" id\=\"root-';
    treeAppendHtml += name;
    treeAppendHtml += '\" onclick\=\"getTreeView(this);\">';
    treeAppendHtml += label;
//    treeAppendHtml += '(';
//    treeAppendHtml += name;
//    treeAppendHtml += ')';
    treeAppendHtml += '</span></li>';

    var objHtml = '';
    objHtml += '<span data-name\=\"';
    objHtml += name;
    objHtml += '\" data-objName\=\"';
    objHtml += name;
    objHtml += '\" data-type\=\"sObject\" id\=\"root-';
    objHtml += name;
    objHtml += '\" onclick\=\"getTreeView(this);\">';
    objHtml += label;
//   objHtml += '(';
//    objHtml += name;
//    objHtml += ')';
    objHtml += '</span>';

    //空のtreeViewRecDtoを取得
    var returnObjTreeViewRecDto = $.extend(true,{},TreeViewRecDtoInstance);

    //var objMappingReturnObj = {};

    //objMappingReturnObj['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] = '';
    //objMappingReturnObj['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = name;
    //returnObjTreeViewRecDto.reportMappingList.push(objMappingReturnObj);

    returnObjTreeViewRecDto.relBreadcrumbsLabel += label;
//    returnObjTreeViewRecDto.relBreadcrumbsLabel += '(';
//    returnObjTreeViewRecDto.relBreadcrumbsLabel += name;
//    returnObjTreeViewRecDto.relBreadcrumbsLabel += ')';
    //returnObjTreeViewRecDto.relBreadcrumbsLabel += '>';

    dragTrackMap['root-'+name] = returnObjTreeViewRecDto;
//del_START_20130717 v3.0で組織情報はマッピングしないことになったので、コメントアウトする
/*
    //組織項目
    treeAppendHtml += '<li style=\"cursor:pointer;\" class=\"expandable\">';
    treeAppendHtml += '<div class=\"hitarea expandable-hitarea\" onclick=\"triggerGetTreeView(this);\"></div>';
    treeAppendHtml += '<span data-name\=\"';
    treeAppendHtml += '{!$ObjectType.Organization.Name}';
    treeAppendHtml += '\" data-objName\=\"';
    treeAppendHtml += '{!$ObjectType.Organization.Name}';
    treeAppendHtml += '\" data-type\=\"sObject\" id\=\"root-';
    treeAppendHtml += '{!$ObjectType.Organization.Name}';
    treeAppendHtml += '\" onclick\=\"getTreeView(this);\">';
    treeAppendHtml += '{!$ObjectType.Organization.Label}';
//    treeAppendHtml += '(';
//    treeAppendHtml += '{!$ObjectType.Organization.Name}';
//    treeAppendHtml += ')';
    treeAppendHtml += '</span></li>';

    //空のtreeViewRecDtoを取得
    var orgTreeViewRecDto = $.extend(true,{},TreeViewRecDtoInstance);

    //var objMappingOrg = {};

    //objMappingOrg['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] = '';
    //objMappingOrg['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = '{!$ObjectType.Organization.Name}';

    //orgTreeViewRecDto.reportMappingList.push(objMappingOrg);

    orgTreeViewRecDto.relBreadcrumbsLabel += '{!$ObjectType.Organization.Label}';
//    orgTreeViewRecDto.relBreadcrumbsLabel += '(';
//    orgTreeViewRecDto.relBreadcrumbsLabel += '{!$ObjectType.Organization.Name}';
//    orgTreeViewRecDto.relBreadcrumbsLabel += ')';
    //orgTreeViewRecDto.relBreadcrumbsLabel += '>';

    dragTrackMap['root-{!$ObjectType.Organization.Name}'] = orgTreeViewRecDto;
*/
//del_END 20130717

    //ユーザ項目
    treeAppendHtml += '<li style=\"cursor:pointer;\" class=\"expandable\">';
    treeAppendHtml += '<div class=\"hitarea expandable-hitarea\" onclick=\"triggerGetTreeView(this);\"></div>';
    treeAppendHtml += '<span data-name\=\"';
    treeAppendHtml += '{!$ObjectType.User.Name}';
    treeAppendHtml += '\" data-objName\=\"';
    treeAppendHtml += '{!$ObjectType.User.Name}';
    treeAppendHtml += '\" data-type\=\"sObject\" id\=\"root-';
    treeAppendHtml += '{!$ObjectType.User.Name}';
    treeAppendHtml += '\" onclick\=\"getTreeView(this);\">';
    treeAppendHtml += '{!$ObjectType.User.Label}';
//    treeAppendHtml += '(';
//    treeAppendHtml += '{!$ObjectType.User.Name}';
//    treeAppendHtml += ')';
    treeAppendHtml += '</span></li>';


    //空のtreeViewRecDtoを取得
    var userTreeViewRecDto = $.extend(true,{},TreeViewRecDtoInstance);

    //var objMappingUser = {};

    //objMappingUser['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] = '';
    //objMappingUser['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] = '{!$ObjectType.User.Name}';
    //userTreeViewRecDto.reportMappingList.push(objMappingUser);

    userTreeViewRecDto.relBreadcrumbsLabel += '{!$ObjectType.User.Label}';
//    userTreeViewRecDto.relBreadcrumbsLabel += '(';
//    userTreeViewRecDto.relBreadcrumbsLabel += '{!$ObjectType.User.Name}';
//    userTreeViewRecDto.relBreadcrumbsLabel += ')';
    //userTreeViewRecDto.relBreadcrumbsLabel += ' > ';

    dragTrackMap['root-{!$ObjectType.User.Name}'] = userTreeViewRecDto;


    //ユーザ入力項目
    treeAppendHtml += '<li style=\"cursor:pointer;\"><span data-name=\"userInput\" ';
    //treeAppendHtml += 'data-objName=\"userInput\" ';
    //treeAppendHtml += 'data-objName=\"ユーザ入力\" ';
    treeAppendHtml += 'data-objName=\"Input_Values\" ';
    treeAppendHtml += 'data-type=\"others\" ';
    treeAppendHtml += 'id=\"root-UserInput\" ';
    treeAppendHtml += 'onclick=\"getTreeViewCustom(this);\">';
    treeAppendHtml += '{!$Label.label_wf_30051}';
    treeAppendHtml += '</span></li>';

    //現在日時項目
    treeAppendHtml += '<li style=\"cursor:pointer;\"><span data-name=\"datetimeToday\" ';
    //treeAppendHtml += 'data-objName=\"datetimeToday\" ';
    //treeAppendHtml += 'data-objName=\"現在日時\" ';
    treeAppendHtml += 'data-objName=\"Now_Date\" ';
    treeAppendHtml += 'data-type=\"datetime\" ';
    treeAppendHtml += 'id=\"root-datetimeToday\" ';
    treeAppendHtml += 'onclick=\"getTreeViewCustom(this);\">';
    treeAppendHtml += '{!$Label.label_wf_30048}';
    treeAppendHtml += '</span></li>';

    //自動採番項目
    treeAppendHtml += '<li style=\"cursor:pointer;\"><span data-name=\"estimateNumber\" ';
    //treeAppendHtml += 'data-objName=\"estimateNumber\" ';
    //treeAppendHtml += 'data-objName=\"自動採番\" ';
    treeAppendHtml += 'data-objName=\"Automatic_Numbering\" ';
    treeAppendHtml += 'data-type=\"others\" ';
    treeAppendHtml += 'id=\"root-EstimateNumber\" ';
    treeAppendHtml += 'onclick=\"getTreeViewCustom(this);\" >';
    treeAppendHtml += '{!$Label.label_wf_30002}';
    treeAppendHtml += '</span></li>';

//if({!ecmActiveFlg}){
    //ECM画像項目
//    treeAppendHtml += '<li style=\"cursor:pointer;\"><span data-name=\"ecmImage\" ';
//    treeAppendHtml += 'data-objName=\"ＥＣＭ画像\" ';
//    treeAppendHtml += 'data-type=\"others\" ';
//    treeAppendHtml += 'id=\"root-EcmImage\" ';
//    treeAppendHtml += 'onclick=\"getTreeViewCustom(this);\" >';
//    treeAppendHtml += '{!$Label.label_wf_29032}';
//    treeAppendHtml += '</span></li>';

    //ユーザ選択項目
//    treeAppendHtml += '<li style=\"cursor:pointer;\"><span data-name=\"userSelect\" ';
//    treeAppendHtml += 'data-objName=\"ユーザ選択\" ';
//    treeAppendHtml += 'data-type=\"others\" ';
//    treeAppendHtml += 'id=\"root-UserSelect\" ';
//    treeAppendHtml += 'onclick=\"getTreeViewCustom(this);\" >';
//    treeAppendHtml += '{!$Label.label_wf_29033}';
//    treeAppendHtml += '</span></li>';
//}



    $('#tv').html(treeAppendHtml);
    //$("#tv").treeview();

    $('#ulDrags').html('');

    //$('#root-'+name).trigger("click");
    $('#root-'+name).prev('div').trigger("click");
    //getTreeView(document.getElementById('root-'+name));
}

function triggerGetTreeView(item){

    var toggleDivE = $(item);
    var itemE = toggleDivE.next('span');

    if(!itemE.hasClass('created')){
        itemE.trigger("click");
    }
}

function refreshMappingTable(){

    $('#mappingTable tbody').find('.del').each(function(){

        $(this).trigger('click');

    });

    $('#mappingTable tbody').find('.delImage').each(function(){

        $(this).trigger('click');

    });
}


function refreshMapsMappingTable(){

    $('#mapsMappingTable tbody').find('.del').each(function(){

        $(this).trigger('click');

    });

}

var userAgent = getBrowserType();
if (userAgent == "IE11") {
    $.support.cors = true;
}
/**
 * 帳票定義情報を保存する
 */
function saveFormFormat(){

    $('#jsPageMessages').hide();

    validate(formFormatDTO);

    if(formFormatDTO.errFlg){

        var messageHtml = '';

        messageHtml += createMessageHtml(formFormatDTO.errMessageList);
        $('#jsPageMessagesCell').html(messageHtml);
        $('#jsPageMessages').show();
        return;

    }

    var callback = function (data) {

                    //WR本体の帳票定義IDを設定する
                    formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}'] = data.formDefinitionid;


                    saveSf(formFormatDTO);

                };

    var callerror = function (data) {

                    CsoScript_loadingStop();

                    if(data.status != 500){
                        var dataObj = JSON.parse(data.responseText);
                        var message = '';
                        if(dataObj.code == 'K39-FFIC-WR-0001'){
                            message = '{!$Label.label_wf_29026}';
                        }else{
                            message = dataObj.message;
                            message += '<br/>';
                            message += 'code:';
                            message += dataObj.code;
                        }

                        var messageArray = [];
                        messageArray.push(message);

                        var messageHtml = createMessageHtml(messageArray);

                        $('#jsPageMessagesCell').html(messageHtml);
                        $('#jsPageMessages').show();
                    }else{


                        var errMessageArray = [];
                        errMessageArray.push('{!$Label.msg_00136}');

                        var messageHtml = createMessageHtml(errMessageArray);

                        $('#jsPageMessagesCell').html(messageHtml);
                        $('#jsPageMessages').show();

                    }
                };

    var mainSheetList = new Array();
    for(var i=0; i<format.length; i++){
        if(format[i].sheet_name.indexOf("#") != 0){
            mainSheetList.push(format[i]);
        }
    }
    var sheetOrder = JSON.stringify(mainSheetList);

    //WR本体側に登録する帳票定義名は、ユニークチェックがあるため、SFユーザIDと日付・時刻でユニークにする
    var formDefName = '';
    formDefName += $('[id$="formatName"]').val();
    formDefName += SFUSERID;
    formDefName += getStringDatetime();

    var d = JSON.stringify({
            'formDifiId': formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}'],
            'userid': USERNAME,
            'credential': CREDENTIAL,
            'dirid': 'root',
            //'name': $('[id$="formatName"]').val(),
            'name': formDefName,
            'explanation': $('[id$="explanation"]').val(),
            'ovl_id': $('[id$="rOverlayId"]').val(),
            'ovl_ver': $('[id$="rOverlayVersion"]').val(),
            'sheet_order': sheetOrder
        });


    CsoScript_loadingStart();


    //securePostAsyncSf('/rest/FormDefinitionRegist/p', d, callback, callerror);
    securePostAsyncSf('/rest/FormDefinitionRegist', d, callback, callerror);


}

/**
 * 現在の日付と時刻の文字列を取得する
 * yyyyMMddhh24missff
 */
function getStringDatetime(){

    var nowdate = new Date();

    var year = nowdate.getFullYear(); // 年
    var mon  = nowdate.getMonth() + 1; // 月
    var date = nowdate.getDate(); // 日
    var week = nowdate.getDay(); // 曜日
    var hour = nowdate.getHours(); // 時
    var min  = nowdate.getMinutes(); // 分
    var sec  = nowdate.getSeconds(); // 秒
    var msec = nowdate.getMilliseconds(); // ミリ秒

    var strDatetime = '';

    strDatetime += year;
    strDatetime += mon;
    strDatetime += date;
    strDatetime += week;
    strDatetime += hour;
    strDatetime += min;
    strDatetime += sec;
    strDatetime += msec;

    return strDatetime;
}

/**
 * エラーメッセージを作成する
 */
function createMessageHtml(messageArray){

    var messageHtml = '';
    messageHtml = '<div id=\"messageDiv\" class=\"messageText\">';
    messageHtml += '<span id=\"messageSpan\" style=\"color:#cc0000\">';
    messageHtml += '<h4>{!$Label.label_10716}</h4>';
    messageHtml += '</span>';
    messageHtml += '<span>';
    messageHtml += '<ul style="padding-left:10px;padding-top:0px;margin:0px">';

    for(var i=0;i<messageArray.length;i++){

        messageHtml += '<li style="padding-top:5px">';
        messageHtml += messageArray[i];
        messageHtml += '</li>';
    }

    messageHtml += '</span>';
    messageHtml += '<br />';
    messageHtml += '</div>';

    return messageHtml;
}

/**
 * 入力チェック
 */
function validate(dto){
    //var errFlg = false;
    dto.errFlg = false;
    dto.errMessageList = [];

    var formatName = $('[id$="formatName"]').val();
    if(formatName == '' || formatName == undefined){

        dto.errMessageList.push('{!$Label.msg_010057_fe}');
        dto.errFlg = true;
    } else {
        if (formatName.match(/^.*[\\\\/*:\"\\?\\|<>]+.*$/)) {
            dto.errMessageList.push(getMsg(["{!JSINHTMLENCODE($Label.label_wf_00006)}",
                                      '\\ / : * ? " < > |'],
                                     "{!JSINHTMLENCODE($Label.msg_validation_text_prohibited_characters_v1)}")
                                   );
            dto.errFlg = true;
        }
    }

    var overlayId = $('[id$="rOverlayId"]').val();
    if(overlayId == '' || overlayId == undefined){

        dto.errMessageList.push('{!$Label.msg_010058_fe}');
        dto.errFlg = true;
    }

    var objectId = $('[id$="reportOutText_lkid"]').val();
    if(objectId == '' || objectId == undefined){

        dto.errMessageList.push('{!$Label.msg_010059_fe}');
        dto.errFlg = true;
    }

    var explanation = $('[id$="explanation"]').val();
    if(explanation != undefined && explanation.length > 512){

        dto.errMessageList.push('{!$Label.message_wf_00007}');
        dto.errFlg = true;
    }

    var str_msg_010060_fe = '';
    var str_userInputError = '';
    var str_ecmImageError = '';

    var str_msg_010094_fe = '';
    var str_msg_010095_fe = '';

    var detailRelationshipMap = [];
    var detailRepeatFixedColumnMap = [];

    var repeatFixedColumnFlg = false;
    var childRelationshipChangeFlg = false;

    var notSelectedSheets = new Array(allSheets.length);
    for(var i=0;i<allSheets.length;i++){
        notSelectedSheets[i] = allSheets[i].sheet_name;
    }

    for(var i=0; i<dto.overlayColumnDtoList.length;i++){
        var detailRelationshipDiff = '';
        var sheetName = '';
        childRelationshipChangeFlg = false;
        if(dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'] != undefined){
            var sheetNameList = dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.reportMapping__c.fields.OverlaySheetNameList__c.Name}'].split(',');
            var isSelected = false;
            for(var j=0;j<sheetNameList.length;j++){
                if(notSelectedSheets.indexOf(sheetNameList[j]) >= 0){
                    continue;
                } else {
                    isSelected = true;
                    sheetName = sheetNameList[j];
                    break;
                }
            }

            if(!isSelected){
                continue;
            }
        }

        var indexMax = dto.overlayColumnDtoList[i].reportMappingList.length;

        if(indexMax == 0){
            //dto.errMessageList.push('{!$Label.msg_010060_fe}');
            //dto.errFlg = true;
            str_msg_010060_fe = '{!$Label.msg_010060_fe}';
        }else{
            var objReportMapping = dto.overlayColumnDtoList[i].reportMappingList[indexMax-1];
            var objectId = objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];

            if(objectId == undefined || objectId == ''){
                //dto.errMessageList.push('{!$Label.msg_010060_fe}');
                //dto.errFlg = true;

                var overlayColumnType = '';
                var overlayColumnRef = '';

                if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}']
                        != undefined){
                    overlayColumnType
                        = objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnType__c.Name}'];
                }

                if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}']
                        != undefined){
                    overlayColumnRef
                        = objReportMapping['{!$ObjectType.ReportMapping__c.fields.OverlayCulomnRef__c.Name}'];
                }

                if(overlayColumnType == '3' && overlayColumnRef != '3'){
                    str_msg_010060_fe = '{!$Label.msg_010060_fe}';
                }else if(overlayColumnType != '3'){
                    str_msg_010060_fe = '{!$Label.msg_010060_fe}';
                }

            }else{
                if(objectId == 'Input_Values' || objectId == 'ユーザ入力'){ //ユーザ入力
                    if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInput__c.Name}'] == undefined
                        || objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInput__c.Name}'] == ''){
                        //dto.errMessageList.push('{!$Label.label_wf_29027}');
                        //dto.errFlg = true;
                        str_userInputError = '{!$Label.label_wf_29027}';
                    }
                }else if(objectId == 'ECM_image' || objectId == 'ＥＣＭ画像'){ //ＥＣＭ画像
                    if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'] == undefined
                        || objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'] == ''){
                        //dto.errMessageList.push('{!$Label.label_wf_29028}');
                        //dto.errFlg = true;
                        str_ecmImageError = '{!$Label.label_wf_29028}';
                    }
                }
            }

            if(dto.overlayColumnDtoList[i].isDetailItem){


                if((dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] != 'ECM_image'
                    || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] != 'ＥＣＭ画像') //ＥＣＭ画像

                        && (dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] != 'Selection_of_users'
                            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] != 'ユーザ選択') //ユーザ選択

                        && (dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] != 'Automatic_Image'
                            || dto.overlayColumnDtoList[i].objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'] != '自動画像') //自動画像
                ){


                    var detailRelationship = '';
                    var strPrefix = '';

                    for(var j=0;j<dto.overlayColumnDtoList[i].reportMappingList.length;j++){
                        var objReportMapping = dto.overlayColumnDtoList[i].reportMappingList[j];
                        if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] == 'parents'){
                            strPrefix += objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                            strPrefix += '-';
                            strPrefix += objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectCulomn__c.Name}'];
                            strPrefix += ':';
                        }else if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.attributetype__c.Name}'] == 'children'){
                            childRelationshipChangeFlg = true;
                            
                            detailRelationship += strPrefix;
                            detailRelationship += objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                            detailRelationship += '-';
                            detailRelationship += objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectCulomn__c.Name}'];
                            detailRelationship += ':';

                            strPrefix = '';
                        }
                    }

                    if(!childRelationshipChangeFlg){
                        repeatFixedColumnFlg = true;
                        detailRepeatFixedColumnMap[sheetName] = true;
                    }

                    if(detailRelationshipMap[sheetName] == undefined || detailRelationshipMap[sheetName] ==  null){
                        detailRelationshipMap[sheetName] = '';
                    }
                    detailRelationshipDiff = detailRelationshipMap[sheetName];
                    
                    if(detailRelationshipDiff == ''){

                        detailRelationshipMap[sheetName] = detailRelationship;

                    }else{

                        if(detailRelationshipDiff != detailRelationship){

                            str_msg_010094_fe = '{!$Label.msg_010094_fe}';

                        }

                    }

                    if(childRelationshipChangeFlg && detailRepeatFixedColumnMap[sheetName]){

                        str_msg_010095_fe = '{!$Label.msg_010095_fe}';

                    }

                }


                if(dto.overlayColumnDtoList[i].reportMappingList.length>0){
                    var indexMax = dto.overlayColumnDtoList[i].reportMappingList.length-1;
                    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.ObjectChildID__c.Name}']
                        = dto.overlayColumnDtoList[i].reportMappingList[indexMax]['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];
                }

            }
        }
    }

    for(var i=0; i<dto.mapOverlayColumnDtoList.length;i++){

        var indexMax = dto.mapOverlayColumnDtoList[i].reportMappingList.length;

        if(indexMax == 0){
            //dto.errMessageList.push('{!$Label.msg_010060_fe}');
            //dto.errFlg = true;
            str_msg_010060_fe = '{!$Label.msg_010060_fe}';
        }else{
            var objReportMapping = dto.mapOverlayColumnDtoList[i].reportMappingList[indexMax-1];
            var objectId = objReportMapping['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}'];

            if(objectId == undefined || objectId == ''){
                //dto.errMessageList.push('{!$Label.msg_010060_fe}');
                //dto.errFlg = true;
                str_msg_010060_fe = '{!$Label.msg_010060_fe}';
            }else{
                if(objectId == 'Input_Values'|| objectId == 'ユーザ入力' ){ //ユーザ入力
                    if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInput__c.Name}'] == undefined
                        || objReportMapping['{!$ObjectType.ReportMapping__c.fields.userInput__c.Name}'] == ''){
                        //dto.errMessageList.push('{!$Label.label_wf_29029}');
                        //dto.errFlg = true;
                        str_userInputError = '{!$Label.label_wf_29029}';
                    }
                }else if(objectId == 'ECM_image' || objectId == 'ＥＣＭ画像'){ //ＥＣＭ画像
                    if(objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'] == undefined
                        || objReportMapping['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}'] == ''){
                        //dto.errMessageList.push('{!$Label.label_wf_29030}');
                        //dto.errFlg = true;
                        str_ecmImageError = '{!$Label.label_wf_29030}';
                    }
                }
            }
        }
    }

    if(str_msg_010094_fe != ''){
        dto.errMessageList.push(str_msg_010094_fe);
        dto.errFlg = true;
    }

    if(str_msg_010095_fe != ''){
        dto.errMessageList.push(str_msg_010095_fe);
        dto.errFlg = true;
    }

    if(str_msg_010060_fe != ''){
        dto.errMessageList.push(str_msg_010060_fe);
        dto.errFlg = true;
    }

    if(str_userInputError != ''){
        dto.errMessageList.push(str_userInputError);
        dto.errFlg = true;
    }

    if(str_ecmImageError != ''){
        dto.errMessageList.push(str_ecmImageError);
        dto.errFlg = true;
    }

    var sheetOrder = JSON.stringify(format);

    if(sheetOrder == undefined || sheetOrder == '[]'){
        dto.errMessageList.push('{!$Label.label_wf_29031}');
        dto.errFlg = true;
    }
}

/**
 * SFの帳票定義、マッピング、帳票定義履歴を保存する
 */
function saveSf(dto){


    var cntColumnSort = 1;
    //var objOverlayColumnHistory = $.extend(true,{},dto.objReportDefinitionHistory);
    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] = '';
    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.OverlayID__c.Name'] = $('input[id$="overlayText"]').val();
    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.ObjectID__c.Name'] = $('input[id$="reportOutText"]').val();
    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.ReportDefinitionID__c.Name'] = '';

    dto.overlayIdLabel = $('input[id$="overlayText"]').val();
    dto.objectIdLabel = $('input[id$="reportOutText"]').val();

    var message = '';

    for(var i=0;i<dto.overlayColumnDtoList.length;i++){

        for(var j=0;j<dto.overlayColumnDtoList[i].reportMappingList.length;j++){

            dto.overlayColumnDtoList[i].reportMappingList[j]['{!$ObjectType.ReportMapping__c.fields.CULOMNSORT__C.Name}']
                = cntColumnSort;

            cntColumnSort++;
//            if(dto.overlayColumnDtoList[i].strTrackMessage != ''){
//                //if(objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] != ''){
//                if(message != ''){
//                    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] += '\r\n';
//                    message += '\r\n';
//                    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] += dto.overlayColumnDtoList[i].strTrackMessage;
//                    message += dto.overlayColumnDtoList[i].strTrackMessage;
//                }else{
//                    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] += dto.overlayColumnDtoList[i].strTrackMessage;
//                    message += dto.overlayColumnDtoList[i].strTrackMessage;
//                }
//            }

        }

    }


    for(var i=0;i<dto.mapOverlayColumnDtoList.length;i++){

        for(var j=0;j<dto.mapOverlayColumnDtoList[i].reportMappingList.length;j++){

            dto.mapOverlayColumnDtoList[i].reportMappingList[j]['{!$ObjectType.ReportMapping__c.fields.CULOMNSORT__C.Name}']
                = cntColumnSort;

            cntColumnSort++;
//            if(dto.mapOverlayColumnDtoList[i].strTrackMessage != ''){
//                //if(objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] != ''){
//                if(message != ''){
//                    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] += '\r\n';
//                    message += '\r\n';
//                    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] += dto.mapOverlayColumnDtoList[i].strTrackMessage;
//                    message += dto.mapOverlayColumnDtoList[i].strTrackMessage;
//                }else{
//                    //objOverlayColumnHistory['$ObjectType.ReportDefinitionHistory__c.fields.Modify__c.Name'] += dto.mapOverlayColumnDtoList[i].strTrackMessage;
//                    message += dto.mapOverlayColumnDtoList[i].strTrackMessage;
//                }
//            }

        }

    }


    //オーバレイの履歴を格納する
    //dto.reportDefinitionHistoryList.push(objOverlayColumnHistory);
    dto.overlayTrackMessage = message;

    var categoryList = [];


    $(".categoryField").each(function(){
        var objCategoryE = $(this);
        var objCategory = {};

        getObjCategory(objCategoryE,objCategory);

        categoryList.push(objCategory);

        //カテゴリの履歴を作成する
        if(objCategory['value'] != beforeCategoryMap[objCategory['field']]['value']){

            if(dto.securityTrackMessage != ''){
                dto.securityTrackMessage += '\r\n';

            }

            dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30076}';
            dto.securityTrackMessage += '(';
            dto.securityTrackMessage += objCategory['label'];
            dto.securityTrackMessage += ')';
            dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
            dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
            dto.securityTrackMessage += beforeCategoryMap[objCategory['field']]['valueLabel'];
            dto.securityTrackMessage += ' ';
            dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
            dto.securityTrackMessage += objCategory['valueLabel'];
        }
    });



    var USERTYPEID = 'user';
    var ALLUSERID = 'alluser';
    var GROUPTYPEID = 'group';
    var ROLETYPEID = 'role';

    var authUser = '';
    var authGroup = '';
    var authRole = '';

    var allUserFlg = false;

    var strAddListHidden = '';
    strAddListHidden = $('input[id$="addListhidden"]').val();

    var authChangeFlg = true;

    //配列
    var addList = [];
    addList = strAddListHidden.split(',');
    //if(addList.length == 0){
    //    addList[0] = strAddListHidden;
    //}
    if(addList.length == 0){
        authChangeFlg = false;

        $('select[id$="notAddUser"] option').each(function(){
            $(this).removeAttr('selected');
        });

        for(var i=0;i<beforeAddedUserOptionArray.length;i++){

            $('select[id$="notAddUser"]').append(beforeAddedUserOptionArray[i].attr('selected', true));

        }

        move('notAddUser', 'added', 'add');
        strAddListHidden = $('input[id$="addListhidden"]').val();
        addList = strAddListHidden.split(',');
    }else if(addList.length == 1){
        if(addList[0] == ''){
            authChangeFlg = false;

            $('select[id$="notAddUser"] option').each(function(){
                $(this).removeAttr('selected');
            });

            for(var i=0;i<beforeAddedUserOptionArray.length;i++){

                $('select[id$="notAddUser"]').append(beforeAddedUserOptionArray[i].attr('selected', true));

            }

            moveAuth('notAddUser', 'added', 'add');

            strAddListHidden = $('input[id$="addListhidden"]').val();
            addList = strAddListHidden.split(',');


        }
    }

    var alluser = USERTYPEID+ALLUSERID;

    for(var k=0;k<addList.length;k++){

        if(addList[k] == alluser){


            allUserFlg = true;

        }else{
            if(addList[k].lastIndexOf(USERTYPEID,0)>-1){
                var addId = addList[k].substring(4,22) + ',';
                authUser += addId;
            }else if(addList[k].lastIndexOf(GROUPTYPEID,0)>-1){
                var addId = addList[k].substring(5,23) + ',';
                authGroup += addId;
            }else if(addList[k].lastIndexOf(ROLETYPEID,0)>-1){
                var addId = addList[k].substring(4,22) + ',';
                authRole += addId;
            }
        }

    }

    if(allUserFlg){
        authUser = USERTYPEID + ALLUSERID + ',';
        authGroup = '';
        authRole = '';


    }

   //ユーザ権限の履歴メッセージを作成する
   var addedLabel = '';
   if(allUserFlg){
       //$(esc('page:form:added')+' option').each(function() {
       $('select[id$="added"] option').each(function() {
          if($(this).val()==alluser){
              addedLabel = $(this).text();
          }
        });
   }else{
       //$(esc('page:form:added')+' option').each(function() {
       $('select[id$="added"] option').each(function() {
          if(addedLabel != ''){
              addedLabel += ',';
              addedLabel += $(this).text();
          }else{
              addedLabel = $(this).text();
          }

        });
    }

    var userAuthMessage = '';

    if(authChangeFlg){
        userAuthMessage += '{!$Label.msg_wf_00241}';
        userAuthMessage += strBeforeUserAuthAddedLabel;
        userAuthMessage += '{!$Label.msg_wf_00242}';
        userAuthMessage += addedLabel;
    }

    dto.userAuthTrackMessage = userAuthMessage;


    //帳票定義レコードを生成する

    //dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}'] = wrFormDefinitionId;

    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.Name.Name}'] = $('input[id$="formatName"]').val();
    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.Explanation__c.Name}'] = $('textarea[id$="explanation"]').val();

    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayID__c.Name}'] = $('input[id$="overlayText"]').val();
    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayIDID__c.Name}'] = $('input[id$="rOverlayId"]').val();

    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.OverlayVersion__c.Name}'] = $('input[id$="rOverlayVersion"]').val();

    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.ObjectLabel__c.Name}'] = $('input[id$="reportOutText"]').val();
    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.ObjectID__c.Name}'] = $('input[id$="reportOutText_lkid"]').val();

    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.ECMImageFlg__c.Name}'] = $('input[id$="ecmImageFlg"]').is(':checked');

    //カテゴリ

    for(var c=0;c<categoryList.length;c++){
        dto.objReportDefinition[categoryList[c]['field']] = categoryList[c]['value'];
    }

    //addListhidden権限
    //if(authChangeFlg){
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.AuthorityUser__c.Name}'] = authUser;
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.AuthorityGroup__c.Name}'] = authGroup;
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.AuthorityRole__c.Name}'] = authRole;
    //}

    //セキュリティ
    createSecurityValue(dto);

    if(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPw__c.Name}'] != undefined){
        createSecurityHistory(dto);
    }

    //VFRemoteで帳票定義を登録する
    asyncSaveWREvidence(formFormatDTO);
    asyncSaveReportDefinition(dto);
}

/**
 * セキュリティの登録する値を作成する
 */
function createSecurityValue(dto){

    dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityLevel__c.Name}'] = $('select[id$="securityLevel"]').val();

    if(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityLevel__c.Name}']
        != 'all'){
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPw__c.Name}'] = $('input[id$="securityPw"]').val();
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityMpw__c.Name}'] = $('input[id$="securityMpw"]').val();
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPrint__c.Name}'] = $('select[id$="securityPrint"]').val();
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityEdit__c.Name}'] = $('select[id$="securityEdit"]').val();
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityExtract__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAssembly__c.Name}'] = $('select[id$="securityAssembly"]').val();
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityCopy__c.Name}'] = $('select[id$="securityCopy"]').val();
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAccessibility__c.Name}'] = $('select[id$="securityAccessibility"]').val();
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityNote__c.Name}'] = $('select[id$="securityNote"]').val();
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityFt__c.Name}'] = $('select[id$="securityFf"]').val();
    }else{
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPw__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityMpw__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPrint__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityEdit__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityExtract__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAssembly__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityCopy__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAccessibility__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityNote__c.Name}'] = '';
        dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityFt__c.Name}'] = '';
    }
}

/**
 * セキュリティの履歴レコードを作成する
 */
function createSecurityHistory(dto){

    // セキュリティに関する情報を比較

    //セキュリティレベル

    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityLevel__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityLevel__c.Name}'] = '';
    }

    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityLevel__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityLevel__c.Name}']){
        //セキュリティレベルを変更しました。変更前： 変更後：
        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30013}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityLevelLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityLevel__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityLevelLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityLevel__c.Name}']);

    }

    //印刷許可
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPrint__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPrint__c.Name}'] = '';
    }

    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPrint__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPrint__c.Name}']){
        //印刷を許可を変更しました。変更前： 変更後：
        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30017}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityPrintLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPrint__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityPrintLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityPrint__c.Name}']);

    }

    //編集許可
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityEdit__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityEdit__c.Name}'] = '';
    }

    //編集を許可を変更しました。変更前： 変更後：
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityEdit__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityEdit__c.Name}']){

        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30018}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityEdit__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityEdit__c.Name}']);

    }

    //アセンブリ許可
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAssembly__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAssembly__c.Name}'] = '';
    }

    //文書アセンブリを許可を変更しました。変更前： 変更後：
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAssembly__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAssembly__c.Name}']){

        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30019}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAssembly__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAssembly__c.Name}']);

    }

    //コピー許可
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityCopy__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityCopy__c.Name}'] = '';
    }

    //内容のコピーを変更しました。変更前： 変更後：
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityCopy__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityCopy__c.Name}']){

        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30020}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityCopy__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityCopy__c.Name}']);

    }
    //アクセスビリティ許可
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAccessibility__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAccessibility__c.Name}'] = '';
    }

    //アクセシビリティの為の内容の抽出を変更しました。変更前： 変更後：
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAccessibility__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAccessibility__c.Name}']){

        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30021}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAccessibility__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityAccessibility__c.Name}']);

    }

    //ページ抽出許可
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityExtract__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityExtract__c.Name}'] = '';
    }

    //ページの抽出を変更しました。変更前： 変更後：
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityExtract__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityExtract__c.Name}']){

        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30022}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityExtract__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityExtract__c.Name}']);

    }

    //注釈許可
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityNote__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityNote__c.Name}'] = '';
    }

    //注釈を変更しました。変更前： 変更後：
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityNote__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityNote__c.Name}']){

        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30023}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityNote__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityNote__c.Name}']);

    }

    //フォームフィールド入力許可
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityFt__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityFt__c.Name}'] = '';
    }

    //フォームフィールドの入力を変更しました。変更前： 変更後：
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityFt__c.Name}']
        != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityFt__c.Name}']){

        if(dto.securityTrackMessage != ''){
            dto.securityTrackMessage += '\r\n';
        }
        dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30024}';
        dto.securityTrackMessage += '{!$Label.msg_wf_00236}';
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00237}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityFt__c.Name}']);
        dto.securityTrackMessage += ' ';
        dto.securityTrackMessage += '{!$Label.msg_wf_00238}';
        dto.securityTrackMessage += getSecurityPermissionLabel(dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.SecurityFt__c.Name}']);

    }

    //パスワード
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityPw__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityPw__c.Name}'] = '';
    }

    //チェック有無
//    if($('[id$="pwChkBox"]').val()=='true'){
    if($('[id$="pwChkBox"]').val()=='on'){

        //パスワード変更有無
        if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityPw__c.Name}']
            != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityPw__c.Name}']){

            if(dto.securityTrackMessage != ''){
                dto.securityTrackMessage += '\r\n';
            }
            dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30014}';
            dto.securityTrackMessage += '{!$Label.msg_wf_00236}';

        }
    }else{

        if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityPw__c.Name}']
            != null && dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityPw__c.Name}'] != ''){

            if(dto.securityTrackMessage != ''){
                dto.securityTrackMessage += '\r\n';
            }
            dto.securityTrackMessage += '{!$Label.solxyzcso001__label_wf_30014}';
            dto.securityTrackMessage += '{!$Label.msg_wf_00236}';

        }
    }

    //マスタパスワード
    if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityMpw__c.Name}']
        == undefined){
        dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityMpw__c.Name}'] = '';
    }


    //権限パスワードを変更しました。

    //チェック有無
//    if($('[id$="mpwChkBox"]').val()=='true'){
    if($('[id$="mpwChkBox"]').val()=='on'){

        //マスタパスワード変更有無
        if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityMpw__c.Name}']
            != dto.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityMpw__c.Name}']){

            if(dto.securityTrackMessage != ''){
                dto.securityTrackMessage += '\r\n';
            }
            dto.securityTrackMessage += '{!$Label.label_wf_30029}';
            dto.securityTrackMessage += '{!$Label.msg_wf_00236}';

        }

    }else{

        if(dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityMpw__c.Name}'] != null
            && dto.beforeObjReportDefinition['{!$ObjectType.ReportDefinition__c.fields.securityMpw__c.Name}'] != ''){

            if(dto.securityTrackMessage != ''){
                dto.securityTrackMessage += '\r\n';
            }
            dto.securityTrackMessage += '{!$Label.label_wf_30029}';
            dto.securityTrackMessage +~ '{!$Label.msg_wf_00236}';

        }
    }



}

// 互換性のある形式のラベルを取得
function getSecurityLevelLabel(val){


    //返却値
    var label = '';

    if(val == null||val == ''){
        label = '{!$Label.msg_wf_00240}';
    }else if(val=='all'){
        label = '{!$Label.label_wf_30045}';
    }else if(val=='0'){
        label = '{!$Label.label_wf_30040}';
    }else if(val=='1'){
        label = '{!$Label.label_wf_30041}';
    }else if(val=='2'){
        label = '{!$Label.label_wf_30042}';
    }else{
        label = '{!$Label.msg_wf_00240}';
    }
    return label;
}

// 暗号化レベルのラベルを取得
function getEncryptionLevelLavel(val){

    //返却値
    var label = '';

    if(val == null||val == ''){
        label = '{!$Label.label_wf_00141}';
    }else if(val=='all'){
        label = '{!$Label.label_wf_30045}';
    }else if(val=='0'){
        label = '40-bit RC4';
    }else if(val=='1'){
        label = '128-bit RC4';
    }else if(val=='2'){
        label = '128-bit AES';
    }else{
        label = '{!$Label.label_wf_00141}';
    }
    return label;
}

// 印刷を許可のラベルを取得
function getSecurityPrintLabel(val){

    //返却値
    var label = '';

    if(val == null || val == ''){
        label = '{!$Label.msg_wf_00240}';
    }else if(val=='true_high'){
        label = '{!$Label.label_wf_30043}';
    }else if(val=='true_low'){
        label = '{!$Label.label_wf_30044}';
    }else if(val=='false'){
        label = '{!$Label.solxyzcso001__label_wf_30027}';
    }else {
        label = '{!$Label.msg_wf_00240}';
    }
    return label;
}

// その他セキュリティの許可する・しないのラベルを取得
function getSecurityPermissionLabel(val){

    //返却値
    var label = '';

    if(val == null){
        label = '{!$Label.msg_wf_00240}';
    }else if(val=='true'){
        label = '{!$Label.label_wf_30026}';
    }else if(val=='false'){
        label = '{!$Label.solxyzcso001__label_wf_30027}';
    }else{
        label = '{!$Label.msg_wf_00240}';
    }

    return label;
}

function findeSheet(node, targetSheetId, base){

    var prefix = 0;
    if(node.type == 'trace'){
        prefix = base*10 + 10
    } else if(node.type == 'repeat'){
        prefix = base*10 + 20
    }
      
    var children = node.children;
    for(var i=0; i<children.length; i++){
      if(children[i].type == 'sheet'){
          if(children[i].sheet_id == targetSheetId){
              return prefix + i;
          }
      } else {
          return findeSheet(children[i], targetSheetId, prefix);
      }
    }
    return -1;
}

/**
 * WR証跡を登録
 */
function asyncSaveWREvidence(dto){

     //シート出力順が変更されたかを確認
     if(!dto.newFlg){
         for(var i=0;i<sheetsBase.length;i++){
             if(sheetsBase[i].sheet_name.indexOf("#") == 0){
                 continue;
             }
             //サブシート以外のシート
             var orgIndex = -1;
             var newIndex = -1;
             dto.wrEvidenceMap[sheetsBase[i].sheet_name] = new Array();
             for(var old_i=0; old_i<sheet_Order.length; old_i++){
               if(sheet_Order[old_i].type == 'sheet'){
                   if(sheet_Order[old_i].sheet_id == sheetsBase[i].sheet_id){
                       orgIndex = old_i + 1;
                       break;
                   }
               } else {
                   orgIndex = findeSheet(sheet_Order[old_i], sheetsBase[i].sheet_id, 0);
                   if(orgIndex >= 0){
                       orgIndex = orgIndex + old_i + 1;
                       break;
                   }
               }
             }
             
             for(var new_i=0; new_i<format.length; new_i++){
               if(format[new_i].type == 'sheet'){
                   if(format[new_i].sheet_id == sheetsBase[i].sheet_id){
                       newIndex = new_i + 1;
                       break;
                   }
               } else {
                   newIndex = findeSheet(format[new_i], sheetsBase[i].sheet_id, 0);
                   if(newIndex >= 0){
                       newIndex = newIndex + new_i +1;
                       break;
                   }
               }
             }
             
             if(orgIndex<0 && newIndex>0){
                 //シートが追加された
                 dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063008");
             } else if(orgIndex>0 && newIndex<0){
                 //シートが削除された
                 dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063009");
             } else if(orgIndex>0 && newIndex>0){
                 if(orgIndex%10 != newIndex%10){
                     //シートの順序が変更された
                     dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063010");
                 } else if(orgIndex < newIndex){
                     var newIndexStr = newIndex + "";
                     var oldIndexStr = orgIndex + "";
                     var target = newIndexStr.substr(newIndexStr.length-oldIndexStr.length, oldIndexStr.length);
                     for(var k=oldIndexStr.length-2; k>=0; k--){
                         if(target[k]=="2" && oldIndexStr[k]=="1"){
                             dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063012");
                             dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063013");
                         } else if(target[k]=="1" && oldIndexStr[k]=="2"){
                             dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063014");
                             dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063011");
                         }
                     }
                     
                     newIndexStr = newIndexStr.substr(0,newIndexStr.length-oldIndexStr.length);
                     if(newIndexStr.indexOf("2")>=0){
                         //シートに繰り返し設定を追加
                         dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063013");
                     }
                     if(newIndexStr.indexOf("1")>=0){
                         //シートに複写設定を追加
                         dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063011");
                     }
                 } else if(orgIndex > newIndex){
                     var oldIndexStr = orgIndex + "";
                     var newIndexStr = newIndex + "";
                     var target = oldIndexStr.substr(oldIndexStr.length-newIndexStr.length, newIndexStr.length);
                     for(var k=newIndexStr.length-2; k>=0; k--){
                         if(target[k]=="1" && newIndexStr[k]=="2"){
                             dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063012");
                             dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063013");
                         } else if(target[k]=="2" && newIndexStr[k]=="1"){
                             dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063014");
                             dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063011");
                         }
                     }
                     
                     oldIndexStr = oldIndexStr.substr(0,oldIndexStr.length-newIndexStr.length);
                     if(oldIndexStr.indexOf("2")>=0){
                         //シートに繰り返し設定を削除
                         dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063014");
                     }
                     if(oldIndexStr.indexOf("1")>=0){
                         //シートに複写設定を削除
                         dto.wrEvidenceMap[sheetsBase[i].sheet_name].push("msg.063012");
                     }
                 }
             }
         }
     }
     
　　　　Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.saveWREvidence}'
        ,dto, $('input[id$="orgUsershidden"]').val(), $('input[id$="newUsershidden"]').val()
        ,function(result, event){
            if(!result){
                //証跡登録に失敗
                var errMessageArray = [];
                errMessageArray.push('{!$Label.label_wr_evidence_00001}');
                var messageHtml = createMessageHtml(errMessageArray);
                $('#jsPageMessagesCell').html(messageHtml);
                $('#jsPageMessages').show();
            }
        }
        ,{escape: true}
    );
}

/**
 * 帳票定義、マッピング、帳票定義履歴を保存する
 */
function asyncSaveReportDefinition(dto){

    Visualforce.remoting.Manager.invokeAction(
        '{!$RemoteAction.ReportDefinitionEditController.saveFormFormat}'
        ,dto
        ,function(result, event){

            if (event.status) {

                //グローバル変数に戻り値を格納する
                formFormatDTO = result;


                if(!formFormatDTO.errFlg){
                    
                    //top.location.href = '/{!$ObjectType.ReportDefinition__c}/o';
                    top.location.href = '/' + formFormatDTO.objReportDefinition.Id;
                    CsoScript_loadingStop();
                }else{

                    if(formFormatDTO.newFlg){

                        var callback = function (data) {

                            CsoScript_loadingStop();

                            //WR本体の帳票定義IDをクリアする
                            formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}'] = '';

                            formFormatDTO.errFlg = false;

                            //var message = formFormatDTO.errMessage;

                            var messageHtml = createMessageHtml(formFormatDTO.errMessageList);

                            $('#jsPageMessagesCell').html(messageHtml);
                            $('#jsPageMessages').show();

                        };


                        var callerror = function (data) {

                            CsoScript_loadingStop();

                            formFormatDTO.errFlg = false;

                            if(data.status != 500){
                                var dataObj = JSON.parse(data.responseText);
                            
                                var message = dataObj.message;
                                message += '<br/>';
                                message += 'code:';
                                message += dataObj.code;

                                formFormatDTO.errMessageList.push(message);

                                var messageHtml = createMessageHtml(formFormatDTO.errMessageList);

                                $('#jsPageMessagesCell').html(messageHtml);
                                $('#jsPageMessages').show();
                            }else{

                                var errMessageArray = [];
                                errMessageArray.push('{!$Label.msg_00136}');

                                var messageHtml = createMessageHtml(errMessageArray);

                                $('#jsPageMessagesCell').html(messageHtml);
                                $('#jsPageMessages').show();
                            }
                        };


                        var idsParam = [];
                        var idMap = {};

                        idMap['type'] = 'form';
                        idMap['id'] = formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionID__c.Name}'];

                        idsParam.push(idMap);

                        var d = JSON.stringify({
                            'userid': USERNAME,
                            'credential': CREDENTIAL,
                            'ids': JSON.stringify(idsParam)
                        });


                        securePostAsyncSf('/rest/FormDefinitionDelete', d, callback, callerror);


                    }else{

                        CsoScript_loadingStop();
                        formFormatDTO.errFlg = false;

                        //var message = formFormatDTO.errMessage;

                        var messageHtml = createMessageHtml(formFormatDTO.errMessageList);

                        $('#jsPageMessagesCell').html(messageHtml);
                        $('#jsPageMessages').show();

                    }
                }
            } else if (event.type === 'exception') {

                if(formFormatDTO.newFlg){

                        var callback = function (data) {

                            CsoScript_loadingStop();

                            //WR本体の帳票定義IDをクリアする
                            formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}'] = '';

                            formFormatDTO.errFlg = false;

                            //var message = formFormatDTO.errMessage;

                            var messageHtml = createMessageHtml(formFormatDTO.errMessageList);

                            $('#jsPageMessagesCell').html(messageHtml);
                            $('#jsPageMessages').show();

                        };


                        var callerror = function (data) {

                            CsoScript_loadingStop();

                            formFormatDTO.errFlg = false;

                            if(data.status != 500){
                                var dataObj = JSON.parse(data.responseText);
                            
                                var message = dataObj.message;
                                message += '<br/>';
                                message += 'code:';
                                message += dataObj.code;

                                formFormatDTO.errMessageList.push(message);

                                var messageHtml = createMessageHtml(formFormatDTO.errMessageList);

                                $('#jsPageMessagesCell').html(messageHtml);
                                $('#jsPageMessages').show();
                            }else{

                                var errMessageArray = [];
                                errMessageArray.push('{!$Label.msg_00136}');

                                var messageHtml = createMessageHtml(errMessageArray);

                                $('#jsPageMessagesCell').html(messageHtml);
                                $('#jsPageMessages').show();
                            }
                        };


                        var idsParam = [];
                        var idMap = {};

                        idMap['type'] = 'form';
                        idMap['id'] = formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionID__c.Name}'];

                        idsParam.push(idMap);

                        var d = JSON.stringify({
                            'userid': USERNAME,
                            'credential': CREDENTIAL,
                            'ids': JSON.stringify(idsParam)
                        });


                        securePostAsyncSf('/rest/FormDefinitionDelete', d, callback, callerror);


                }else{
                    CsoScript_loadingStop();

                    var message = event.message;

                    var errMessageArray = [];
                    errMessageArray.push(message);

                    var messageHtml = createMessageHtml(errMessageArray);

                    $('#jsPageMessagesCell').html(messageHtml);
                    $('#jsPageMessages').show();
                 }
            } else {

                if(formFormatDTO.newFlg){

                        var callback = function (data) {

                            CsoScript_loadingStop();

                            //WR本体の帳票定義IDをクリアする
                            formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionId__c.Name}'] = '';

                            formFormatDTO.errFlg = false;

                            //var message = formFormatDTO.errMessage;

                            var messageHtml = createMessageHtml(formFormatDTO.errMessageList);

                            $('#jsPageMessagesCell').html(messageHtml);
                            $('#jsPageMessages').show();

                        };


                        var callerror = function (data) {

                            CsoScript_loadingStop();

                            formFormatDTO.errFlg = false;

                            if(data.status != 500){
                                var dataObj = JSON.parse(data.responseText);
                            
                                var message = dataObj.message;
                                message += '<br/>';
                                message += 'code:';
                                message += dataObj.code;

                                formFormatDTO.errMessageList.push(message);

                                var messageHtml = createMessageHtml(formFormatDTO.errMessageList);

                                $('#jsPageMessagesCell').html(messageHtml);
                                $('#jsPageMessages').show();
                            }else{

                                var errMessageArray = [];
                                errMessageArray.push('{!$Label.msg_00136}');

                                var messageHtml = createMessageHtml(errMessageArray);

                                $('#jsPageMessagesCell').html(messageHtml);
                                $('#jsPageMessages').show();
                            }
                        };


                        var idsParam = [];
                        var idMap = {};

                        idMap['type'] = 'form';
                        idMap['id'] = formFormatDTO.objReportDefinition['{!$ObjectType.ReportDefinition__c.fields.WR_FormDefinitionID__c.Name}'];

                        idsParam.push(idMap);

                        var d = JSON.stringify({
                            'userid': USERNAME,
                            'credential': CREDENTIAL,
                            'ids': JSON.stringify(idsParam)
                        });


                        securePostAsyncSf('/rest/FormDefinitionDelete', d, callback, callerror);

                }else{
                    CsoScript_loadingStop();

                    var message = event.message;

                    var errMessageArray = [];
                    errMessageArray.push(message);

                    var messageHtml = createMessageHtml(errMessageArray);

                    $('#jsPageMessagesCell').html(messageHtml);
                    $('#jsPageMessages').show();
                }
            }
        }
        ,{escape: true}
    );

}

/**
 * クイック検索
 */
function quickSearch(item){

    var searchText = document.getElementById(item.id).value.toLowerCase();
    var cntDragE = 0;
    $(".drags").each(function(){
        var objDragE = $(this);

        if(objDragE.attr('data-search').indexOf(searchText)>-1){
            cntDragE++;

            //objDragE.show('fast');
            objDragE.parent('div').show('fast');
            //objDragE.slideDown('slow');
        }else{
            //objDragE.hide('fast');
            objDragE.parent('div').hide('fast');
        }

    });


    resizeDragsAreaWidth(cntDragE);
}

function delQuickSearchText(){

    $('#quick').val('');
    $('#quick').trigger("keyup");
}

function hideShowOverlayColumnIDBySheetId(item){

    var searchSheetId = $('#'+item.id).val();

    $('td[id^=\"hiddensheetid\"]').each(function(){

        var sheetIdListObjE = $(this);

        if(searchSheetId != ''){
            //var sheetIdArray = sheetIdListObjE.text().split(',');
            var sheetIdcsv = sheetIdListObjE.text();

            if(sheetIdcsv.indexOf(searchSheetId)>-1){
                sheetIdListObjE.parent('tr').show('fast');
            }else{
                sheetIdListObjE.parent('tr').hide('fast');
            }
        }else{
            sheetIdListObjE.parent('tr').show('fast');
        }
    });

}

function ecmImageSelectReturn(thumid,docid,imgE){

    //$('#'+thumid).html(imgE);
    $('#'+thumid).html(imgE[0].outerHTML);

    $('#'+thumid).next('input[id="docid"]').val(docid);

    //マッピングレコードに値を格納する
    var strOverlayColumnID = $('#'+thumid).parent('td').prev('td').prev('td').prev('td').text();
//mod_start_20130829 チケット7511
    //var indexOverlayColumnID = strOverlayColumnID.toLowerCase();
    var indexOverlayColumnID = strOverlayColumnID;
//mod_end_20130829 チケット7511
    if(indexOverlayColumnID.indexOf('*')>-1){
        indexOverlayColumnID = indexOverlayColumnID.replace('*','');
    }

    var cntMaxReportMappingList = overlayColumnIDMap[indexOverlayColumnID].reportMappingList.length;

    overlayColumnIDMap[indexOverlayColumnID].reportMappingList[cntMaxReportMappingList-1]['{!$ObjectType.ReportMapping__c.fields.tempPicID__c.Name}']
        = docid;


    overlayColumnIDMap[indexOverlayColumnID].reportMappingList[cntMaxReportMappingList-1]['{!$ObjectType.ReportMapping__c.fields.ObjectID__c.Name}']
        = 'ECM_image'; //ＥＣＭ画像
}
</script>
                                    <div id="tabMapping" style="/*background-color:#f2f2f3;*/overflow: auto; /*width:730px;*/ min-width:97%; min-height: 730px; display:none;" class="notdrops ui-tabs-panel ui-widget-content ui-corner-bottom">

                                        <div id="navTab" class="" style="border-style: solid;border-color:#ddd;background:white;/*min-width:950px;*/width:950px; height:120px;border-radius: 5px;-webkit-border-radius: 5px;-moz-border-radius: 5px;">
                                            <div id="treeContainer" style="float:left;overflow:scroll; width:200px;height:120px;" >
                                                <div id="divtreeview" style="width:1000px/*;height:1000px;*/">
                                                    <ul id="tv" class="treeview">

                                                    </ul>
                                                </div>
                                            </div>
                                            <div id="divDrags" class="scrollOn" style="z-index:999;/*overflow-x:scroll;overflow-y:hidden;*/ float:left; width:750px;;height:120px;">

                                                <div id="quickTool" class="toolsInner">
                                                    <img id="quickIcon" src="/img/ple/search20.gif" style="vertical-align:middle;" />
                                                    <label class="quickLabel" >{!$Label.label_wf_29022}</label>
                                                    <input id="quick" value="" onchange="quickSearch(this);" onkeyup="quickSearch(this);" maxlength="255"/>
                                                    <span style="display:inline-block;vertical-align:middle;">
                                                        <img id="quickDel" onclick="delQuickSearchText();" src="{!URLFOR($Resource.FormFormat,'img/delete.png')}" height="18px" />
                                                    </span>
                                                </div>
                                                <div id="ulDrags" class="clearfix" style="z-index:0;float:left; min-width:730px;">

                                                </div>

                                            </div>
                                        </div>
                                        <span id="hiddentooltip" class="tooltip" style="display:none;"></span>
                                        <!--
                                        <div id="article" style="/*background-color:#f2f2f3;*/z-index:0">
                                         -->

                                            <input type="button" class="btn" value="{!$Label.label_wf_00074}" onclick="autoMapping();"/>
                                            <br />
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_29023}"/>

                                            <select id="sheetList" value="" onclick="hideShowOverlayColumnIDBySheetId(this);">

                                            </select>

                                            <apex:pageBlockSection showHeader="false" title="{!$Label.solxyzcso001__label_wf_00060}" columns="1" id="sectionM" collapsible="false">
                                                <!--
                                                <apex:pageBlockSectionItem >
                                                    <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_29023}"/>
                                                    <select id="sheetList" value="" onclick="hideShowOverlayColumnIDBySheetId(this);">

                                                    </select>
                                                </apex:pageBlockSectionItem>
                                                 -->
                                                <table id="mappingTable" style="/*background-color:white;*/">
                                                    <thead>
                                                        <tr>
                                                            <th style="width:10%;">{!$Label.label_wf_29024}</th>
                                                            <th style="display:none;">{!$Label.label_wf_29025}</th>
                                                            <th style="width:20%;">{!$Label.label_wf_00061}</th>
                                                            <th style="width:20%;">{!$Label.solxyzcso001__label_wf_00050}</th>
                                                            <th style="width:20%;">{!$Label.label_wf_00062}</th>
                                                            <th style="width:20%;"></th>
                                                            <th colspan="2" style="width:10%;">{!$Label.label_wf_30077}</th>
                                                            <!--
                                                            <th style="width:100px;height:50px;"></th>
                                                             -->
                                                        </tr>
                                                    </thead>
                                                    <tbody>

                                                    </tbody>
                                                </table>
                                                <span id="hiddentooltip2" class="tooltip" style="display:none;"></span>
                                            </apex:pageBlockSection>

                                            <!-- 地図情報 -->
                                            <apex:pageBlockSection title="{!$Label.solxyzcso001__label_wf_00444}" columns="1" id="sectionMap" collapsible="false">
                                                <table id="mapsMappingTable">
                                                    <thead>
                                                        <tr>
                                                            <th style="width:100px;height:50px;">{!$Label.label_wf_29024}</th>
                                                            <th style="display:none;">{!$Label.label_wf_29025}</th>
                                                            <th style="width:200px;height:50px;">{!$Label.label_wf_00445}</th>
                                                            <th style="width:200px;height:50px;">{!$Label.label_wf_00446}</th>
                                                            <th style="width:200px;height:50px;">{!$Label.label_wf_00061}</th>
                                                            <th style="width:600px;height:50px;">{!$Label.solxyzcso001__label_wf_00050}</th>
                                                            <th style="width:900px;height:50px;">{!$Label.label_wf_00062}</th>
                                                            <th style="width:300px;height:50px;"></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </apex:pageBlockSection>
                                        <!--
                                        </div>
                                         -->
                                        <!-- /#article -->

                                    </div>
<!-- マッピングタブ END -->
<!-- セキュリティタブ START -->
<script type="text/javascript">

jQuery.event.add(window, "load", function(){

     // Settings Explanation memainds
//    $("textarea[id$=explanation]").keyup(function(){
//        viewCommentLength2("textarea[id$=explanation]", "explanationRemainder", 512);
//    });
//    viewCommentLength2("textarea[id$=explanation]", "explanationRemainder", 512);

    $("textarea[id$=explanation]").keyup(function(){
        viewCommentLength2("textarea[id$=explanation]", "explanationRemainder", 512);
    });
    viewCommentLength2("textarea[id$=explanation]", "explanationRemainder", 512);

    changeEncryption();
    chkCHange('pwChk');
    chkCHange('mpwChk');

    $('input[id$="securityPw"]').val("{!JSENCODE(rd.securityPw__c)}");
    $('input[id$="securityMpw"]').val("{!JSENCODE(rd.securityMpw__c)}");

     //追加リストの空行を削除する。
    $(collabo + '\\:' +  'added').children().each(function(){
        if($(this).val() == ''){
            $(this).remove();
        }
    });
});

function viewCommentLength2(t, v, maxSize){
    var regexp = RegExp(/\r\n|\r|\n/g);
    var str = $(t).val().replace(regexp, "\r\n");
    var size = maxSize - str.length;

    if(size <= 0){
        $("#" + v).css("color","#FF0000");
    }else{
        $("#" + v).css("color","#000000");
    }

    $("#" + v).text(getMsg(new Array(size + ""), '{!$Label.label_wf_10227}'));
}

// セキュリティ設定の制御
function changeEncryption(){
    var level = "";
    //var security = document.getElementById("page0:myform:myBlock:Section:securitySection:security1:securityLevel").value;
    var security = $('select[id$="securityLevel"]').val();


    if(security == '0'){
        // Acrobat3.0およびそれ以降
        level = "40-bit RC4";
        $('input[id$="pwChkBox"]').removeAttr("disabled");
        $('input[id$="mpwChkBox"]').removeAttr("disabled");
        $('select[id$="securityPrint"]').attr("disabled", "disabled");
        $('select[id$="securityEdit"]').removeAttr("disabled");
        $('select[id$="securityAssembly"]').attr("disabled", "disabled");
        $('select[id$="securityCopy"]').removeAttr("disabled");
        $('select[id$="securityAccessibility"]').attr("disabled", "disabled");
        $('select[id$="securityNote"]').removeAttr("disabled");
        $('select[id$="securityFf"]').attr("disabled", "disabled");

    }else if(security == '1'){
        // Acrobat5.0およびそれ以降及びAcrobat6.0およびそれ以降
        level = "128-bit RC4";
        $('input[id$="pwChkBox"]').removeAttr("disabled");
        $('input[id$="mpwChkBox"]').removeAttr("disabled");
        $('select[id$="securityPrint"]').removeAttr("disabled");
        $('select[id$="securityEdit"]').removeAttr("disabled");
        $('select[id$="securityAssembly"]').removeAttr("disabled");
        $('select[id$="securityCopy"]').removeAttr("disabled");
        $('select[id$="securityAccessibility"]').removeAttr("disabled");
        $('select[id$="securityNote"]').removeAttr("disabled");
        $('select[id$="securityFf"]').removeAttr("disabled");

    }else if(security == '2'){
        // Acrobat7.0およびそれ以降
        level = "128-bit AES";
        $('input[id$="pwChkBox"]').removeAttr("disabled");
        $('input[id$="mpwChkBox"]').removeAttr("disabled");
        $('select[id$="securityPrint"]').removeAttr("disabled");
        $('select[id$="securityEdit"]').removeAttr("disabled");
        $('select[id$="securityAssembly"]').removeAttr("disabled");
        $('select[id$="securityCopy"]').removeAttr("disabled");
        $('select[id$="securityAccessibility"]').removeAttr("disabled");
        $('select[id$="securityNote"]').removeAttr("disabled");
        $('select[id$="securityFf"]').removeAttr("disabled");

    }else if(security == 'all'){

        // すべて
        level = '{!$Label.label_wf_00141}';
        $('input[id$="pwChkBox"]').attr("disabled", "disabled");
        $('input[id$="pwChkBox"]').attr("disabled", "true");
        $('input[id$="mpwChkBox"]').attr("disabled", "disabled");
        $('select[id$="securityPrint"]').attr("disabled", "disabled").val('');
        $('select[id$="securityEdit"]').attr("disabled", "disabled");
        $('select[id$="securityAssembly"]').attr("disabled", "disabled");
        $('select[id$="securityCopy"]').attr("disabled", "disabled");
        $('select[id$="securityAccessibility"]').attr("disabled", "disabled");
        $('select[id$="securityNote"]').attr("disabled", "disabled");
        $('select[id$="securityFf"]').attr("disabled", "disabled");

        $('input[id$="securityPw"]').attr("disabled");
        $('input[id$="securityMpw"]').attr("disabled");
        $('input[id$="securityPw"]').css("background-color","#ffffff");
        $('input[id$="securityMpw"]').css("background-color","#ffffff");

        $('input[id$="pwChkBox"]').removeAttr("checked");
        $('input[id$="mpwChkBox"]').removeAttr("checked");

        $('input[id$="securityPw"]').val("");
        $('input[id$="securityMpw"]').val("");

        chkCHange("pwChk");
        chkCHange("mpwChk");

    }

    $("#security2_text").text(level);
}

// パスワードの入力制御
function chkCHange(id){

    var chkPW = $('input[id$="pwChkBox"]').attr("checked");
    var chkMPW = $('input[id$="mpwChkBox"]').attr("checked");

    if(id == "pwChk"){
        if(chkPW){
            $('input[id$="securityPw"]').val("need");
        }else{
            $('input[id$="securityPw"]').val("");
        }
    }else if(id == "mpwChk"){
        if(chkMPW){
            $('input[id$="securityMpw"]').val("need");
        }else{
            $('input[id$="securityMpw"]').val("");
        }
    }
}

// パスワードの入力チェック
function chkPwInput(){

    var selectSecurity = $('input[id$="securityLevel"]').val();
    var chkPWB         = $('input[id$="pwChkBox"]').attr("checked");
    var chkMPWB        = $('input[id$="mpwChkBox"]').attr("checked");
    var pwInput        = $('input[id$="securityPw"]').val();
    var mpwInput       = $('input[id$="securityMpw"]').val();

    if(selectSecurity != 'all'){
        if(chkPWB && pwInput == ""){
            alert("{!$Label.message_wf_30003}");

            return false;
        }

        if(chkMPWB && mpwInput == ""){
            alert("{!$Label.message_wf_30004}");
            return false;
        }
    }

    return true;
}

/**
 *2012.11.29 #4371対応 add start
 *権限ユーザ/グループ/ロール表示切り替え
 */

//==========//
//  onload  //
//==========//
var ReportUser_userIdList = new Array();     //  有効なユーザのユーザID一覧

//==========================//
//  有効なユーザ一覧の生成  //
//==========================//
function createUserIdList(){
    <apex:repeat value="{!userIdList}" var="userId">
        ReportUser_userIdList[ReportUser_userIdList.length] = "{!userId}";
    </apex:repeat>

// ユーザ一覧をクリア
    var limitsList = $("#limitsList");
    //alert("limitsList=" + limitsList);
    limitsList.empty();
    //alert("ユーザ一覧追加手前");
    //alert("ReportUser_userIdList=" + ReportUser_userIdList);
    for(var i = 0; i<ReportUser_userIdList.length ; i++){
        //alert("ReportUser_userIdList" + i + "=" + ReportUser_userIdList[i]);
        var li = $(createOptionTagString(i,ReportUser_userIdList[i]));
        limitsList.append(li);
    }

    //alert("limitsList=" + limitsList);

}

/**
  *20121130 #4371 add start
  * 移動
  */
function getId(id) {
    return '#' + id.replace(/(:|\.)/g,'\\\\$1');
}

//権限選択リストの移動
//var collabo = getId('{!$Component.reportDetail.form.block:sectionK:blocksectionK}');
//var collabo = getId('page:form');
var collabo = getId('{!$Component.page.form.block.sectionK.blocksectionK}');

//function move(moveFrom, moveTo, atc){
function moveAuth(moveFrom, moveTo, atc){



    //if($(collabo + '\\:range\\:0').attr('checked')){
    //    $('#part').hide();
    //}else{
    //    $('#part').show();
    //}

    if(atc == 'add'){
        var moveFromMarge =  collabo + '\\:'+ moveFrom + ' option:selected';
        var moveToMarge = collabo + '\\:'+ moveTo;

    }else{
        var moveFromMarge = collabo + '\\:'+ moveFrom + ' option:selected';
        var moveToMarge = collabo + '\\:' + moveTo;
    }

    $(moveFromMarge).each(function(){
        var val = $(this).val();
        var text = $(this).text();
        $(moveToMarge ).append($("<option>").val(val).text(text));
        $(this).remove();
    });

    var addListMarge =  collabo + '\\:addListhidden';
    var newUsers = collabo + '\\:newUsershidden';


    //追加ユーザを格納
    var addItem = '';
    var userNames = '';
    $(collabo + '\\:' +  'added').children().each(function(){
        addItem += ',';
        addItem += $(this).val();
        userNames += ',';
        userNames += $(this).text();
    });

    addItem = addItem.substring(1, addItem.length);
    $(addListMarge).val(addItem);
    $(newUsers).val(userNames.substring(1, userNames.length));

    return false;
}
</script>

                                <div id="tabSecurity" style="overflow: auto; min-width: 97%; height: 730px;display:none;" class="ui-tabs-panel ui-widget-content ui-corner-bottom">

                                    <!-- セキュリティ変更 -->
                                    <apex:pageBlockSection showHeader="false" id="securitySection" title="{!$Label.solxyzcso001__field_010157}" columns="1" collapsible="false">
                                        <!--
                                        <apex:pageblocksection id="security1" columns="1">
                                         -->
                                        <apex:pageBlockSectionItem id="security1">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30012}" />
                                            <apex:selectList id="securityLevel"  value="{!rd.SOLXYZCSO001__securityLevel__c}" size="1" onchange="changeEncryption()" >
                                                <apex:selectOptions value="{!securityLevelSelect}"/>
                                            </apex:selectList>
                                        </apex:pageBlockSectionItem>
                                        <apex:pageBlockSectionItem id="security2">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30013}" />
                                            <span id="security2_text">&nbsp;{!$Label.label_wf_00141}</span>
                                        </apex:pageBlockSectionItem>
                                        <!--
                                        </apex:pageBlockSection>
                                        -->
                                        <!--
                                        <apex:pageblocksection id="securitySection2" columns="1">
                                         -->
                                        <apex:pageBlockSectionItem id="security3">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30014}" />
                                            <apex:outputpanel >
                                                <table width="600px">
                                                    <tr>
                                                        <td>
                                                            <apex:inputCheckbox value="{!pwChkBox}" id="pwChkBox" onchange="chkCHange('pwChk');" />&nbsp;
                                                            <apex:outputText value="{!$Label.solxyzcso001__label_wf_30028}" />
                                                            <apex:inputHidden id="securityPw" value="{!rd.SOLXYZCSO001__SecurityPw__c}" rendered="{!$ObjectType.SOLXYZCSO001__ReportDefinition__c.fields.SOLXYZCSO001__SecurityPw__c.Accessible}"/>
                                                        </td>
                                                    </tr>

                                                    <tr>
                                                        <td>
                                                            <apex:inputCheckbox value="{!mpwChkBox}" id="mpwChkBox" onchange="chkCHange('mpwChk');" />&nbsp;
                                                            <apex:outputText value="{!$Label.solxyzcso001__label_wf_30030}" />
                                                            <apex:inputHidden id="securityMpw" value="{!rd.SOLXYZCSO001__SecurityMpw__c}" rendered="{!$ObjectType.SOLXYZCSO001__ReportDefinition__c.fields.SOLXYZCSO001__SecurityMpw__c.Accessible}"/>
                                                        </td>
                                                    </tr>

                                                </table>
                                            </apex:outputpanel>

                                        </apex:pageBlockSectionItem>
                                        <!--
                                        </apex:pageblocksection>
                                        -->
                                        <!--
                                        <apex:pageBlockSection id="securitySection3" columns="1">
                                         -->
                                        <apex:pageBlockSectionItem id="security10">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30017}" />
                                            <apex:selectList id="securityPrint"  value="{!rd.SOLXYZCSO001__SecurityPrint__c}" size="1" >
                                                <apex:selectOptions value="{!printSelect}"/>
                                            </apex:selectList>
                                        </apex:pageBlockSectionItem>
                                        <apex:pageBlockSectionItem id="security11">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30018}" />
                                            <apex:selectList id="securityEdit"  value="{!rd.SOLXYZCSO001__SecurityEdit__c}" size="1">
                                                <apex:selectOptions value="{!permissionSelect}"/>
                                            </apex:selectList>
                                        </apex:pageBlockSectionItem>
                                        <apex:pageBlockSectionItem id="security12">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30019}" />
                                            <apex:selectList id="securityAssembly"  value="{!rd.SOLXYZCSO001__SecurityAssembly__c}" size="1">
                                                <apex:selectOptions value="{!permissionSelect}"/>
                                            </apex:selectList>
                                        </apex:pageBlockSectionItem>
                                        <apex:pageBlockSectionItem id="security13">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30020}" />
                                            <apex:selectList id="securityCopy"  value="{!rd.SOLXYZCSO001__SecurityCopy__c}" size="1">
                                                <apex:selectOptions value="{!permissionSelect}"/>
                                            </apex:selectList>
                                        </apex:pageBlockSectionItem>
                                        <apex:pageBlockSectionItem id="security14">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30021}" />
                                            <apex:selectList id="securityAccessibility"  value="{!rd.SOLXYZCSO001__SecurityAccessibility__c}" size="1">
                                                <apex:selectOptions value="{!permissionSelect}"/>
                                            </apex:selectList>
                                        </apex:pageBlockSectionItem>
                                        <apex:pageBlockSectionItem id="security15">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30022}" />
                                            <apex:outputText value="{!$Label.solxyzcso001__label_wf_30027}" />
                                        </apex:pageBlockSectionItem>
                                        <apex:pageBlockSectionItem id="security16">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30023}" />
                                            <apex:selectList id="securityNote"  value="{!rd.SOLXYZCSO001__SecurityNote__c}" size="1">
                                                <apex:selectOptions value="{!permissionSelect}"/>
                                            </apex:selectList>
                                        </apex:pageBlockSectionItem>
                                        <apex:pageBlockSectionItem id="security17">
                                            <apex:outputLabel value="{!$Label.solxyzcso001__label_wf_30024}" />
                                            <apex:selectList id="securityFf"  value="{!rd.SOLXYZCSO001__SecurityFt__c}" size="1">
                                                <apex:selectOptions value="{!permissionSelect}"/>
                                            </apex:selectList>
                                        </apex:pageBlockSectionItem>
                                        <!--
                                        </apex:pageBlockSection>
                                         -->
                                    </apex:pageBlockSection>


                                </div>

                            </div>
<!-- セキュリティタブ END -->
                        </apex:pageBlock>
<!-- apex:pageBlick END -->
                    </apex:form>
<!-- apex:form END -->
                </div>
            </div>

        </td>
    </tr>
</tbody>
<!-- table #MainDiv -->
</table>

<div id="searchOptionDialog" style="display: none; overflow:bisible;" >
    <div id="searchOptionErrorMsg" />
    <table id="innerTable" width="100%" height="100%">
        <tr><td height="70%">
        <table class="searchOptionTable" style="padding-left:10px;" width="100%">
            <tr>
                <th width="25%">{!$Label.label_wr_search_00014}</th>
                <td id="td_sheet_name" style="padding-left:10px;">
                    <label id="opt_sheet_name"></label>
                </td>
            </tr>
            <tr><th></th><td></td></tr>
            <tr>
                <th>{!$Label.label_wr_search_00015}</th>
                <td id="td_object_name" style="padding-left:10px;">
                    <label id="opt_object_name"></label>
                </td>
            </tr>
            <tr><th></th><td></td></tr>
            <tr>
                <th>{!$Label.label_wr_search_00016}</th>
                <td id="td_item_name" style="padding-left:10px;">
                    <label id="opt_item_name"></label>
                </td>
            </tr>
            <tr>
                <th></th>
                <td><input type="hidden" id="opt_item_type" name="opt_item_type" /></td>
            </tr>
            <tr>
                <th>{!$Label.label_wr_search_00017}</th>
                <td id="td_operator" style="padding-left:10px;">
                    <div>
                        <select name="opt_operator" id="opt_operator">
                            <option value="none">{!$Label.label_wr_search_none_00013}</option>
                        </select>
                    </div>
                </td>
            </tr>
            <tr>
                <th>{!$Label.label_wr_search_00018}</th>
                <td id="td_value" style="padding-left:10px;">
                    <input name="opt_value" id="opt_value" type="text" maxlength="100" class="c_text_l" />
                </td>
            </tr>
        </table>
        </td></tr>
        <tr><td>
        <div id="actionbuttonrow1">
            <div style="text-align : center;" >
                <button id="opt_button_save" style="font-size:x-small;">{!$Label.field_common_save}</button>&nbsp;
                <button id="opt_button_cancel" style="font-size:x-small;">{!$Label.field_common_cancel}</button>&nbsp;
                <button id="opt_button_clear" style="font-size:x-small;">{!$Label.label_00070}</button>
            </div>
        </div>
        </td></tr>
    </table>
    <input type="hidden" id="overlay_column_id" name="overlay_column_id" />
    <input type="hidden" id="org_operator" name="org_operator" />
    <input type="hidden" id="org_value" name="org_value" />
</div>

<div class="copyright">{!$Label.field_CSO_copyright}</div>

</body>
</html>
</apex:page>