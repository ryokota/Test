<apex:component id="contentsSelectComp" access="global" allowDML="true" controller="SOLXYZCSO001.ContentsSelectCompController">
<apex:outputText escape="false" value="</span>"/>
<apex:attribute name="csoUserInfo" access="global" description="required" assignTo="{!cso_UserInfo}" type="SOLXYZCSO001.CSOUserInfo" required="false"/>

<!-- CSO認証共通モジュール -->
<c:CsoBridgeComp id="csoBridgeComp"/>
<c:CsoScriptComp id="csoScriptComp"/>
<c:CSOSilverlightComp id="csoSilverlightComp"/>

<apex:stylesheet value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'css/jquery-ui-1.8.9.custom.css')}" />
<apex:stylesheet value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'css/ui.jqgrid.css?20121221')}" />
<apex:stylesheet value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'css/common.child.css')}" />
<apex:stylesheet value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'css/document.css')}" />
<apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/jquery.cookie.js')}" />
<apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/jquery-ui-1.8.16.custom.min.js')}" />
<apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/inputCheck.js')}" />

<apex:outputPanel rendered="{!IF(cso_userInfo.showErrPage == true, true, false)}">
<script type="text/javascript">
jQuery.event.add(window, "load", function(){

    var browserType = getBrowserType();

    $("#contentsSelectModal").dialog({autoOpen: false, bgiframe: true, width: 800, modal: true, resizable: false, closeText: "Close", close: function(){cancelOnClick();}});
    $("#contentsSelectModal").dialog("open");

    $('#contentsSelectModal_cancel').unbind().click(function(){
        $("#contentsSelectModal").dialog("close");
        //画面遷移
        top.location.href = '/{!Sf_Id}';
    });

    if('{!cso_userInfo.locale}' == 'en' &&  browserType == 'IE9' ){
        $('.ui-th-div-ie').css("line-height","26px");
    }else{
        $('.ui-th-div-ie').css("line-height","21px");
    }
});

function cancelOnClick(){
    top.window.history.back();
}
</script>
<style type="text/css">
#errorMessageFrame {
    height:450px;
    overflow: hidden;
}
#maintenancePageFrame {
    //height:auto;
}
#contentsSelectModal {
    //height:auto;
}

</style>
    <div id="contentsSelectModal" style="display:none" title="{!$Label.solxyzcso001__label_10531}">
        <apex:iframe src="{!$Page.SOLXYZCSO001__CSO_Error}?code={!cso_userInfo.code}&massage={!cso_userInfo.message}" scrolling="true" id="errorMessageFrame" />
        <p style = "text-align: center;">
             <input type="button" class="btn" id="contentsSelectModal_cancel" value="{!$Label.field_common_ok}"/>
        </p>
    </div>
</apex:outputPanel>

<apex:outputPanel rendered="{!IF(cso_userInfo.showErrPage == false, true, false)}">


<apex:stylesheet value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'css/jquery.treeview.colorado.custom.css')}" />
<apex:stylesheet value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'css/jquery.jqGrid-2rowCell.css')}" />


<apex:outputPanel rendered="{!IF(cso_userInfo.locale == 'ja', true, false)}">
    <apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/grid.locale-ja.js')}" />
</apex:outputPanel>
<apex:outputPanel rendered="{!IF(cso_userInfo.locale == 'en', true, false)}">
    <apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/grid.locale-en.js')}" />
</apex:outputPanel>
<apex:outputPanel rendered="{!IF(cso_userInfo.locale == 'zh', true, false)}">
    <apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/grid.locale-zh.js')}" />
</apex:outputPanel>
<apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/jquery.jqGrid.min.js')}" />

<apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/jquery.treeview.js')}" />
<apex:includeScript value="{!URLFOR($Resource.SOLXYZCSO001__cso, 'js/jquery.treeview.cso-async.js')}" />


<script type="text/javascript">
var DATA_DELIM =',';
var fileIdList ='';
var space_portal_ref_space_idCS = '';
var asrtCS = '';
// 初期関連リスト
var relatedDocList = [];
var relatedSpaceidList = [];
// 編集中関連リスト
var updatingRelatedDocList = [];
var processContinueFlag = false;
var originalDocList = [];
var b4d_nowId;
var uploadFlg = false;
var selectSpaceList = [];

jQuery.event.add(window, "load", function(){

    var browserType = getBrowserType();

    b4d_nowId = "";
    //----------------------------//
    //  コンテンツ選択ダイアログ  //
    //----------------------------//

    //ページ読み込み時完了するまでボタンを無効にする
    $("#createSpaceButton").attr("disabled", "disabled");
    $("#createSpaceButton").css({color:"gray"});
    $("#uploadButton").attr("disabled", "disabled");
    $("#uploadButton").css({color:"gray"});

    $("#contentsSelectModal").dialog({autoOpen: false, bgiframe: true, width: 800, modal: true, resizable: false, closeText: "Close", close: function(){cancelOnClick();}});
    $('#contentsSelectModal_ok').unbind().click(function(){
        var deleteIdList = [];
        var insertIdList = [];

        if(updatingRelatedDocList == null || updatingRelatedDocList == '' || updatingRelatedDocList == '[""]'){
            deleteIdList = relatedDocList;
        } else if(relatedDocList == null || relatedDocList == '' || relatedDocList == '[""]') {
            insertIdList = updatingRelatedDocList;
        } else {
            insertIdList = extractDifference(updatingRelatedDocList, relatedDocList);
            deleteIdList = extractDifference(relatedDocList, updatingRelatedDocList);
        }

        if((insertIdList == null || insertIdList == '' || insertIdList == '[""]')&&(deleteIdList == null || deleteIdList == '' || deleteIdList == '[""]')){
            top.window.history.back();
        }

        if(insertIdList != null && insertIdList != '' && insertIdList != '[""]'){
            fileIdList = insertIdList.join(DATA_DELIM);
            if(deleteIdList != null && deleteIdList != '' && deleteIdList != '[""]'){
                processContinueFlag = true;
            }
            // 登録
            registContentsList(fileIdList);
        }
        fileIdList = '';

        if(deleteIdList != null && deleteIdList != '' && deleteIdList != '[""]'){
            fileIdList = deleteIdList.join(DATA_DELIM);
            // 削除
            deleteContentsList(fileIdList);
        }
        fileIdList = '';
    });

    $('#contentsSelectModal_cancel').unbind().click(function(){
          $("#contentsSelectModal").dialog("close");
          //画面遷移
          if('{!retURL}'==''||'{!retURL}'==null){
            top.location.href = '/{!Sf_Id}';
          }else{
            top.location.href = '{!salesforceBaseUrl}{!retURL}';
          }
      });

    // 関連付けコンテンツのリスト取得
    var callback =  function(data){
        var idList = "";
        for(var i=0; i<data.rows.length; i++){
            relatedDocList.push(data.rows[i].id);
            relatedSpaceidList.push(data.rows[i].spaceid);
            updatingRelatedDocList.push(data.rows[i].id);
            idList = idList + ' ' + data.rows[i].id;

            //ツリーの選択状態を更新
            var o = data.rows[i].spaceid
            selectSpaceList.push(o);
            if (o === "") {continue;}
            if(!$("#a_" + o).hasClass("selectedContentsSpace")){
                $("#a_" + o).addClass("selectedContentsSpace");
                $("#a_" + o).append("<img src='" + "{!URLFOR($Resource.cso, 'image/apply.png')}" + "' class= 'checkMarkImg' id='x_"+ o +"'>");
            }
        }
    };

    var callerror =  function(data){
        alert(data);
    };
    secureGetAsync('/contentsmanagement/ContentsRelationListGet.json', {"objid": "{!Sf_ID}", "sidx": "name"}, callback, callerror);

    // asrtとspaceidの初期値を入力(マイスペース)
    asrtCS = "MY";
    space_portal_ref_space_idCS = "{!cso_userInfo.mySpaceId}";

    $("#contentsList").jqGrid({
        datatype: "jsonp",
        url: _apiUrl + '/contentsmanagement/SpaceContentsListV2Get.json?caller=contentsAttach',
        postData : {
            spaceId : space_portal_ref_space_idCS,
            asrt : asrtCS
        },
        jsonReader :{ repeatitems: false, id : "id"},
        colNames:[ '',
                   '{!$Label.label_10081}',
                   '{!$Label.label_10140}',
                   '{!$Label.label_10804}',    //作成
                   '{!$Label.label_10805}',    //更新
                   '{!$Label.label_10014}',    //作成日時
                   '{!$Label.label_10018}'],   //更新日時
        colModel:[ {name:'id', index:'id', hidden:true},
                   {name:'noaname', index:'name', width:400},
                   {name:'size', index:'size', align:"right", hidden:true},
                   {name:'rinfo', index:'rdate', align:"center", hidden:true},
                   {name:'uinfo', index:'udate', align:"center", hidden:true},
                   {name:'rdate', index:'rdate', align:"center", hidden:true},
                   {name:'udate', index:'udate', width:115, align:"center"}
                 ],
        rowNum: 10,
        height: 300,
        rowList:[10,50,100],
        sortname: 'name',
        pager: '#contentsListPager',
        viewrecords: true,
        multiselect: true,
        multiboxonly: true,
        autowidth : true,
        shrinkToFit : true,
//        onSelectRow : function(id, b_check) {
//            if(id.indexOf("SPACE_") == -1){
//                checkfnc(id, b_check);
//            } else {
//                // 選択された行がスペースだった場合、選択を全解除した後updatingRelatedDocListに従って再選択
//                $("#contentsList").resetSelection();
//                selectContents(updatingRelatedDocList);
//            }
//        },
//        onSelectAll : function(ids, b_check) {
//            var spaceExists = false;
//            for(var z=0; z<ids.length; z++){
//               if(ids[z].indexOf("SPACE_") == -1){
//                    checkfnc(ids[z], b_check);
//                } else {
//                    spaceExists = true;
//                }
//            }
//            // 全選択にスペースが含まれている場合、更新したupdatingRelatedDocListに従って再選択
//            if(spaceExists){
//                $("#contentsList").resetSelection();
//                selectContents(updatingRelatedDocList);
//            }
//        },
        onSelectRow : function(id, b_check) {
            checkfnc(id, b_check);
        },
        onSelectAll : function(ids, b_check) {
            for(var z=0; z<ids.length; z++){
                checkfnc(ids[z], b_check);
            }
        },
        loadComplete : function(data) {
            try{
                selectContents(updatingRelatedDocList);
                space_portal_ref_space_idCS = data.spaceId;
                asrtCS = data.asrt;
                changeCurrentTreeColor(data.spaceId);
                if(data.addContents){
                    $("#uploadButton").removeAttr("disabled");
                    $("#uploadButton").removeAttr("style");
                } else {
                    $("#uploadButton").attr("disabled", "disabled");
                    $("#uploadButton").css({color:"gray"});
                }

                if(data.addSpace){
                    $("#createSpaceButton").removeAttr("disabled");
                    $("#createSpaceButton").removeAttr("style");
                }else{
                    $("#createSpaceButton").attr("disabled", "disabled");
                    $("#createSpaceButton").css({color:"gray"});
                }
            }catch(e){
            }
        },
        onRightClickRow: function() {return false;}
    });
//    $("#contentsList").setGridWidth(540);

    loadSpaceTree();
    contentslist_edit();

    if('{!cso_userInfo.locale}' == 'en' &&  browserType == 'IE9' ){
        $('.ui-th-div-ie').css("line-height","26px");
    }else{
        $('.ui-th-div-ie').css("line-height","21px");
    }
});

//==========================//
// 選択スペースの文字色変更 //
//==========================//
function changeCurrentTreeColor(id){
    if(!id){
        return;
    }

    $(".folder a, .folderShare a").each(function(){
        var orgid = $(this).attr("id");
        orgid = orgid.slice(2);
        if(id == orgid){
            $(this).css({color:"red"});
        }else{
            $(this).css({color:"black"});
        }
    });
}

//==========================//
//  関連コンテンツの登録    //
//==========================//
function registContentsList(updateFileIdList){
    var params={
        "objid"      : "{!JSENCODE(Sf_ID)}",
        "objname"    : "{!JSENCODE(Sf_name)}",
        "obj_catname": "{!JSENCODE(Sf_typeName)}",
        "docids"     : updateFileIdList,
//        "subordinate": $("#includeSubSpace").attr("checked")
    };

    var callback = function(data){
        CsoScript_loadingStop();

        var err_msg='{!$Label.msg_01055}';
        var errorNames='';
        for(var idx in data["failed"]){
            errorNames+= '\n ' + data["failed"][idx];
        }
        err_msg += errorNames;

        if(data["result"] == false){
            alert(err_msg);
            //画面遷移
            return;
        }

        var succeeded_msg='{!$Label.msg_01052}';
        var succeededNames='';
        for(var idx in data["succeeded"]){
            succeededNames += '\n ' + data["succeeded"][idx];
        }
        succeeded_msg += succeededNames;

        if(errorNames.length>0){
            succeeded_msg += '\n' + err_msg;
        }
        afterRecord();
/*
        // 活動履歴登録
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ContentsSelectCompController.insTask}',
            '{!Sf_ID}', 'Regist', succeeded_msg,
            function(data, event){
                afterRecord();
            },
            {escape: true}
        );
*/
    };
    var callerror =  function(data){
        alert(data["message"]);
        CsoScript_loadingStop();
        return;
    };

    CsoScript_loadingStart();
    secureGetAsync("/contentsmanagement/contentsRelationAdd.json", params, callback, callerror);
}

//==========================//
//  コンテンツの関連解除    //
//==========================//
function deleteContentsList(deleteFileIdList){
    var params={
        "objid"      : "{!JSENCODE(Sf_ID)}",
        "objname"    : "{!JSENCODE(Sf_name)}",
        "obj_catname": "{!JSENCODE(Sf_typeName)}",
        "docids"     : deleteFileIdList,
    };

    var callback = function(data){
        CsoScript_loadingStop();

        var err_msg='{!$Label.msg_01055}';
        var errorNames='';
        for(var idx in data["failed"]){
            errorNames+= '\n ' + data["failed"][idx];
        }
        err_msg += errorNames;

        if(data["result"] == false){
            alert(err_msg);
            afterRecord();
            //画面遷移
            return;
        }

        var succeeded_msg='{!$Label.msg_01053}';
        var succeededNames='';
        for(var idx in data["succeeded"]){
            succeededNames += '\n ' + data["succeeded"][idx];
        }
        succeeded_msg += succeededNames;

        if(errorNames.length>0){
            succeeded_msg += '\n' + err_msg;
        }
        afterRecord();
/*
        // 活動履歴登録
         Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ContentsSelectCompController.insTask}',
            '{!Sf_ID}', 'Delete', succeeded_msg,
            function(data, event){
                afterRecord();
            },
            {escape: true}
        );
*/
    };
    var callerror =  function(data){
        alert(data["message"]);
        CsoScript_loadingStop();
        return;
    };

    CsoScript_loadingStart();
    secureGetAsync("/contentsmanagement/contentsRelationDelete.json", params, callback, callerror);
}

//==========================//
//  コンテンツの選択        //
//==========================//
function contentslist_edit(){
    $("#contentsList").jqGrid("setGridParam", { url: _apiUrl + '/contentsmanagement/SpaceContentsListV2Get.json?asrt=my&caller=contentsAttach'});
    $("#contentsList").trigger("reloadGrid");

    $("#contentsSelectModal").dialog("open");
}


function applyCheckImageToSpaceTree(){
	for(var o = 0; o < selectSpaceList.length; o++){
	    var lookup = false;
	    $("#spaceTreeArea").find('li').each(function() {
	        if ($(this).attr("id") == selectSpaceList[o]) {
	            lookup = true;
	            return false;
	        }
	    });
	    if (lookup) {
	        if(!$("#a_" + selectSpaceList[o]).hasClass("selectedContentsSpace")){
	            $("#a_" + selectSpaceList[o]).addClass("selectedContentsSpace");
	            $("#a_" + selectSpaceList[o]).append("<img src='" + "{!URLFOR($Resource.cso, 'image/apply.png')}" + "' class = 'checkMarkImg' id='x_"+ selectSpaceList[o] +"'>");
	        }
	    }
	}
}

//==========================//
//  スペースツリーの初期化  //
//==========================//
function loadSpaceTree(){
    $("spaceTree").html("");
    var callback =  function(data){
        if(data["result"] == false){
            if((data["message"] != null) && (data["message"] != "")){
                alert(data["message"]);
            }
            return;
        }

        var branches = $("#spaceTree").html(data["tree"]);
        $("#spaceTree").treeview({
            animated: "fast",
            collapsed: true,
            unique: false,
            add: branches,
            url: "/contentsmanagement/SpaceTreeChildrenApi.json",
            asrt:"CONTENTSATTACH",
            callback: function(elements){
                setTimeout(function(){
//                    uploadFlg = true;
                    selectContents(updatingRelatedDocList);
                    applyCheckImageToSpaceTree();
                },100);
            },
        });
        applyCheckImageToSpaceTree();
    }
    secureGetAsync('/contentsmanagement/SpaceTreeRootApi.json', {"asrt":"CONTENTSATTACH", "itemsType":1, "itemsIds":"", "returnType":"html" }, callback);
}

//============================//
//  スペースツリーのリロード  //
//============================//
function reloadTree(){
    $("spaceTree").html("");
    var callback =  function(data){
        if(data["result"] == false){
            if((data["message"] != null) && (data["message"] != "")){
                alert(data["message"]);
            }
            return;
        }

        var branches = $("#spaceTree").html(data["tree"]);
        $("#spaceTree").treeview({
            animated: "fast",
            add: branches,
            url: "/contentsmanagement/SpaceTreeChildrenApi.json",
            asrt:"CONTENTSATTACH",
            callback: function(elements){
                setTimeout(function(){
//                    uploadFlg = true;
                    selectContents(updatingRelatedDocList);
                    applyCheckImageToSpaceTree();
                },100);
            },

        });
        applyCheckImageToSpaceTree();
//        uploadFlg = true;
        selectContents('');
    }
    secureGetAsync('/contentsmanagement/SpaceTreeRootApi.json', {"asrt":"CONTENTSATTACH", "itemsType":1, "itemsIds":"", "returnType":"html" }, callback);
}

//============================//
//  コンテンツ一覧のリロード  //
//============================//
function change_attach_space(asrtCDS, id){
    b4d_nowId = id;
    $("#contentsList").jqGrid("setGridParam", { url: _apiUrl + '/contentsmanagement/SpaceContentsListV2Get.json?caller=contentsAttach&spaceId=' + id + '&asrt=' + asrtCDS});
    $("#contentsList").trigger("reloadGrid");
}

function reload(spaceId, asrtRL){
    $("#listViewArea").show();
    $("#listView1").setGridParam({url : _apiUrl + '/contentsmanagement/spaceContentsListV2Get.json?caller=contentsAttach',
                                  page : 1,
                                  postData : { spaceId : spaceId,
                                               asrt : asrtRL,
                                               searchstr : $('#keywords').val()
                                             }
                                  }).trigger("reloadGrid");
}

//==============//
//  キャンセル  //
//==============//
function cancelOnClick(){
    top.window.history.back();
    /*
    if(top.window.opener == null){
        //  戻る
        top.window.history.back();
    }
    else{
        //  windowクローズ
        top.window.close();
    }
    */
}

//=============================//
//  securePostAsyncの呼び出し  //
//=============================//
function callSecurePostAsync(url, param, callback, callerror){
    if(getBrowserType() == 'Chrome'){
        if(typeof(param) == 'string'){
            param = JSON.parse(param);
        }
        xhr2Access(url, param, true, false, callback, callerror);
        return;
    }
    if(top.window.opener == null){
        securePostAsync(url, param, callback, callerror);
    } else{
        top.window.opener.securePostAsync(url, param, callback, callerror);
    }
}

var win;
var timerId;

//================//
//  アップロード  //
//================//
function contentsRegWinOpen(){
uploadFlg = true;
    win = window.open('{!$Page.AddContent}'+'?spaceId=' + space_portal_ref_space_idCS, 'contentsRegWin',  'width=743, height=670, menubar=no, toolbar=no, scrollbars=yes');
    originalDocList = $("#contentsList").getDataIDs();

    if(!win.closed){
        timerId = setInterval(reloadNowParentWindow, 1000);
    }
}

//================//
//  リロード処理  //
//================//
function reloadNow(){
//    uploadFlg = true;
    $("#contentsList").jqGrid("setGridParam", { url: _apiUrl + '/contentsmanagement/SpaceContentsListV2Get.json?caller=contentsAttach&asrt=' + asrtCS + '&spaceId=' + space_portal_ref_space_idCS});
    $("#contentsList").trigger("reloadGrid");
    changeCurrentTreeColor(space_portal_ref_space_idCS);
}

/**
 * 子ウィンドウが閉じたときに親ウィンドウをリロードする
 */
function reloadNowParentWindow(){
    if(win.closed){
        clearInterval(timerId);
        reloadNow();
    }
}
//================//
//  スペース登録  //
//================//
function registSpace(){
    originalDocList = $("#contentsList").getDataIDs();
    init_space_create();
}

//======================//
//  コンテンツ選択状態  //
//======================//
function selectContents(selectDocList){
    var IsSelect = false;
    for (var j in selectDocList) {
        var initId = selectDocList[j];
        var ids = $("#contentsList").getDataIDs();
        for (var k in ids) {
            var rowData = $("#contentsList").getRowData(ids[k]);
            if (initId == rowData.id) {
                $("#contentsList").setSelection(ids[k]);
                IsSelect = true;
                break;
            }
        }
    }

    //アップロードファイルを関連付けする
    if(uploadFlg == true){
        uploadFlg = false;
        var ids = $("#contentsList").getDataIDs();
        var IsOrg = false;
        for (var j in ids) {
            var rowData = $("#contentsList").getRowData(ids[j]);
            var docid = rowData.id;
            if(typeof docid === "undefined"){continue;}
            for (var k in originalDocList) {
                if (docid == originalDocList[k]) {
                    IsOrg = true;
                    break;
                }
            }
            if(IsOrg == false){
                if(docid.indexOf("DOC_") == 0){
                    $("#contentsList").setSelection(ids[j]);
                }
            }
            IsOrg = false;
        }
        for (var i in selectSpaceList) {
            var spaceId = selectSpaceList[i];
            if(!$("#a_" + spaceId).hasClass("selectedContentsSpace")){
                $("#a_" + spaceId).addClass("selectedContentsSpace");
                $("#a_" + spaceId).append("<img src='" + "{!URLFOR($Resource.cso, 'image/apply.png')}" + "' class= 'checkMarkImg' id='x_"+ spaceId +"'>");
            }
        }
    }
}

//===================================================================//
//  差分抽出用function                                               //
//  firstListにあってsecondListに無いものの一覧をListにして抽出する  //
//===================================================================//
function extractDifference(firstList, secondList){

    var resultList = [];
    for(var p=0; p<firstList.length; p++){
        if(secondList.length == 0){
            resultList = firstList;
            break;
        }
        for(var q=0; q<secondList.length; q++){
            if(firstList[p] == secondList[q]){
                break;
            }
            if(q == secondList.length-1){
                // 合致するものが無かった場合、Listに追加
                resultList.push(firstList[p]);
            }
        }
    }
    return resultList;
}

//===================================================================//
//  行選択解除用function                                             //
//  行が選択/解除された際に、updatingRelatedDocListを更新する        //
//  行が選択された場合isTrueはtrue、解除された場合b_checkはfalse    //
//===================================================================//
function checkfnc(checkId, isTrue){
    if(isTrue){
        // 選択された場合
        var exists = false;
        for (var l=0; l<updatingRelatedDocList.length; l++) {
            if(updatingRelatedDocList[l] == checkId){
                exists = true;
                break;
            }
        }
        if(!exists){
            updatingRelatedDocList.push(checkId);
            //ツリーの選択状態
            if(b4d_nowId != ""){
                if(!$("#a_" + b4d_nowId).hasClass("selectedContentsSpace")){
                    $("#a_" + b4d_nowId).addClass("selectedContentsSpace");
                    $("#a_" + b4d_nowId).append("<img src='" + "{!URLFOR($Resource.cso, 'image/apply.png')}" + "' class= 'checkMarkImg' id='x_"+ b4d_nowId +"'>");
                    selectSpaceList.push(b4d_nowId);
                }
            }
        }
    } else {
        // 選択解除された場合
        for (var l=0; l<updatingRelatedDocList.length; l++) {
            if(updatingRelatedDocList[l] == checkId){
                // l番目の要素を削除
                updatingRelatedDocList.splice(l, 1);
                break;
            }
        }

        //ツリーの選択解除
        if(b4d_nowId != ""){
            var ids = $("#contentsList").jqGrid("getGridParam","selarrrow");
            if(ids.length == 0){
                $("#a_" + b4d_nowId).removeClass("selectedContentsSpace");
                $("#x_" + b4d_nowId).remove();
                for(i = 0; i < selectSpaceList.length; i++){
                    if(selectSpaceList[i] == b4d_nowId){
                        selectSpaceList.splice(i,1);
                    }
                }
            }
        }
    }
}

//===================================================================//
//  活動履歴完了後function                                           //
//  画面遷移のタイミングを処理終了後に同期するためのメソッド         //
//===================================================================//
function afterRecord(){
    if(processContinueFlag){
        processContinueFlag = false;
    } else {
        cancelOnClick();
        if('{!retURL}'==''||'{!retURL}'==null){
            top.location.href = '/{!Sf_Id}';
        }else{
            top.location.href = '{!SalesforceBaseUrl}{!retURL}';
        }
    }
}
</script>

<style type="text/css">
.tree_div{
    border : 1px solid #ccc;
    font-size : 96%;
    padding : 0 0 0 3px;
    margin: 5px 5px 5px 3px;
    height : 340px;
    width : 200px;
    max-width : 200px;
    min-width : 200px;
    overflow : auto;
    overflow-x : auto;
    overflow-y : auto;
    -ms-overflow-x : auto;
    -ms-overflow-y : auto;
}

.jqGridIcon{
    margin: 3px;
}

.tree_control {
    text-align: right;
    width: 210px;
}
.selectedContentsSpace {
    font-weight: bold !important;
}
.folder {
    position: relative ;
}

.checkMarkImg {
    position: absolute !important;
    width:16px !important;
    top: -2px !important;
    left: 0px !important;
}
</style>


<apex:variable var="Sf_ID"   id="Sf_ID"   value="{!$CurrentPage.parameters.id}"/>
<apex:variable var="Sf_name" id="Sf_name" value="{!Sf_name}"/>
<apex:variable var="Sf_type" id="Sf_type" value="{!Sf_type}"/>
<apex:variable var="Sf_typeName" id="Sf_typeName" value="{!Sf_typeName}"/>
<apex:variable var="pageType" id="pageType" value="{!pageType}"/>

    <!-- コンテンツ選択 -->
    <div id="contentsSelectModal" style="display:none" title="{!$Label.label_10531}">
        <table>
            <tr>
                <td valign="top" style="width:200px;">
                    <div id="spaceTreeArea" class="tree_div">
                        <ul id="spaceTree"  class="filetree treeview" >
                        </ul>
                    </div>
                </td>

                <td valign="top" style="padding-left: 1em; border-left: solid; border-width: 1px;">
                    <div>
                        <table id="contentsList"></table>
                        <div   id="contentsListPager"></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td align="center" nowrap="nowrap">
                    <!-- <input type="checkbox" id="includeSubSpace"/><label for="includeSubSpace">{!$Label.label_10539}</label>    下位スペースのコンテンツも選択 -->
                    <input type="button" class="btn c_commandButton" id="createSpaceButton"     value="{!$Label.label_10177}" onclick="registSpace();"/>
                    <input type="button" class="btn c_commandButton" id="uploadButton" value="{!$Label.label_10141}" onclick="contentsRegWinOpen();"/>
                    <input type="button" class="btn" id="contentsSelectModal_ok"     value="{!$Label.field_common_ok}"/>
                    <input type="button" class="btn" id="contentsSelectModal_cancel" value="{!$Label.label_00058}"/>
                </td>
            </tr>
        </table>
    </div>
</apex:outputPanel>

<apex:outputText escape="false" value="<span>"/>
<c:ContentsSelectPluploadComp id="contentsSelectPluploadComp" rendered="{!pluploadFlag}"/>
</apex:component>